var A = "bGV0IHVEbGdzPVtdLHVCb29sPVtdLHVGbHQ9W10sdUludD1bXSx1RnVuY3M9W10sdUludDI9W10sdVRhYnM9e30scElkPSIiLGRBdmF0YXI9Imh0dHBzOi8vY2RuLmpzZGVsaXZyLm5ldC9naC9Db2xhQ2FwcmljaG9zYS9GUFdMUi9sb2dhcmRvLnBuZyIsaEFsaWFzPSExLGNVc2VyQWxpYXM9ITEsY1VzZXJSb2xlPTAsbE1zZz0wLGxNc2dQcml2PTAsZlNuZD0wLGZVc2VyQ2Q9MCxsVXNlclNlbGVjdGVkQ2hhdD1udWxsLGxVU0NDcmVhdGVkPSEwLGxVU0NEYXRlPW51bGwsaXRlckZvdW5kPTAsd0dhbWVGb3VuZD0hMSxpc1dpbmRvd1Zpcz0hMCxpc01vdXNlSW5zaWRlPSExLGlzTW91c2VWaXM9ITEscmVzaXplRXZlbnQ9ITEsY3VyV2lkdGg9d2luZG93LmlubmVyV2lkdGh8fDk5OTtjb25zdCAkTFM9e2dldDplPT5sb2NhbFN0b3JhZ2UuZ2V0SXRlbShlKSxnZXQyOmU9PnN0clRvQm9vbCgkTFMuZ2V0KGUpKXx8ITEsc2V0OihlLHQpPT5sb2NhbFN0b3JhZ2Uuc2V0SXRlbShlLHQpLHJlbW92ZTplPT5sb2NhbFN0b3JhZ2UucmVtb3ZlSXRlbShlKX0sJGxvZz0oLi4uZSk9Pihjb25zb2xlLmxvZyhgG1szNm1bJHsobmV3IEVycm9yKS5zdGFjay5zcGxpdCgiXG4iKVsyXS50cmltKCl9XRtbMG0gLT5gLC4uLmUpLCJ1d3UiKSwkaWQ9ZT0+ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoZSk7ZnVuY3Rpb24gJGNsaWNrKGUpeyRpZChlKT8kaWQoZSk/LmNsaWNrKCk6JGxvZygiJGNsaWNrOiIsZSwiZG9lc250IGV4aXN0Iil9Y29uc3QgJGVsbT1lPT5kb2N1bWVudC5jcmVhdGVFbGVtZW50KGUpO2Z1bmN0aW9uICRybmQoZT04KXtsZXQgdD0iIjt0PSIiO2ZvcihsZXQgaT0wO2k8ZTtpKyspdCs9IkFCQ0RFRkdISUpLTE1OT1BRUlNUVVZXWFlaYWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXowMTIzNDU2Nzg5Ii5jaGFyQXQoTWF0aC5mbG9vcig2MipNYXRoLnJhbmRvbSgpKSk7cmV0dXJuIHR9YXN5bmMgZnVuY3Rpb24gem5HZXQoZSx0PSIiKXtyZXR1cm4gbmV3IFByb21pc2UoKChpLG4pPT57JC5nZXQoIi90b2dnbGU/ZmVhdHVyZT0iK2UrIiZ2YWw9Iit0LChlPT57aShlKX0pKS5mYWlsKChlPT57bihlKX0pKX0pKX1mdW5jdGlvbiB6bkluZm8oZSx0PSIiLGk9bnVsbCl7JC5nZXQoIi9nX2luZm8/aW5mbz0iK2UsKG49PntudWxsIT0kaWQoaXx8ZSkmJigkaWQoaXx8ZSkuaW5uZXJIVE1MPXQrbixpc1ZpcyhpfHxlKSYmc2V0VmlzKGl8fGUpKX0pKX1jb25zdCAkdGltZT17aW50OigpPT5NYXRoLnJvdW5kKCtuZXcgRGF0ZS8xZTMpLHllYXJOTW9udGg6KCk9Pntjb25zdCBlPW5ldyBEYXRlO3JldHVybmAke2UuZ2V0RnVsbFllYXIoKX1uJHtgJHtlLmdldE1vbnRoKCkrMX1gLnBhZFN0YXJ0KDIsIjAiKX1gfSxzdHI6KGUsdD0xKT0+e2xldCBpPW5ldyBEYXRlKDFlMyorZSk7aWYoMT09dClyZXR1cm4oIjAiK2kuZ2V0SG91cnMoKSkuc3Vic3RyKC0yKSsiOiIrKCIwIitpLmdldE1pbnV0ZXMoKSkuc3Vic3RyKC0yKTtpZigyPT10KXtsZXQgZT0oIjAiK2kuZ2V0SG91cnMoKSkuc3Vic3RyKC0yKSx0PSgiMCIraS5nZXRNaW51dGVzKCkpLnN1YnN0cigtMiksbj1pLmdldEZ1bGxZZWFyKCksbD0oIjAiKyhpLmdldE1vbnRoKCkrMSkpLnN1YnN0cigtMik7cmV0dXJuKCIwIitpLmdldERhdGUoKSkuc3Vic3RyKC0yKSsiLyIrbCsiLyIrbisiIC0gIitlKyI6Iit0fXtsZXQgZT1pLmdldEZ1bGxZZWFyKCksdD0oIjAiKyhpLmdldE1vbnRoKCkrMSkpLnN1YnN0cigtMik7cmV0dXJuKCIwIitpLmdldERhdGUoKSkuc3Vic3RyKC0yKSsiLyIrdCsiLyIrZX19fSwkdGJsPXtzZWFyY2g6KGUsdCk9PntsZXQgaSxuLGwsYSxzLG8scixkO2ZvcihpPSRpZChlKSxuPWkudmFsdWUudG9VcHBlckNhc2UoKSxsPSRpZCh0KSxhPWwuZ2V0RWxlbWVudHNCeVRhZ05hbWUoInRyIiksbz0xO288YS5sZW5ndGg7bysrKWZvcihhW29dLnN0eWxlLmRpc3BsYXk9Im5vbmUiLHM9YVtvXS5nZXRFbGVtZW50c0J5VGFnTmFtZSgidGQiKSxyPTA7cjxzLmxlbmd0aDtyKyspaWYoc1tyXSYmKGQ9c1tyXS50ZXh0Q29udGVudHx8c1tyXS5pbm5lclRleHQsZC50b1VwcGVyQ2FzZSgpLmluZGV4T2Yobik+LTEpKXthW29dLnN0eWxlLmRpc3BsYXk9IiI7YnJlYWt9fSxzb3J0OihlLHQpPT57bGV0IGksbixsLGEscyxvLHIsZCxjPTA7Zm9yKGk9JGlkKHQpLGw9ITAsZD0iYXNjIjtsOyl7Zm9yKGw9ITEsbj1pLnJvd3MsYT0xO2E8bi5sZW5ndGgtMTthKyspaWYocj0hMSxzPW5bYV0uZ2V0RWxlbWVudHNCeVRhZ05hbWUoIlREIilbZV0sbz1uW2ErMV0uZ2V0RWxlbWVudHNCeVRhZ05hbWUoIlREIilbZV0sImFzYyI9PWQpe2lmKHMuaW5uZXJIVE1MLnRvTG93ZXJDYXNlKCk+by5pbm5lckhUTUwudG9Mb3dlckNhc2UoKSl7cj0hMDticmVha319ZWxzZSBpZigiZGVzYyI9PWQmJnMuaW5uZXJIVE1MLnRvTG93ZXJDYXNlKCk8by5pbm5lckhUTUwudG9Mb3dlckNhc2UoKSl7cj0hMDticmVha31yPyhuW2FdLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKG5bYSsxXSxuW2FdKSxsPSEwLGMrKyk6MD09YyYmImFzYyI9PWQmJihkPSJkZXNjIixsPSEwKX19LGJvZHk6ZT0+ZS5yZXBsYWNlKC+/L2csIjx0ZCAiKS5yZXBsYWNlKC97L2csIjx0ZD4iKS5yZXBsYWNlKC99L2csIjwvdGQ+IikucmVwbGFjZSgvXFsvZywiPHRyPiIpLnJlcGxhY2UoL1xdL2csIjwvdHI+IiksaGVhZDplPT5lLnJlcGxhY2UoL78vZywiPHRoICIpLnJlcGxhY2UoL3svZywiPHRoPiIpLnJlcGxhY2UoL30vZywiPC90aD4iKS5yZXBsYWNlKC9cWy9nLCI8dHI+IikucmVwbGFjZSgvXF0vZywiPC90cj4iKX0sZGxnPXtjcmVhdGU6KGUsdCxpPXtzdHlsZXo6bnVsbCxlbGVtbnQ6bnVsbCxmbmM6bnVsbH0pPT57aWYoInJuZCI9PXQmJih0PSRybmQoKSksY2hlY2tFbG1udChlLHQpKXJldHVybjtjb25zdCBuPSRlbG0oImRpYWxvZyIpO2lmKG4uaWQ9dCxpLnN0eWxleiYmT2JqZWN0LmFzc2lnbihuLnN0eWxlLGkuc3R5bGV6KSxudWxsIT1pLmVsZW1udCYmT2JqZWN0LmtleXMoaS5lbGVtbnQpLmxlbmd0aD4wKWZvcihsZXQgZSBpbiBpLmVsZW1udCl7Y29uc3QgdD1pLmVsZW1udFtlXSxsPSRlbG0odC50eXBlKTtPYmplY3QuYXNzaWduKGwsdC5wcm9wcyksT2JqZWN0LmFzc2lnbihsLnN0eWxlLHQuc3R5bGVzKSxuLmFwcGVuZENoaWxkKGwpfSRpZChlKS5hcHBlbmRDaGlsZChuKSxudWxsIT1pLmZuYyYmaS5mbmMobiksdURsZ3MucHVzaCh0KX0sY2hlY2s6ZT0+e2xldCB0PSRpZChlKTtyZXR1cm4hIXQmJnQuaGFzQXR0cmlidXRlKCJvcGVuIil9LHNob3c6ZT0+e2xldCB0PSRpZChlKTtyZXR1cm4hIXQmJnQuc2hvd01vZGFsKCl9LGNsb3NlOmU9PntsZXQgdD0kaWQoZSk7cmV0dXJuISF0JiZ0LmNsb3NlKCl9LGNsb3NlQnRuOmU9PntjSHIoZSwhMSx7d2lkdGg6IjIwMHB4In0pLGNCdG4oZSwicm5kIiwiPGI+Y2xvc2U8L2I+IiwoKCk9PntkbGcuY2xvc2UoZSl9KSwiIix7d2lkdGg6IjEwMCUifSl9fSwkbT17cGhvbmU6KCk9PntsZXQgZT0hMTt2YXIgdDtyZXR1cm4gdD1uYXZpZ2F0b3IudXNlckFnZW50fHxuYXZpZ2F0b3IudmVuZG9yfHx3aW5kb3cub3BlcmEsKC8oYW5kcm9pZHxiYlxkK3xtZWVnbykuK21vYmlsZXxhdmFudGdvfGJhZGFcL3xibGFja2JlcnJ5fGJsYXplcnxjb21wYWx8ZWxhaW5lfGZlbm5lY3xoaXB0b3B8aWVtb2JpbGV8aXAoaG9uZXxvZCl8aXJpc3xraW5kbGV8bGdlIHxtYWVtb3xtaWRwfG1tcHxtb2JpbGUuK2ZpcmVmb3h8bmV0ZnJvbnR8b3BlcmEgbShvYnxpbilpfHBhbG0oIG9zKT98cGhvbmV8cChpeGl8cmUpXC98cGx1Y2tlcnxwb2NrZXR8cHNwfHNlcmllcyg0fDYpMHxzeW1iaWFufHRyZW98dXBcLihicm93c2VyfGxpbmspfHZvZGFmb25lfHdhcHx3aW5kb3dzIGNlfHhkYXx4aWluby9pLnRlc3QodCl8fC8xMjA3fDYzMTB8NjU5MHwzZ3NvfDR0aHB8NTBbMS02XWl8Nzcwc3w4MDJzfGEgd2F8YWJhY3xhYyhlcnxvb3xzXC0pfGFpKGtvfHJuKXxhbChhdnxjYXxjbyl8YW1vaXxhbihleHxueXx5dyl8YXB0dXxhcihjaHxnbyl8YXModGV8dXMpfGF0dHd8YXUoZGl8XC1tfHIgfHMgKXxhdmFufGJlKGNrfGxsfG5xKXxiaShsYnxyZCl8YmwoYWN8YXopfGJyKGV8dil3fGJ1bWJ8YndcLShufHUpfGM1NVwvfGNhcGl8Y2N3YXxjZG1cLXxjZWxsfGNodG18Y2xkY3xjbWRcLXxjbyhtcHxuZCl8Y3Jhd3xkYShpdHxsbHxuZyl8ZGJ0ZXxkY1wtc3xkZXZpfGRpY2F8ZG1vYnxkbyhjfHApb3xkcygxMnxcLWQpfGVsKDQ5fGFpKXxlbShsMnx1bCl8ZXIoaWN8azApfGVzbDh8ZXooWzQtN10wfG9zfHdhfHplKXxmZXRjfGZseShcLXxfKXxnMSB1fGc1NjB8Z2VuZXxnZlwtNXxnXC1tb3xnbyhcLnd8b2QpfGdyKGFkfHVuKXxoYWllfGhjaXR8aGRcLShtfHB8dCl8aGVpXC18aGkocHR8dGEpfGhwKCBpfGlwKXxoc1wtY3xodChjKFwtfCB8X3xhfGd8cHxzfHQpfHRwKXxodShhd3x0Yyl8aVwtKDIwfGdvfG1hKXxpMjMwfGlhYyggfFwtfFwvKXxpYnJvfGlkZWF8aWcwMXxpa29tfGltMWt8aW5ub3xpcGFxfGlyaXN8amEodHx2KWF8amJyb3xqZW11fGppZ3N8a2RkaXxrZWppfGtndCggfFwvKXxrbG9ufGtwdCB8a3djXC18a3lvKGN8ayl8bGUobm98eGkpfGxnKCBnfFwvKGt8bHx1KXw1MHw1NHxcLVthLXddKXxsaWJ3fGx5bnh8bTFcLXd8bTNnYXxtNTBcL3xtYSh0ZXx1aXx4byl8bWMoMDF8MjF8Y2EpfG1cLWNyfG1lKHJjfHJpKXxtaShvOHxvYXx0cyl8bW1lZnxtbygwMXwwMnxiaXxkZXxkb3x0KFwtfCB8b3x2KXx6eil8bXQoNTB8cDF8diApfG13YnB8bXl3YXxuMTBbMC0yXXxuMjBbMi0zXXxuMzAoMHwyKXxuNTAoMHwyfDUpfG43KDAoMHwxKXwxMCl8bmUoKGN8bSlcLXxvbnx0Znx3Znx3Z3x3dCl8bm9rKDZ8aSl8bnpwaHxvMmltfG9wKHRpfHd2KXxvcmFufG93ZzF8cDgwMHxwYW4oYXxkfHQpfHBkeGd8cGcoMTN8XC0oWzEtOF18YykpfHBoaWx8cGlyZXxwbChheXx1Yyl8cG5cLTJ8cG8oY2t8cnR8c2UpfHByb3h8cHNpb3xwdFwtZ3xxYVwtYXxxYygwN3wxMnwyMXwzMnw2MHxcLVsyLTddfGlcLSl8cXRla3xyMzgwfHI2MDB8cmFrc3xyaW05fHJvKHZlfHpvKXxzNTVcL3xzYShnZXxtYXxtbXxtc3xueXx2YSl8c2MoMDF8aFwtfG9vfHBcLSl8c2RrXC98c2UoYyhcLXwwfDEpfDQ3fG1jfG5kfHJpKXxzZ2hcLXxzaGFyfHNpZShcLXxtKXxza1wtMHxzbCg0NXxpZCl8c20oYWx8YXJ8YjN8aXR8dDUpfHNvKGZ0fG55KXxzcCgwMXxoXC18dlwtfHYgKXxzeSgwMXxtYil8dDIoMTh8NTApfHQ2KDAwfDEwfDE4KXx0YShndHxsayl8dGNsXC18dGRnXC18dGVsKGl8bSl8dGltXC18dFwtbW98dG8ocGx8c2gpfHRzKDcwfG1cLXxtM3xtNSl8dHhcLTl8dXAoXC5ifGcxfHNpKXx1dHN0fHY0MDB8djc1MHx2ZXJpfHZpKHJnfHRlKXx2ayg0MHw1WzAtM118XC12KXx2bTQwfHZvZGF8dnVsY3x2eCg1Mnw1M3w2MHw2MXw3MHw4MHw4MXw4M3w4NXw5OCl8dzNjKFwtfCApfHdlYmN8d2hpdHx3aShnIHxuY3xudyl8d21sYnx3b251fHg3MDB8eWFzXC18eW91cnx6ZXRvfHp0ZVwtL2kudGVzdCh0LnN1YnN0cigwLDQpKSkmJihlPSEwKSxlfSxzdGVhbTooKT0+bmF2aWdhdG9yLnVzZXJBZ2VudC50b0xvd2VyQ2FzZSgpLmluZGV4T2YoInN0ZWFtIik+LTEsdzg6ZT0+bmV3IFByb21pc2UoKHQ9PnNldFRpbWVvdXQodCxlKSkpfSxjc3M9e307ZnVuY3Rpb24gY3JlYXRlU3R5bGUoZSx0LGk9ITEpe3RyeXt0PUpTT04ucGFyc2UodCl9Y2F0Y2goZSl7fWlmKCFlfHwhdClyZXR1cm47Y29uc3Qgbj1lLGw9YCR7bn06aG92ZXJgLGE9JGlkKCJkeW5hbWljQ1NTIikscz1hLmlubmVyVGV4dC5pbmNsdWRlcyhgLiR7bn0ge2ApLG89YS5pbm5lclRleHQuaW5jbHVkZXMoYC4ke2x9IHtgKTtpZihpKXtpZighZXx8IXQpcmV0dXJuO2lmKCF0Lm5vcm1hbCYmIXQuaG92ZXIpcmV0dXJuO2lmKCJzdHJpbmciPT10eXBlb2YgdC5ub3JtYWwmJiFzKXtjb25zdCBpPWAuJHtlfSB7ICR7dC5ub3JtYWx9IH1gO2EuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoaSkpfWlmKCJzdHJpbmciPT10eXBlb2YgdC5ob3ZlciYmIW8pe2NvbnN0IGk9YC4ke2V9OmhvdmVyIHsgJHt0LmhvdmVyfSB9YDthLmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKGkpKX19ZWxzZXtpZihzKSRsb2cobiwiY2xhc3MgYWxyZWFkeSBleGlzdCIpO2Vsc2V7Y29uc3QgZT1bXTtmb3IobGV0IGkgaW4gdClpZigiaG92ZXIiIT09aSYmIm9uY2xpY2siIT09aSl7Y29uc3Qgbj1jc3MuUHJvcGVydHlNYXBwaW5nW2ldfHxpO2UucHVzaChgJHtufTogJHtjc3MudHJhbnNWYWx1ZSh0W2ldKX07YCl9aWYoZS5qb2luKCIgIikubGVuZ3RoPjApe2NvbnN0IHQ9YC4ke259IHsgJHtlLmpvaW4oIiAiKX0gfWA7YS5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZSh0KSl9fWlmKHQuaG92ZXImJiJvYmplY3QiPT10eXBlb2YgdC5ob3Zlcil7Y29uc3QgZT10LmhvdmVyO2lmKG8pJGxvZyhsLCJjbGFzcyBhbHJlYWR5IGV4aXN0Iik7ZWxzZXtjb25zdCB0PVtdO2ZvcihsZXQgaSBpbiBlKXtjb25zdCBuPWNzcy5Qcm9wZXJ0eU1hcHBpbmdbaV18fGk7dC5wdXNoKGAke259OiAke2Nzcy50cmFuc1ZhbHVlKGVbaV0pfTtgKX1pZih0LmpvaW4oIiAiKS5sZW5ndGg+MCl7Y29uc3QgZT1gLiR7bH0geyAke3Quam9pbigiICIpfSB9YDthLmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKGUpKX19fXQub25jbGljayYmInN0cmluZyI9PXR5cGVvZiB0Lm9uY2xpY2smJiRsb2coIm9uY2xpY2sgc3R5bGUiLHQub25jbGljayl9fWNzcy5Qcm9wZXJ0eU1hcHBpbmc9e2JnOiJiYWNrZ3JvdW5kIixiZ0NscjoiYmFja2dyb3VuZC1jb2xvciIsYmdJbWc6ImJhY2tncm91bmQtaW1hZ2UiLGZvbnRXOiJmb250LXdlaWdodCIsZm9udFM6ImZvbnQtc2l6ZSJ9LGNzcy5WYWx1ZU1hcHBpbmc9e3RyYW5zOiJ0cmFuc3BhcmVudCJ9LGNzcy50cmFuc1ZhbHVlPWU9Pntjb25zdCB0PWUuc3BsaXQoIiwiKTtmb3IobGV0IGU9MDtlPHQubGVuZ3RoO2UrKyl7Y29uc3QgaT10W2VdLnRyaW0oKSxuPWNzcy5WYWx1ZU1hcHBpbmdbaV07biYmKHRbZV09bil9cmV0dXJuIHQuam9pbigiLCAiKX0sY3JlYXRlU3R5bGUoInRlc3RDbGFzcyIse2NvbG9yOiJ5ZWxsb3dncmVlbiIsaG92ZXI6e2NvbG9yOiJyZWQifX0pLGNyZWF0ZVN0eWxlKCJockNsYXNzIix7bm9ybWFsOiJib3JkZXItdG9wOiAxcHggc29saWQgdmFyKC0tYy1ocik7IGJvcmRlci1yaWdodDogMHB4OyBib3JkZXItYm90dG9tOiAwcHg7IGJvcmRlci1sZWZ0OiAwcHg7IGJvcmRlci1pbWFnZTogaW5pdGlhbDsgb3BhY2l0eTogMC4yOyBwYWRkaW5nLXRvcDogMHB4OyBwYWRkaW5nLWJvdHRvbTogMHB4OyIsaG92ZXI6Im9wYWNpdHk6MS4wOyJ9LCEwKSxjcmVhdGVTdHlsZSgiaGVhZGVyQ2xzIix7bm9ybWFsOiJkaXNwbGF5OiBncmlkO1xuZ3JpZC1hdXRvLWZsb3c6IGNvbHVtbjtcbmdhcDogNXB4O1xud2lkdGg6IGZpdC1jb250ZW50O1xubWFyZ2luOiA1cHg7XG5tYXJnaW4tdG9wOiAxNXB4O1xubWFyZ2luLWJvdHRvbTogMjBweDtcbmJveC1zaGFkb3c6IDAgMHB4ICNmZmZmZmYsIDAgMCAxM3B4IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4xOTIpO1xuYm9yZGVyLXJhZGl1czogNXB4O1xucGxhY2UtaXRlbXM6IGNlbnRlcjtcbmNvbG9yOiB2YXIoLS1jLXRleHQpO1xuYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tYy1jb250cm9scyk7XG5ib3JkZXI6MXB4IHNvbGlkIHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4xOTIpIn0sITApLGNyZWF0ZVN0eWxlKCJjZW50ZXJlZERpdiIse2Rpc3BsYXk6ImZsZXgiLCJqdXN0aWZ5LWNvbnRlbnQiOiJzcGFjZS1ldmVubHkifSk7Y29uc3QgY1N0eWxlcz17c2xpZGVyczp7dHRpcHM6e2NvbG9yOiJ3aGl0ZSJ9LHRpdGxlejp7Y29sb3I6IndoaXRlIn0sYmd6Ontjb2xvcjoid2hpdGUifX0sZGxnVGl0bGVzOntzdDp7dGV4dEFsaWduOiJjZW50ZXIiLHRleHREZWNvcmF0aW9uOiJ1bmRlcmxpbmUiLGZvbnRTaXplOiIxOHB4IixtYXJnaW5Cb3R0b206IjEwcHgiLG1hcmdpblRvcDoiMHB4Iixjb2xvcjoid2hpdGUifX0sc3VidGl0bGVzOntmb250U2l6ZToiMThweCIsZm9udFdlaWdodDoiYm9sZCIsbWFyZ2luTGVmdDoiMjBweCIsZGlzcGxheToiaW5saW5lLWZsZXgifSxiZ1NsaWRlcnM6InJnYmEoMjU1LCAyNTUsIDI1NSwgMC4yMTQpIn0scm9sZWNscj17bm9ybWFsOiIjNjA2MDYwIixwcmVtaXVtOiIjOGJiMGZmIixjaGFkOiIjZmZlNThiIixHT0Q6IiNmMTRjMzkiLFBBUEk6IiNjZTk4ZTIifTtjRGEoImJvZHkiLHtpZDoiUiIsY2xzOiJoZWFkZXIiLGZuOmU9PntjRGEoZS5pZCx7aWQ6ImRhSGVhZGVyIixjbHM6ImhlYWRlckNscyIsZm46ZT0+e2xldCB0PWUuaWQ7bGlFbG0odCwidGl0bGVJZCIsImZvbnQtd2VpZ2h0OiBib2xkO3BhZGRpbmctbGVmdDoxMHB4OyIpLGRCYWxsKHQpLGxpRWxtKHQsInByb2R1Y3RJZCIpLGRCYWxsKHQpLGxpRWxtKHQsInVzZXJEYXlzIiwiZm9udC13ZWlnaHQ6IGJvbGQ7d2lkdGg6IG1heC1jb250ZW50OyIpLGRCYWxsKHQpLGNDb21ib0JveDQodCwidGhlbWVTZWxlY3QiLHtzdDoibWFyZ2luOjEwcHg7d2lkdGg6IDYwcHg7bWluLXdpZHRoOiA2MHB4OyIsb3B0c0VudW06ITAsb3B0czpbImRhcmsiLCJ3aGl0ZSIsInB1cnBsZSIsIm1hcmluZSIsInBpbmsiLCJnb2xkIiwicmVkIl0sZm5TcGF3bjplPT57ZS5hZGRFdmVudExpc3RlbmVyKCJjaGFuZ2UiLCgoKT0+e2NUaGVtZSgpfSkpfX0pLGNCdG4odCwicm5kIiwiZmEgZmEtcmVmcmVzaCIsKCgpPT57bFNlcnZlcigpfSksInJlZnJlc2ggcGFnZSBzZXR0aW5ncyIse21hcmdpblJpZ2h0OiIxMHB4In0pfX0pfX0pLGNEYSgiYm9keSIse2lkOiJSIixjbHM6ImNvbnRlbnQiLHN0OiJkaXNwbGF5OiBmbGV4O3BsYWNlLWl0ZW1zOiBmbGV4LXN0YXJ0O2p1c3RpZnktY29udGVudDogY2VudGVyOyIsZm46ZT0+e2NEYShlLmlkLHtpZDoibGVmdF9wYW5lbCIsY2xzOiJwYW5lbF9zdHlsZSIsc3Q6InRyYW5zaXRpb246IGFsbCAwLjVzIGVhc2U7bWFyZ2luLXJpZ2h0OiAxNXB4OyIsZm46ZT0+e2xldCB0PWUuaWQ7Y0RhKHQse2lkOiJlbGVtZW50X2xlZnRfYnV0dG9ucyIsY2xzOiJ0YWJzIn0pLGNEYSh0LHtpZDoicGFuZWxfY2hhdCIsY2xzOiJwYW5lbF9yaWdodF9zdHlsZSIsc3Q6ImRpc3BsYXk6ZmxleDsifSl9fSksY0RhKGUuaWQse2lkOiJtX3RfbGVmdF9wYW5lbCIsc3Q6ImRpc3BsYXk6bm9uZTsiLGZuOmU9PntjQnRuKGUuaWQsInJuZCIsImZhIGZhLWhvbWUiLCgoKT0+e3RQYW5lbCgibGVmdF9wYW5lbCIpfSksImhvbWUgcGFuZWwiKX19KSxjRGEoZS5pZCx7aWQ6ImNlbnRlcl9wYW5lbCIsY2xzOiJwYW5lbF9zdHlsZSIsZm46ZT0+e2xldCB0PWUuaWQ7Y0RhKHQse2lkOiJSIixzdDoid2lkdGg6IDQxNXB4OyIsZm46ZT0+e2NEYShlLmlkLHtpZDoiZWxlbWVudF9idXR0b25zIixjbHM6InRhYnMiLHN0OiJkaXNwbGF5Om5vbmU7In0pLGNEYShlLmlkLHt0eXBlOiJoMiIsaWQ6IndhaXRpbmdfZ2FtZSIsc3Q6InRleHQtYWxpZ246IGNlbnRlcjtwYWRkaW5nLXRvcDoxNXB4OyJ9KX19KSxjRGEodCx7aWQ6ImVsZW1lbnRfbWFpbiIsc3Q6ImRpc3BsYXk6bm9uZTsiLGNsczoiZWxlbWVudHoiLGZuOmU9PntjQnIoZS5pZCksY0RhKGUuaWQse2lkOiJtYWluX2VsZW1lbnRzIixjbHM6ImJ1dHRvbnMiLGZuOmU9PntjRGEoZS5pZCx7aWQ6InIiLHN0OiJkaXNwbGF5OiBmbGV4OyBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7IG1hcmdpbi1yaWdodDogMTVweDsiLGZuOmU9PntjRGEoZS5pZCx7aWQ6InIiLHN0OiJtYXJnaW4tcmlnaHQ6IGF1dG87IixmbjplPT57Y0J0bihlLmlkLCJybmQiLCJmYSBmYS1jb21tZW50aW5nIiwoKCk9Pnt0UGFuZWwoImxlZnRfcGFuZWwiKX0pLCJob21lIHBhbmVsIil9fSksY0RhKGUuaWQse2lkOiJyIixzdDoibWFyZ2luLWxlZnQ6IGF1dG87IixmbjplPT57Y0J0bihlLmlkLCJybmQiLCJmYSBmYS1lbGxpcHNpcy1oIiwoKCk9Pnt0UGFuZWwoKX0pLCJwcm9maWxlIHBhbmVsIil9fSl9fSksY0hyKGUuaWQpfX0pfX0pLGNEYSh0LHtpZDoiZWxlbWVudF9rZXlzIixzdDoiZGlzcGxheTpub25lO3dpZHRoOiA0MTVweDsiLGNsczoiZWxlbWVudHoiLGZuOmU9PntjQnIoZS5pZCksY0RhKGUuaWQse2lkOiJrZXlzX2VsZW1lbnRzIixjbHM6ImJ1dHRvbnMifSl9fSksY0RhKHQse2lkOiJlbGVtZW50X292ZXJsYXkiLHN0OiJkaXNwbGF5Om5vbmU7d2lkdGg6IDQxNXB4OyIsY2xzOiJlbGVtZW50eiIsZm46ZT0+e2NCcihlLmlkKSxjRGEoZS5pZCx7aWQ6Im92ZXJsYXlfZWxlbWVudHMiLGNsczoiYnV0dG9ucyJ9KX19KSxjRGEodCx7aWQ6ImVsZW1lbnRfc2V0dGluZyIsc3Q6ImRpc3BsYXk6bm9uZTt3aWR0aDogNDE1cHg7IixjbHM6ImVsZW1lbnR6IixmbjplPT57Y0JyKGUuaWQpLGNEYShlLmlkLHtpZDoic2V0dGluZ19lbGVtZW50cyIsY2xzOiJidXR0b25zIixmbjplPT57Y0RhKGUuaWQse2lkOiJlbGVtZW50c19jZmdiIn0pLGNEYShlLmlkLHtpZDoiZWxlbWVudHNfY2ZnYSJ9KSxjQnRuKGUuaWQsInJuZCIsIlNBVkUiLCgoKT0+e2RsZy5zaG93KCJjb25maXJtX3NhdmVjZmciKX0pLCIiLHt3aWR0aDoiMzgwcHgifSksY0J0bihlLmlkLCJybmQiLCJMT0FEIiwoKCk9PntkbGcuc2hvdygiY29uZmlybV9sb2FkY2ZnIil9KSwiIix7d2lkdGg6IjM4MHB4In0pLGNCcihlLmlkKSxjQnRuKGUuaWQsInJuZCIsIkVYUE9SVCIsKCgpPT57ZGxnLnNob3coImNvbmZpcm1fZXhwb3J0Y2ZnIil9KSwiIix7d2lkdGg6IjM4MHB4In0pLGNCdG4oZS5pZCwicm5kIiwiSU1QT1JUIiwoKCk9PntkbGcuc2hvdygiY29uZmlybV9pbXBvcnRjZmciKX0pLCIiLHt3aWR0aDoiMzgwcHgifSksY0hyKGUuaWQpLGNCdG4oZS5pZCwicm5kIiwiPGI+RVhJVDwvYj4iLCgoKT0+e2RsZy5zaG93KCJjb25maXJtX2V4aXQiKX0pLCIiLHt3aWR0aDoiMzgwcHgifSl9fSl9fSksY0RhKHQse2lkOiJlbGVtZW50X3FyY29kZSIsc3Q6ImRpc3BsYXk6bm9uZTt3aWR0aDogMTAwJTsiLGNsczoiZWxlbWVudHoiLGZuOmU9PntjQnIoZS5pZCksY0RhKGUuaWQse2lkOiJSIixjbHM6ImJ1dHRvbnMiLGZuOmU9PntjRGEoZS5pZCx7aWQ6InFyaW1hZ2VzaGl0IixzdDoibWFyZ2luLWxlZnQ6IC0yMHB4O2Rpc3BsYXk6IGdyaWQ7cGxhY2UtaXRlbXM6IGNlbnRlcjsiLGZuOmU9PntjRGEoZS5pZCx7dHlwZToiaDIiLGlkOiJxcmNvZGVfdGV4dCIsY2xzOiJjb250ZW50LWxvZ28iLHN0OiJwYWRkaW5nLXRvcDowcHg7bWFyZ2luLWxlZnQ6MHB4O3RleHQtYWxpZ246Y2VudGVyOyJ9KSxjRGEoZS5pZCx7dHlwZToiaW1nIixpZDoicXJpbWFnZSIsY2xzOlsicXItY29kZSIsImltZy10aHVtYm5haWwiLCJpbWctcmVzcG9uc2l2ZSJdLGVsOntzcmM6Imh0dHBzOi8vY2hhcnQuZ29vZ2xlYXBpcy5jb20vY2hhcnQ/Y2h0PXFyJmNobD1odHRwczovL2dvb2dsZS5jb20mY2hzPTI0MHgyNDAmY2hsZD1MfDAifX0pfX0pfX0pfX0pLGNEYSh0LHtpZDoiZWxlbWVudF9jb25maWciLHN0OiJtYXJnaW4tdG9wOjIwcHg7In0pfX0pLGNEYShlLmlkLHtpZDoibV90X3JpZ2h0X3BhbmVsIixzdDoiZGlzcGxheTpub25lOyIsZm46ZT0+e2NCdG4oZS5pZCwicm5kIiwiZmEgZmEtaG9tZSIsKCgpPT57dFBhbmVsKCl9KSwiaG9tZSBwYW5lbCIpfX0pLGNEYShlLmlkLHtpZDoicmlnaHRfcGFuZWwiLGNsczoicGFuZWxfc3R5bGUiLHN0OiJ0cmFuc2l0aW9uOiBhbGwgMC41cyBlYXNlO21hcmdpbi1sZWZ0OiAxNXB4OyIsZm46ZT0+e2xldCB0PWUuaWQ7Y0RhKHQse2lkOiJlbGVtZW50X3JpZ2h0X2J1dHRvbnMiLGNsczoidGFicyJ9KSxjRGEodCx7aWQ6InBhbmVsX3VwZGF0ZXMiLGNsczoicGFuZWxfcmlnaHRfc3R5bGUiLHN0OiJkaXNwbGF5OmZsZXg7IixmbjplPT57Y0RhKGUuaWQse3R5cGU6InAiLGlkOiJsYXN0X3VwZGF0ZSIsc3Q6InRleHQtYWxpZ246IGNlbnRlcjttYXJnaW4tdG9wOiAwcHg7In0pLGNEYShlLmlkLHt0eXBlOiJwIixpZDoiY2hhbmdlbG9ncyIsc3Q6InRleHQtYWxpZ246IGNlbnRlcjttYXJnaW4tdG9wOiAwcHg7In0pfX0pLGNEYSh0LHtpZDoicGFuZWxfdGlja2V0cyIsY2xzOiJwYW5lbF9yaWdodF9zdHlsZSIsc3Q6ImRpc3BsYXk6bm9uZTsifSksY0RhKHQse2lkOiJwYW5lbF9wcm9maWxlcyIsY2xzOiJwYW5lbF9yaWdodF9zdHlsZSIsc3Q6ImRpc3BsYXk6bm9uZTsifSl9fSksY0RhKGUuaWQse3R5cGU6ImF1ZGlvIixpZDoic25kMSIsZWw6e3NyYzoiaHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL0NvbGFDYXByaWNob3NhL0ZQV0xSL2J1YmJsZS53YXYiLGFsbG93OiJhdXRvcGxheSJ9fSl9fSksY0RhKCJib2R5Iix7aWQ6Im5vdGlmaWNhdGlvbi1jb250YWluZXIifSk7bGV0IHRoZW1lU2VsZWN0ZWQ9JExTLmdldCgidGhlbWVTZWxlY3QiKXx8MDskaWQoInRoZW1lU2VsZWN0IikudmFsdWU9dGhlbWVTZWxlY3RlZCwkaWQoInRoZW1lU2VsZWN0IikuZGlzcGF0Y2hFdmVudChuZXcgRXZlbnQoImNoYW5nZSIpKTtjb25zdCB0b29sdGlwPSRlbG0oImRpdiIpO2Z1bmN0aW9uIHNMb2FkaW5nKGUsdCl7Y0xvYWRpbmcoZSx0LHtkaXNwbGF5OiJibG9jayJ9KSxzZXRWaXModCwiYmxvY2siKX1hc3luYyBmdW5jdGlvbiBoTG9hZGluZyhlLHQ9MTAwKXtzZXRUaW1lb3V0KChhc3luYygpPT57c2V0VmlzKGUsIm5vbmUiKX0pLHQpfWZ1bmN0aW9uIGxpRWxtKGUsdCxpPW51bGwpe2NEYShlLHt0eXBlOiJsaSIsaWQ6dCxjbHM6ImhlYWRlci10aXRsZSIsc3Q6aX0pfWZ1bmN0aW9uIGRCYWxsKGUpe2NEYShlLHtpZDoiTiIsY2xzOiJiYWxsIn0pfXRvb2x0aXAuY2xhc3NMaXN0LmFkZCgidG9vbHRpcCIpLGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQodG9vbHRpcCksZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcigibW91c2VvdmVyIiwoZT0+e2NvbnN0IHQ9ZS50YXJnZXQ7aWYoIXQpcmV0dXJuO2NvbnN0IGk9dC5nZXRBdHRyaWJ1dGUoInR0aXAiKTtpZihpKXtsZXQgZT1udWxsO2ZvcihsZXQgdD0wO3Q8dURsZ3MubGVuZ3RoO3QrKylpZihkbGcuY2hlY2sodURsZ3NbdF0pKXtlPXVEbGdzW3RdO2JyZWFrfWlmKG51bGwhPWUpe2NvbnN0IG49JGlkKGUrIl90dGlwIiksbD1ufHwkZWxtKCJkaXYiKTtufHwobC5jbGFzc0xpc3QuYWRkKCJ0b29sdGlwIiksbC5pZD1lKyJfdHRpcCIsJGlkKGUpLmFwcGVuZENoaWxkKGwpKSxsLmlubmVyVGV4dD1pLGwuc3R5bGUudG9wPXQub2Zmc2V0VG9wLWwub2Zmc2V0SGVpZ2h0LTEwKyJweCIsbC5zdHlsZS5sZWZ0PXQub2Zmc2V0TGVmdCsodC5vZmZzZXRXaWR0aC1sLm9mZnNldFdpZHRoKS8yKyJweCIsbC5jbGFzc0xpc3QuYWRkKCJ0b29sdGlwLS12aXNpYmxlIil9ZWxzZSBpZih0b29sdGlwLmlubmVyVGV4dD1pLG51bGwhPXQub2Zmc2V0UGFyZW50KXtjb25zdCBlPXQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCksaT10b29sdGlwLm9mZnNldEhlaWdodCxuPWUudG9wK3dpbmRvdy5zY3JvbGxZLWktMTArInB4IixsPWUubGVmdCsoZS53aWR0aC10b29sdGlwLm9mZnNldFdpZHRoKS8yKyJweCI7dG9vbHRpcC5zdHlsZS50b3A9bix0b29sdGlwLnN0eWxlLmxlZnQ9bCx0b29sdGlwLmNsYXNzTGlzdC5hZGQoInRvb2x0aXAtLXZpc2libGUiKX19ZWxzZXtsZXQgZT10LnBhcmVudEVsZW1lbnQ7Zm9yKDtlOyl7Y29uc3QgdD1lLmdldEF0dHJpYnV0ZSgidHRpcCIpO2lmKHQpe2xldCBpPW51bGw7Zm9yKGxldCBlPTA7ZTx1RGxncy5sZW5ndGg7ZSsrKWlmKGRsZy5jaGVjayh1RGxnc1tlXSkpe2k9dURsZ3NbZV07YnJlYWt9aWYobnVsbCE9aSl7Y29uc3Qgbj0kaWQoaSsiX3R0aXAiKSxsPW58fCRlbG0oImRpdiIpO258fChsLmNsYXNzTGlzdC5hZGQoInRvb2x0aXAiKSxsLmlkPWkrIl90dGlwIiwkaWQoaSkuYXBwZW5kQ2hpbGQobCkpLGwuaW5uZXJUZXh0PXQsbC5zdHlsZS50b3A9ZS5vZmZzZXRUb3AtbC5vZmZzZXRIZWlnaHQtMTArInB4IixsLnN0eWxlLmxlZnQ9ZS5vZmZzZXRMZWZ0KyhlLm9mZnNldFdpZHRoLWwub2Zmc2V0V2lkdGgpLzIrInB4IixsLmNsYXNzTGlzdC5hZGQoInRvb2x0aXAtLXZpc2libGUiKX1lbHNlIGlmKHRvb2x0aXAuaW5uZXJUZXh0PXQsbnVsbCE9ZS5vZmZzZXRQYXJlbnQpe2NvbnN0IHQ9ZS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKSxpPXRvb2x0aXAub2Zmc2V0SGVpZ2h0LG49dC50b3Ard2luZG93LnNjcm9sbFktaS0xMCsicHgiLGw9dC5sZWZ0Kyh0LndpZHRoLXRvb2x0aXAub2Zmc2V0V2lkdGgpLzIrInB4Ijt0b29sdGlwLnN0eWxlLnRvcD1uLHRvb2x0aXAuc3R5bGUubGVmdD1sLHRvb2x0aXAuY2xhc3NMaXN0LmFkZCgidG9vbHRpcC0tdmlzaWJsZSIpfWJyZWFrfWU9ZS5wYXJlbnRFbGVtZW50fX19KSksZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcigibW91c2VvdXQiLChlPT57aWYoZS50YXJnZXQuZ2V0QXR0cmlidXRlKCJ0dGlwIikpe2xldCBlPW51bGw7Zm9yKGxldCB0PTA7dDx1RGxncy5sZW5ndGg7dCsrKWRsZy5jaGVjayh1RGxnc1t0XSkmJihlPXVEbGdzW3RdKTtpZihudWxsIT1lKXtjb25zdCB0PSRpZChlKyJfdHRpcCIpO3Q/KHQuaW5uZXJUZXh0PSItIi50cmltKCksdC5jbGFzc0xpc3QucmVtb3ZlKCJ0b29sdGlwLS12aXNpYmxlIikpOih0b29sdGlwLmlubmVyVGV4dD0iLSIudHJpbSgpLHRvb2x0aXAuY2xhc3NMaXN0LnJlbW92ZSgidG9vbHRpcC0tdmlzaWJsZSIpKX1lbHNlIHRvb2x0aXAuaW5uZXJUZXh0PSItIi50cmltKCksdG9vbHRpcC5jbGFzc0xpc3QucmVtb3ZlKCJ0b29sdGlwLS12aXNpYmxlIil9fSkpLHBJZD0iZ2xvYmFsQ2hhdCI7Y29uc3QgZGl2Q2VudGVyPShlLHQpPT57Y0RhKGUse2lkOiJSIixmbjplPT57dChlKX0sY2xzOiJjZW50ZXJlZERpdiJ9KX07ZnVuY3Rpb24gc2VuZENoYXQoKXtpZihjVXNlckFsaWFzKXtpZihpc1ZpcygibGVmdF9wYW5lbCIpJiZpc1ZpcygiZ2xvYmFsQ2hhdCIpKWlmKGNUeHRWYWxpZCgiY2hhdF90ZXh0Iikpe3puQnRuKCJzZW5kX2NoYXQiLCRpZCgiY2hhdF90ZXh0IikudmFsdWUpLnRoZW4oKGFzeW5jIGU9Pntub3RpZnkoZS5yZXBsYWNlKC9fL2csIiAiKSw3ZTMpLGUuaW5jbHVkZXMoImRvbmUiKSYmKGF3YWl0ICRtLnc4KDM1MCksdUNoYXQoKSwkaWQoImNoYXRfdGV4dCIpLnZhbHVlPSIiKX0pKS5jYXRjaCgoZT0+eyRsb2coZSksJGlkKCJjaGF0X3RleHQiKS52YWx1ZT0iIn0pKX1lbHNlIG5vdGlmeSgiTm8gc2UgYWNlcHRhbiBjYXJhY3RlcmVzIGVzcGVjaWFsZXMsIGRlIDEgYSA2NCBjYXJhY3RlcmVzIHNvbGFtZW50ZS4iLDVlMywiUkVEIil9ZWxzZSBub3RpZnkoImRpc2FibGVkIHRvIGRlZmF1bHQgdXNlcnMiLDdlMyl9ZnVuY3Rpb24gb25DbGlja0NoYXRMaXN0KGUsdD0hMCxpPW51bGwpe2xVc2VyU2VsZWN0ZWRDaGF0PWUsbFVTQ0NyZWF0ZWQ9dCxsVVNDRGF0ZT1pLHVQcml2Q2hhdCgpLCRjbGljaygiYnRuQ2hhdEN1cnJlbnRUYWIiKX1mdW5jdGlvbiBnT25saW5lcygpe2NVc2VyQWxpYXMmJmlzVmlzKCJsZWZ0X3BhbmVsIikmJmlzVmlzKCJnbG9iYWxDaGF0IikmJnpuR2V0KCJvbmxpbmVzIiwienoiKS50aGVuKChlPT57dHJ5e2NvbnN0IHQ9SlNPTi5wYXJzZShlKTskaWQoInVzZXJzb25saW5lIikuaW5uZXJIVE1MPSI8cCB0dGlwPSd0b3RhbDogIit0LmFsbF9vbmxpbmVzKyInIHN0eWxlPSdmb250LXdlaWdodDpib2xkO2ZvbnQtc2l6ZToxNHB4O21hcmdpbi1ib3R0b206MHB4O21hcmdpbi10b3A6MHB4Oyc+b25saW5lcyAoIit0LmxpdmUubGVuZ3RoKyIpPC9wPjxicj4iK3QubGl2ZS5qb2luKCIsICIpfWNhdGNoKHQpeyRsb2codCxlKX19KSkuY2F0Y2goKGU9PnskbG9nKGUpfSkpfWZ1bmN0aW9uIHBTbmQoZSl7aWYoMD09ZlNuZClmU25kKys7ZWxzZXtjb25zdCB0PSRpZChlKTt0LnZvbHVtZT0uMSx0LnBsYXkoKX19ZnVuY3Rpb24gaXNWaXMoZSl7cmV0dXJuICRpZChlKT8kaWQoZSkuc3R5bGUuZGlzcGxheSYmIm5vbmUiIT0kaWQoZSkuc3R5bGUuZGlzcGxheTooJGxvZyhlLCJkb2VzbnQgZXhpc3QiKSwhMSl9ZnVuY3Rpb24gc2V0VmlzKGUsdD0iYmxvY2siKXsoQXJyYXkuaXNBcnJheShlKT9lOltlXSkuZm9yRWFjaCgoZT0+e2NvbnN0IGk9JGlkKGUpO2kmJihpLnN0eWxlLmRpc3BsYXk9dCl9KSl9ZnVuY3Rpb24gc2Nyb2xsVG9Cb3R0b20oZSl7Y29uc3QgdD0kaWQoZSk7dC5zY3JvbGxUb3A9dC5zY3JvbGxIZWlnaHR9ZnVuY3Rpb24gdVByaXZDaGF0KCl7aWYoIWNVc2VyQWxpYXMpcmV0dXJuIHZvaWQgbm90aWZ5KCJwcml2YXRlIGNoYXQgZGlzYWJsZWQgdG8gZGVmYXVsdCB1c2VycyIsN2UzKTtpZighaXNWaXMoImxlZnRfcGFuZWwiKXx8IWlzVmlzKCJwcml2YXRlQ2hhdCIpfHwhaXNWaXMoImN1cnJlbnRDaGF0VGFiIikpcmV0dXJuO2lmKCFsVXNlclNlbGVjdGVkQ2hhdHx8IWxVU0NEYXRlKXJldHVybiB2b2lkICRsb2coImZhaWxlZCB0byBnZXQgY2hhdCIsbFVzZXJTZWxlY3RlZENoYXQsbFVTQ0RhdGUpO2xldCBlPSJwcml2Q2hhdENudHIiLHQ9bFVzZXJTZWxlY3RlZENoYXQ7dCs9bFVTQ0NyZWF0ZWQ/Ii0xIjoiLTAiLHQrPSItIitsVVNDRGF0ZSwkbG9nKCJ3b3JraW5nIiksem5HZXQoImNoYXRfZGF0YSIsdCkudGhlbigoaT0+e2xldCBuPUpTT04ucGFyc2UoaSksbD1bXTtuLlpJTkM9W3t0czoiMjE0NzExMzY0NyIsbXNnOndpbmRvdy5idG9hKCJDaGF0IHYwLjEsIHlvdSBtYXkgZXhjZXB0IGVycm9ycy4iKSxyOiJjaGFkIixwaW46ITF9XTtmb3IobGV0IGUgaW4gbilsPWwuY29uY2F0KG5bZV0ubWFwKCh0PT4oe3VzZXI6ZSwuLi50fSkpKSk7bC5zb3J0KCgoZSx0KT0+ZS50cy10LnRzKSksc2V0VmlzKFtlLCJjaGF0VXNlclRleHQiXSksc2V0VmlzKCJjaGF0VXNlckJ0bnMiLCJmbGV4IiksJGlkKCJjaGF0VXNlclRpdGxlIikuaW5uZXJIVE1MPXQuc3BsaXQoIi0iKVswXSsiJ3MgY2hhdCB8ICIrbFVTQ0RhdGUucmVwbGFjZSgvbi9nLCIgLSAiKTtjb25zdCBhPSRpZChlKTthLmlubmVySFRNTD0iIjtsZXQgcz0wO2wuZm9yRWFjaCgoYXN5bmMgdD0+e2lmKG51bGwhPXQudXNlcil7czx0LnRzJiZ0LnRzPCIyMTQ3MTEzNjQ2IiYmKHM9dC50cyk7Y29uc3QgaT0kZWxtKCJkaXYiKTtpLnN0eWxlLmZvbnRTaXplPSIxMnB4IjtsZXQgbj1sVXNlclNlbGVjdGVkQ2hhdCE9dC51c2VyP3JvbGVjbHJbdC5yXXx8T2JqZWN0LmVudHJpZXMocm9sZWNscilbNF1bMV06InZhcigtLWMtcHJpbWFyeSkiO2kuaW5uZXJIVE1MPWAoPHNwYW4gdHRpcD0nJHskdGltZS5zdHIodC50cywwKX0nIHN0eWxlPSJvcGFjaXR5OiAwLjU7Ij4keyR0aW1lLnN0cih0LnRzKX08L3NwYW4+KSA8c3BhbiBzdHlsZT0nY29sb3I6JHtufTsnPjxiPjx1PiR7dC51c2VyfTwvdT48L2I+PC9zcGFuPjxzcGFuIHN0eWxlPSdjb2xvcjp3aGl0ZTsnPjogJHt3aW5kb3cuYXRvYih0Lm1zZyl9PC9zcGFuPmAsYS5hcHBlbmRDaGlsZChpKSxjSHIoZSwhMSl9fSkpLGxNc2dQcml2IT1zJiYocFNuZCgic25kMSIpLGxNc2dQcml2PXMpLHNjcm9sbFRvQm90dG9tKGUpfSkpLmNhdGNoKChlPT57JGxvZyhlKX0pKX1mdW5jdGlvbiB1Q2hhdCgpe2lmKGlzVmlzKCJsZWZ0X3BhbmVsIikmJmlzVmlzKCJnbG9iYWxDaGF0Iikpe2lmKCFjVXNlckFsaWFzKXtjb25zdCBlPSRpZCgiY2hhdENvbnRhaW5lciIpO2UuaW5uZXJIVE1MPSIiO2NvbnN0IHQ9JGVsbSgiZGl2Iik7cmV0dXJuIHQuc3R5bGUuZm9udFNpemU9IjEycHgiLHQuaW5uZXJIVE1MPWAoPHNwYW4gdHRpcD0nJHskdGltZS5zdHIocGFyc2VJbnQoKG5ldyBEYXRlKS5nZXRUaW1lKCkvMWUzKSwwKX0nIHN0eWxlPSJvcGFjaXR5OiAwLjU7Ij4keyR0aW1lLnN0cihwYXJzZUludCgobmV3IERhdGUpLmdldFRpbWUoKS8xZTMpKX08L3NwYW4+KSA8c3BhbiBzdHlsZT0nJHsiY29sb3I6IitPYmplY3QuZW50cmllcyhyb2xlY2xyKVs0XVsxXSsiOyJ9Jz48Yj5aSU5DPC9iPjwvc3Bhbj46IGNoYXQgZGlzYWJsZWQgdG8gZGVmYXVsdCBhbGlhc2VzLCBjaGFuZ2UgeW91ciBhbGlhcyBpbiB0aGUgcmlnaHQgcGFuZWxgLHZvaWQgZS5hcHBlbmRDaGlsZCh0KX0kbG9nKCJ3b3JraW5nIiksem5HZXQoImdldF9jaGF0IiwieiIpLnRoZW4oKGU9Pntjb25zdCB0PUpTT04ucGFyc2UoZSksaT0kaWQoImNoYXRDb250YWluZXIiKTtpLmlubmVySFRNTD0iIjtsZXQgbj0wO3QuZm9yRWFjaCgoYXN5bmMgZT0+e2UubXNnLmluY2x1ZGVzKCJkaXNhYmxlZCIpfHxuPGUudHMmJihuPWUudHMpO2NvbnN0IHQ9JGVsbSgiZGl2Iik7dC5zdHlsZS5mb250U2l6ZT0iMTJweCIsZS5tc2cuaW5jbHVkZXMoImRpc2FibGVkIik/dC5pbm5lckhUTUw9YCg8c3BhbiB0dGlwPSckeyR0aW1lLnN0cihlLnRzLDApfScgc3R5bGU9Im9wYWNpdHk6IDAuNTsiPiR7JHRpbWUuc3RyKGUudHMpfTwvc3Bhbj4pIDxzcGFuIHN0eWxlPScke251bGwhPWUucj8iY29sb3I6IitPYmplY3QuZW50cmllcyhyb2xlY2xyKVtlLnJdWzFdKyI7IjoiIn0nPjxiPiR7ZS51fTwvYj48L3NwYW4+OiAke2UubXNnfWA6dC5pbm5lckhUTUw9YCg8c3BhbiB0dGlwPSckeyR0aW1lLnN0cihlLnRzLDApfScgc3R5bGU9Im9wYWNpdHk6IDAuNTsiPiR7JHRpbWUuc3RyKGUudHMpfTwvc3Bhbj4pIDxzcGFuIHN0eWxlPScke251bGwhPWUucj8iY29sb3I6IitPYmplY3QuZW50cmllcyhyb2xlY2xyKVtlLnJdWzFdKyI7IjoiIn0nPjxiPiR7ZS51fTwvYj48L3NwYW4+OiAke3dpbmRvdy5hdG9iKGUubXNnKX1gLGkuYXBwZW5kQ2hpbGQodCksY0hyKCJjaGF0Q29udGFpbmVyIiwhMSl9KSksbE1zZyE9biYmKHBTbmQoInNuZDEiKSxsTXNnPW4pfSkpLmNhdGNoKChlPT57JGxvZyhlKX0pKX19Y0RpdigibGVmdF9wYW5lbCIsImdsb2JhbENoYXQiLHtkaXNwbGF5OiJub25lIn0se2NsYXNzTmFtZToicGFuZWxfcmlnaHRfc3R5bGUifSksY0RpdigibGVmdF9wYW5lbCIsInNlYXJjaFVzZXIiLHtkaXNwbGF5OiJub25lIn0se2NsYXNzTmFtZToicGFuZWxfcmlnaHRfc3R5bGUifSwoZT0+e2NCdG4oZS5pZCwicm5kIiwic2VhcmNoIiwoKCk9PntkbGcuc2hvdygiZmluZHVzZXJkbGciKX0pLCJCdXNjYSB1biB1c3VhcmlvLiIse2p1c3RpZnlTZWxmOiJjZW50ZXIifSksY0JyKGUuaWQpLGRsZy5jcmVhdGUoZS5pZCwiZmluZHVzZXJkbGciLHtmbmM6ZT0+e2NUZXh0KGUuaWQsInJuZCIsInNlYXJjaGVyaW5vIixjU3R5bGVzLmRsZ1RpdGxlcyksY0JyKGUuaWQpLGNUeHRib3goZS5pZCwiZmluZF91c2VyIiwhMSwiIiwiIix7fSx7cGF0dGVybjoiXlthLXpBLVowLTldKiQiLG1pbkxlbmd0aDozLG1heExlbmd0aDoyMCxyZXF1aXJlZDohMCxwbGFjZWhvbGRlcjoiYWxpYXMiLGV2ZW50TGlzdGVuZXI6e2tleWRvd246KGUsdCk9PnsiRW50ZXIiPT09dC5rZXkmJiRjbGljaygiYnRuX2ZpbmRfdXNlciIpfX19LCEwKSxjQnRuKGUuaWQsImJ0bl9maW5kX3VzZXIiLCI8aSBjbGFzcz0nZmEgZmEtc2VhcmNoJyBhcmlhLWhpZGRlbj0ndHJ1ZSc+PC9pPiBmaW5kIiwoKCk9PntjVHh0VmFsaWQoImZpbmRfdXNlciIsITApP2ZVc2VyQ2Q+JHRpbWUuaW50KCk/bm90aWZ5KCJyZWNlbnRseSB1c2VkLCB3YWl0ICIrKGZVc2VyQ2QtJHRpbWUuaW50KCkpKyIgc2Vjb25kcyIsN2UzKTooc2V0VmlzKCJsb2FkaW5nYXZhdGFyMiIpLHpuR2V0KCJpbmZvX2FsaWFzIiwkaWQoImZpbmRfdXNlciIpLnZhbHVlKS50aGVuKCh0PT57dHJ5e2xldCBpPUpTT04ucGFyc2UodCk7aS5hdmF0YXImJigkaWQoInVzZXJfYXZ0ciIpLnNyYz13aW5kb3cuYXRvYihpLmF2YXRhcikpO2xldCBuPSIiO24rPSI8cCBzdHlsZT0nbWFyZ2luLXRvcDowcHg7bWFyZ2luLWJvdHRvbTowcHg7Jz48Yj5AIitpLmFsaWFzLGkucm9sZSYmKG4rPSI8c3BhbiBzdHlsZT0nZGlzcGxheTppbmxpbmU7Zm9udC1zaXplOjEwcHg7Y29sb3I6Iityb2xlY2xyW2kucm9sZS50b0xvd2VyQ2FzZSgpXSsiOyc+ICgiK2kucm9sZSsiKTwvc3Bhbj48YnI+PC9iPjwvcD4iKSxpLnVzZXJfaWQ/bis9IjxwIHN0eWxlPSdmb250LXNpemU6MTBweDttYXJnaW4tdG9wOjBweDsnPnVpZDogIitpLnVzZXJfaWQ6bis9IjxwIHN0eWxlPSdmb250LXNpemU6MTBweDttYXJnaW4tdG9wOjBweDsnPmJldGEiLGkucmVnaXN0ZXJfdGltZT9uKz0iIC0gam9pbmVkOiAiKyR0aW1lLnN0cihpLnJlZ2lzdGVyX3RpbWUsMCkrIjwvcD4iOm4rPSI8L3A+IixpLmRlc2NyaXB0aW9uP24rPSI8cCBzdHlsZT0nZm9udC1zaXplOjEycHg7bWFyZ2luLXRvcDogMHB4Oyc+aW5mbzogIit3aW5kb3cuYXRvYihpLmRlc2NyaXB0aW9uKSsiPC9wPiI6bis9IjxwIHN0eWxlPSdmb250LXNpemU6MTJweDttYXJnaW4tdG9wOiAwcHg7Jz4obm8gaW5mbyB5ZXQpPC9wPiIsJGlkKCJ1c2VyX2luZiIpLmlubmVySFRNTD1uLGhMb2FkaW5nKCJsb2FkaW5nYXZhdGFyMiIpLGNCdG4oInVzZXJfaW5mIiwiYnRuQ2hhdFNlbFVzZXIiLCI8aSBjbGFzcz0nZmEgZmEtZW52ZWxvcGUnIGFyaWEtaGlkZGVuPSd0cnVlJz48L2k+IDxiPlBNPC9iPiIsKCgpPT57em5HZXQoImNyZWF0ZV9jaGF0IiwkaWQoImZpbmRfdXNlciIpLnZhbHVlKS50aGVuKCh0PT57JGxvZyh0KSxub3RpZnkodC5yZXBsYWNlKC9fL2csIiAiKSw3ZTMpLGRsZy5jbG9zZShlLmlkKSwkY2xpY2soImJ0bkNoYXRMaXN0IiksJGNsaWNrKCJwcml2YXRlQ2hhdEJ0biIpfSkpLmNhdGNoKChlPT4kbG9nKGUpKSl9KSwiIix7d2lkdGg6IjgwcHgifSl9Y2F0Y2goZSl7bm90aWZ5KHQucmVwbGFjZSgvXy9nLCIgIiksN2UzKSx0LmluY2x1ZGVzKCJyZWNlbnRseSIpJiZmVXNlckNkPCR0aW1lLmludCgpJiYoZlVzZXJDZD0kdGltZS5pbnQoKSszMCl9fSkpLmNhdGNoKChlPT57JGxvZyhlKX0pKSk6bm90aWZ5KCJpbnZhbGlkIGlucHV0Iil9KSwiIix7bWFyZ2luTGVmdDoiMTBweCIsbWFyZ2luUmlnaHQ6IjEwcHgiLHdpZHRoOiIzMCUifSksY0hyKGUuaWQsITEse3dpZHRoOiIyMDBweCJ9KSxjRGl2KGUuaWQsInVzZXJfaW5mYWxpYXMiLHtkaXNwbGF5OiJpbmxpbmUtZ3JpZCIsZ3JpZFRlbXBsYXRlQ29sdW1uczoicmVwZWF0KDMsIDEwNXB4KSIsZ3JpZEdhcDoiMTBweCJ9KSxjQnIoZS5pZCwyKSxjTG9hZGluZygidXNlcl9pbmZhbGlhcyIsImxvYWRpbmdhdmF0YXIyIix7cG9zaXRpb246ImFic29sdXRlIixkaXNwbGF5OiJub25lIixsZWZ0OiI2NHB4Iix0b3A6IjE2MXB4In0pLGNJbWcoInVzZXJfaW5mYWxpYXMiLCJ1c2VyX2F2dHIiLGRBdmF0YXIsOTAsOTAse21hcmdpbkxlZnQ6IjEwcHgiLG9iamVjdEZpdDoiY292ZXIiLGJvcmRlclJhZGl1czoiNXB4IixwbGFjZVNlbGY6Im5vcm1hbCJ9KSxjQnIoZS5pZCwyKSxjVGV4dCgidXNlcl9pbmZhbGlhcyIsInVzZXJfaW5mIiwibm9uZSIse3N0OntkaXNwbGF5OiJncmlkIixncmlkVGVtcGxhdGVDb2x1bW5zOiIxNjBweCIsbWFyZ2luVG9wOiIwcHgiLG1hcmdpbkJvdHRvbToiMHB4Iixjb2xvcjoid2hpdGUifX0pLGRsZy5jbG9zZUJ0bihlLmlkKX19KX0pKSxjRGl2KCJsZWZ0X3BhbmVsIiwicHJpdmF0ZUNoYXQiLHtkaXNwbGF5OiJub25lIn0se2NsYXNzTmFtZToicGFuZWxfcmlnaHRfc3R5bGUifSwoZT0+e2RpdkNlbnRlcihlLmlkLChlPT57Y0J0bihlLmlkLCJidG5DaGF0Q3VycmVudFRhYiIsImN1cnJlbnQgY2hhdCIsKCgpPT57c2V0VmlzKFsiY2hhdExpc3RUYWIiLCJjdXJyZW50Q2hhdFRhYiJdLCJub25lIiksc2V0VmlzKCJjdXJyZW50Q2hhdFRhYiIpLHVQcml2Q2hhdCgpfSkpLGNCdG4oZS5pZCwiYnRuQ2hhdFRhYkxpc3QiLCJjaGF0IGxpc3QiLCgoKT0+e3NldFZpcyhbImNoYXRMaXN0VGFiIiwiY3VycmVudENoYXRUYWIiXSwibm9uZSIpLHNldFZpcygiY2hhdExpc3RUYWIiKSwkY2xpY2soImJ0bkNoYXRMaXN0Iil9KSwiIix7bWFyZ2luOiI1cHgifSl9KSksY0hyKGUuaWQsITEse3dpZHRoOiIyMDBweCJ9KSxjRGl2KGUuaWQsImNoYXRMaXN0VGFiIix7ZGlzcGxheToibm9uZSJ9LHt9LChlPT57Y1RleHQoZS5pZCwicm5kIiwiY2hhdCBsaXN0IixjU3R5bGVzLmRsZ1RpdGxlcyksY0J0bihlLmlkLCJidG5DaGF0TGlzdCIsInVwZGF0ZSBsaXN0IiwoKCk9PntzTG9hZGluZyhlLmlkLCJsb2FkaW5nQ2hhdHMiKSwkaWQoInVDaGF0TGlzdCIpLmlubmVySFRNTD0iIix6bkdldCgiY2hhdF9saXN0IikudGhlbigoZT0+e3RyeXtsZXQgdD1KU09OLnBhcnNlKGUpO2lmKE9iamVjdC5rZXlzKHQpLmxlbmd0aDwyKXJldHVybiBub3RpZnkoInVzZXIgaGFzIG5vIGNoYXRzIiwxNWUzKSx2b2lkIGhMb2FkaW5nKCJsb2FkaW5nQ2hhdHMiKTtsZXQgaT0iIjtmb3IoY29uc3QgZSBpbiB0KWlmKE9iamVjdC5oYXNPd25Qcm9wZXJ0eS5jYWxsKHQsZSkpe2NvbnN0IG49dFtlXTtpZighbi50cyljb250aW51ZTtpKz0kdGJsLmJvZHkoYFu/IHN0eWxlPSJjdXJzb3I6cG9pbnRlcjsiIG9uY2xpY2s9J29uQ2xpY2tDaGF0TGlzdCgiJHtlLnNwbGl0KCIvIilbMF19IiwgJHtuLmNyZWF0ZWR9LCAiJHtuLmlkLnNwbGl0KCIvIilbMV19Iik7Jz4gJHtlLnNwbGl0KCIvIilbMF19ICA8aSBjbGFzcz0nZmEgZmEtY29tbWVudGluZycgYXJpYS1oaWRkZW49J3RydWUnPjwvaT59eyR7ZS5zcGxpdCgiLyIpWzFdLnJlcGxhY2UoIm4iLCIgLyAiKX19XWApfWhMb2FkaW5nKCJsb2FkaW5nQ2hhdHMiKSwkaWQoInVDaGF0TGlzdCIpLmlubmVySFRNTD0kdGJsLmhlYWQoJzxicj5be25hbWV9vyBzdHlsZT0iY3Vyc29yOnBvaW50ZXI7IiBvbmNsaWNrPSIkdGJsLnNvcnQoMSwgXCd1Q2hhdExpc3RcJykiPmRhdGV9XScpK2l9Y2F0Y2godCl7aWYoJGxvZyh0KSxlLmluY2x1ZGVzKCJfIikpcmV0dXJuIHZvaWQgbm90aWZ5KGUucmVwbGFjZSgvXy9nLCIgIiksN2UzKX19KSkuY2F0Y2goKGU9PnskbG9nKGUpfSkpfSksIiIse2Rpc3BsYXk6Im5vbmUifSksY1R4dGJveChlLmlkLCJmaW5kQWxpYXNDaGF0IiwhMSwiIiwiIix7bWFyZ2luUmlnaHQ6IjEwcHgifSx7cmVxdWlyZWQ6ITEscGxhY2Vob2xkZXI6InNlYXJjaCBjaGF0IixldmVudExpc3RlbmVyOntpbnB1dDooKT0+eyR0Ymwuc2VhcmNoKCJmaW5kQWxpYXNDaGF0IiwidUNoYXRMaXN0Iil9fX0sITApLGNCdG4oZS5pZCwicm5kIiwiZmEgZmEtcmVmcmVzaCIsKCgpPT57JGNsaWNrKCJidG5DaGF0TGlzdCIpfSkpLGNUYWJsZShlLmlkLCJ1Q2hhdExpc3QyIiwiIix7Y29sb3I6IndoaXRlIix3aWR0aDoiMTAwJSIsYm9yZGVyOiIxcHggc29saWQgI2RkZGRkZDAwIn0pLGNEaXYoZS5pZCwidUNoYXRMaXN0RGl2Iix7bWF4SGVpZ2h0OiIzNTBweCIsb3ZlcmZsb3c6ImF1dG8ifSx7fSwoZT0+e2NUYWJsZShlLmlkLCJ1Q2hhdExpc3QiLCIiLHtjb2xvcjoid2hpdGUiLHdpZHRoOiIxMDAlIixib3JkZXI6IjFweCBzb2xpZCAjZGRkZGRkMDAifSl9KSl9KSksY0RpdihlLmlkLCJjdXJyZW50Q2hhdFRhYiIse2Rpc3BsYXk6Im5vbmUifSx7fSwoZT0+e2NUZXh0KGUuaWQsImNoYXRVc2VyVGl0bGUiLCJubyBjaGF0IHNlbGVjdGVkIixjU3R5bGVzLmRsZ1RpdGxlcyksY0RpdihlLmlkLCJwcml2Q2hhdENudHIiLHt3aWR0aDoiMjUwcHgiLGhlaWdodDoiMzE1cHgiLG1heEhlaWdodDoiMjAwcHgiLG92ZXJmbG93WToiYXV0byIscGFkZGluZzoiMTBweCIsYmFja2dyb3VuZENvbG9yOiJ2YXIoLS1jLXNlY29uZGFyeSkiLGp1c3RpZnlTZWxmOiJjZW50ZXIiLGRpc3BsYXk6Im5vbmUifSksY0JyKGUuaWQpLGNUeHRib3goZS5pZCwiY2hhdFVzZXJUZXh0IiwhMSwiIiwiIix7ZGlzcGxheToibm9uZSIsd2lkdGg6IjEwMCUifSx7cGF0dGVybjoiXlthLXpBLVowLTkgXSokIixtaW5MZW5ndGg6MyxtYXhMZW5ndGg6MzAscmVxdWlyZWQ6ITAscGxhY2Vob2xkZXI6InRleHQiLGV2ZW50TGlzdGVuZXI6e2tleWRvd246KGUsdCk9PnsiRW50ZXIiPT09dC5rZXkmJiRjbGljaygic2VuZENoYXRNc2ciKX19fSwhMCksY0RpdihlLmlkLCJjaGF0VXNlckJ0bnMiLHtkaXNwbGF5OiJub25lIixqdXN0aWZ5Q29udGVudDoic3BhY2UtZXZlbmx5In0se30sKGU9PntjQnRuKGUuaWQsInNlbmRDaGF0TXNnIiwic2VuZCBjaGF0IiwoKCk9PntpZighY1R4dFZhbGlkKCJjaGF0VXNlclRleHQiLCEwKSlyZXR1cm4gdm9pZCBub3RpZnkoImludmFsaWQgaW5wdXQiKTtpZihsVVNDRGF0ZSE9JHRpbWUueWVhck5Nb250aCgpKXJldHVybiB2b2lkIG5vdGlmeSgid3JvbmcgZGF0ZS4geW91IGNhbm5vdCBzZW5kIG1lc3NhZ2VzIHRvIG9sZCBjaGF0cyIpO2xldCBlPSIiO2U9bFVTQ0NyZWF0ZWQ/Ii0xIjoiLTAiLGUrPSItIitsVVNDRGF0ZSx6bkdldCgic2VuZF9jaGF0X21zZyIsbFVzZXJTZWxlY3RlZENoYXQrIi0iKyRpZCgiY2hhdFVzZXJUZXh0IikudmFsdWUrZSkudGhlbigoYXN5bmMgZT0+e25vdGlmeShlLnJlcGxhY2UoL18vZywiICIpLDdlMyksJGlkKCJjaGF0VXNlclRleHQiKS52YWx1ZT0iIixhd2FpdCAkbS53OCg1MDApLHVQcml2Q2hhdCgpfSkpLmNhdGNoKChlPT4kbG9nKGUpKSl9KSwiIiksY0J0bihlLmlkLCJybmQiLCJmYSBmYS1yZWZyZXNoIiwoKCk9Pnt1UHJpdkNoYXQoKSwkaWQoImNoYXRVc2VyVGV4dCIpLnZhbHVlPSIifSkpfSkpfSkpLGNCcihlLmlkKSwkY2xpY2soImJ0bkNoYXRUYWJMaXN0Iil9KSksY1RleHQocElkLCJybmQiLCJjaGF0Iix7c3Q6e3RleHRBbGlnbjoiY2VudGVyIix0ZXh0RGVjb3JhdGlvbjoidW5kZXJsaW5lIixmb250U2l6ZToiMThweCIsbWFyZ2luQm90dG9tOiIxMHB4IixtYXJnaW5Ub3A6IjBweCJ9fSksY0RpdihwSWQsImNoYXRDb250YWluZXIiLHt3aWR0aDoiMjMwcHgiLGhlaWdodDoiMzE1cHgiLG1heEhlaWdodDoiMzE1cHgiLG92ZXJmbG93WToiYXV0byIscGFkZGluZzoiMTBweCIsYmFja2dyb3VuZENvbG9yOiJ2YXIoLS1jLXNlY29uZGFyeSkifSksY0JyKCksY1R4dGJveChwSWQsImNoYXRfdGV4dCIsITEsIiIsIiIse30se3BhdHRlcm46Il5bYS16QS1aMC05IF0qJCIsbWluTGVuZ3RoOjEsbWF4TGVuZ3RoOjY0LHJlcXVpcmVkOiEwLHBsYWNlaG9sZGVyOiJ3cml0ZSIsZXZlbnRMaXN0ZW5lcjp7a2V5ZG93bjooZSx0KT0+eyJFbnRlciI9PT10LmtleSYmc2VuZENoYXQoKX19fSwhMCksZGl2Q2VudGVyKHBJZCwoZT0+e2NCdG4oZS5pZCwiYnRuX3NlbmRfY2hhdCIsInNlbmQiLCgoKT0+e3NlbmRDaGF0KCl9KSwiRW52aWEgdW4gbWVuc2FqZSBhbCBjaGF0LCB0aW1lb3V0IGRlIDMwIHNlZ3VuZG9zLiIse21hcmdpblJpZ2h0OiIxMHB4In0pLGNCdG4oZS5pZCwicm5kIiwiZmEgZmEtcmVmcmVzaCIsKCgpPT57dUNoYXQoKX0pKX0pKSxjSHIocElkLCExLHt3aWR0aDoiMjAwcHgifSksY1RleHQocElkLCJ1c2Vyc29ubGluZSIsIiIse3N0Ont0ZXh0QWxpZ246ImNlbnRlciIsdGV4dERlY29yYXRpb246InVuZGVybGluZSIsZm9udFNpemU6IjEwcHgiLG1hcmdpbkJvdHRvbToiMTBweCIsbWFyZ2luVG9wOiIwcHgifX0pLGNCcihwSWQpLHBJZD0ibWFpbl9lbGVtZW50cyIsJGlkKCJ0aXRsZUlkIikuaW5uZXJUZXh0PSJaSU5DIixjVGFiQnRuKCJlbGVtZW50X2xlZnRfYnV0dG9ucyIsW3tpZDoiZ2xvYmFsQ2hhdCIsZGlzcGxheToiZmxleCIsdHh0OiJnbG9iYWwgY2hhdCJ9LHtpZDoicHJpdmF0ZUNoYXQiLGRpc3BsYXk6ImZsZXgiLHR4dDoiPGI+UE08L2I+In0se2lkOiJzZWFyY2hVc2VyIixkaXNwbGF5OiJmbGV4Iix0eHQ6InNlYXJjaCB1c2VyIn1dLCJsIiksY1RhYkJ0bigiZWxlbWVudF9yaWdodF9idXR0b25zIixbe2lkOiJwYW5lbF91cGRhdGVzIixkaXNwbGF5OiJmbGV4Iix0eHQ6ImxvZ3MifSx7aWQ6InBhbmVsX3RpY2tldHMiLGRpc3BsYXk6ImZsZXgiLHR4dDoidGlja2V0cyJ9LHtpZDoicGFuZWxfcHJvZmlsZXMiLGRpc3BsYXk6ImdyaWQiLHR4dDoicHJvZmlsZSJ9XSwiciIpLCRpZCgicHJvZHVjdElkIikuaW5uZXJUZXh0PSJjb2xvcmJvdCIsY1RhYkJ0bigiZWxlbWVudF9idXR0b25zIixbe2lkOiJlbGVtZW50X21haW4iLHR4dDoibWFpbiJ9LHtpZDoiZWxlbWVudF9xcmNvZGUiLHR4dDoiUVIifSx7aWQ6ImVsZW1lbnRfc2V0dGluZyIsdHh0OiJjZmcifV0sImMiKSxjQ2hlY2tib3gocElkLCJjb2xvcmJvdCIsImVuYWJsZWQiLCJBY3RpdmEgZWwgZnVuY2lvbmFtaWVudG8gZGVsIGNvbG9yYm90LiIpLGNDdXN0b21zKHBJZCwicm5kIiwiZXh0cmEgb3B0aW9ucyIsKGU9PntjVGV4dChlLmNpZCwicm5kIiwiT3B0aW9ucyIsY1N0eWxlcy5kbGdUaXRsZXMpLGNDb21ib0JveChlLmNpZCwibWFpbl9rZXkiLCJtYWluIGtleSIsLTFlNSwxZTUsITEsIkxhIEtleSBwcmluY2lwYWwgY29uIGxhIGN1YWwgc2UgYWN0aXZhIGVsIGFpbS4iKSxjQ29tYm9Cb3goZS5jaWQsInNlY29uZGFyeV9rZXkiLCJzZWNvbmRhcnkga2V5IiwtMWU1LDFlNSwhMSwiTGEgS2V5IHNlY3VuZGFyaWEgY29uIGxhIGN1YWwgc2UgYWN0aXZhIGVsIGFpbS4iKSxjQ29tYm9Cb3goZS5jaWQsImRpc2FibGVfc2Vjb25kYXJ5X2tleSIsImRpc2FibGUga2V5IiwtMWU1LDFlNSwhMSwiTGEgS2V5IGNvbiBsYSBjdWFsIHNlIGRlc2FjdGl2YSBlbCBhaW0uIiksY0hyKGUuY2lkLCExLHt3aWR0aDoiMjAwcHgifSksY0NvbWJvQm94KGUuY2lkLCJ0eXBlX2Zvcm1hdCIsImZvcm1hdCIsMCw0LCExLCJEaXN0aW50b3MgbWV0b2RvcyBwYXJhIGVzY2FuZWFyL3Byb2Nlc2FyIGxvcyBjb2xvcmVzLiIpLGNDb21ib0JveChlLmNpZCwiY29sb3JfdHlwZSIsImNvbG9ycyIsMCw1LCExLCJFbCBjb2xvciBzZWxlY2Npb25hZG8gZXMgZW4gZWwgY3VhbCBzZSBiYXNhcmEgZWwgYWltYm90IiksY0NvbWJvQm94KGUuY2lkLCJzb3J0X21ldGhvZCIsIm1ldGhvZHMiLDAsOSwhMSwiRGlzdGludG9zIG1ldG9kb3MgcGFyYSBxdWUgZWwgYWltYm90IGFwdW50ZSwgc2UgcmVjb21pZW5kYSBlbCBCRVNULiIpLGNTbHJJbnQoZS5jaWQsImFjY2VwdGFibGVfYXJlYSIsImFjY2VwdGFibGUgYXJlYSIsNSwyMDAsNSwyMDAsIkFyZWEgYWNlcHRhYmxlIHBhcmEgZWwgZm9ybWF0byBweSAodGVzdCkuIiksZGxnLmNsb3NlQnRuKGUuY2lkKX0pLHtjb2xvcjoid2hpdGUiLHdpZHRoOiIzNTBweCJ9KSxjQ2hlY2tib3gocElkLCJkaW5hbWljX3Ntb290aCIsImRpbmFtaWMgc21vb3RoIiwiQWwgYWN0aXZhcmxvLCBibG9xdWVhIGVsIHNtb290aCBwcmluY2lwYWwuIiksY0N1c3RvbXMocElkLCJybmQiLCJleHRyYSBvcHRpb25zIiwoZT0+e2NUZXh0KGUuY2lkLCJybmQiLCJPcHRpb25zIixjU3R5bGVzLmRsZ1RpdGxlcyksY0NvbWJvQm94KGUuY2lkLCJkaW5hbWljX3Ntb290aF90eXBlIiwiZGluYW1pYyBzbW9vdGggdHlwZSIsLTFlNSwxZTUsITEsIkFqdXN0YSBlbCBzbW9vdGggZGVwZW5kaWVuZG8gbGEgZGlzdGFuY2lhIGRlbCBlbmVtaWdvIiksZGxnLmNsb3NlQnRuKGUuY2lkKX0pLHtjb2xvcjoid2hpdGUiLHdpZHRoOiIzNTBweCJ9KSxjSHIocElkLCExLHt3aWR0aDoiMjAwcHgifSksY1NsckludChwSWQsInRhcmdldF9vZmZzZXRfeCIsIm9mZnNldCBYIiwwLDUwLDEsMCwiQ3VhbnRvIG1hcyB2YWxvciB0ZW5nYSwgbWFzIHNlIGRlc3BsYXphIGEgbGEgZGVyZWNoYSBkZWwgdGFyZ2V0IGluaWNpYWwuIiksY1NsckludChwSWQsInRhcmdldF9vZmZzZXRfeSIsIm9mZnNldCBZIiwwLDUwLDEsNSwiQ3VhbnRvIG1hcyB2YWxvciB0ZW5nYSwgbWFzIHNlIGRlc3BsYXphIGEgYWJham8gZGVsIHRhcmdldCBpbmljaWFsLiIpLGNIcihwSWQsITEse3dpZHRoOiIyMDBweCJ9KSxjU2xyRmxvYXQocElkLCJzcGVlZCIsInNtb290aCIsMCwxNSwuMSwyLCJTdWF2aWRhZCBkZWwgYXB1bnRhZG8sIG1pZW50cmFzIG1hcyB0ZW5nYSwgbWFzIHN1YXZlIHNlIHZlIGVsIG1vdmltaWVudG8uIiksY1NsckludChwSWQsImZvdl94IiwiRm92IFgiLDUsNTAwLDUsNTAsIlJhbmdvL0ZvdiBob3Jpem9udGFsLCBtaWVudHJhcyBtYXMgdGVuZ2EsIG1hcyBhIGxvIGFuY2hvIGVzY2FuZWFyYS4iKSxjU2xySW50KHBJZCwiZm92X3kiLCJGb3YgWSIsNSwyNTAsNSw1MCwiUmFuZ28vRm92IHZlcnRpY2FsLCBtaWVudHJhcyBtYXMgdGVuZ2EsIG1hcyBhIGxvIGFsdG8gZXNjYW5lYXJhLiIpLGNIcihwSWQsITEse3dpZHRoOiIyMDBweCJ9KSxjQ2hlY2tib3gocElkLCJyZWNvaWwiLCJyZWNvaWwiLCJCYWphcmEgZWwgY3Jvc3NoYWlyIGEgbGEgaG9yYSBkZSBkaXNwYXJhciBjb24gbGEgTUFJTiBrZXkuIiksY0N1c3RvbXMocElkLCJybmQiLCJleHRyYSBvcHRpb25zIiwoZT0+e2NUZXh0KGUuY2lkLCJybmQiLCJPcHRpb25zIixjU3R5bGVzLmRsZ1RpdGxlcyksY0NoZWNrYm94KGUuY2lkLCJyY3NfY3JvdWNoX29ubHkiLCJjcm91Y2ggb25seSIsIlNvbG8gZnVuY2lvbmFyYSBzaSBlc3RhbW9zIGFwcmV0YW5kbyBDVFJMLiIpLGNTbHJJbnQoZS5jaWQsInJlY29pbF9kZWxheSIsImRlbGF5Iiw1LDUwMCw1LDIwMCwiRGVsYXkgcGFyYSBjYWRhIGJhamFkYSBkZWwgcmNzLiIsY1N0eWxlcy5zbGlkZXJzKSxjU2xySW50KGUuY2lkLCJyZWNvaWxfc3RyZW5naHQiLCJzdHJlbmdodCIsMSw1MCwxLDIsIkZ1ZXJ6YSAoUFgpIHF1ZSBiYWphcmEgZWwgcmNzIGNhZGEgRGVsYXkuIixjU3R5bGVzLnNsaWRlcnMpLGNTbHJJbnQoZS5jaWQsIm1heF9yZWNvaWxfb2Zmc2V0IiwibWF4IG9mZnNldCIsMSw1MCwxLDIsIkNhbnRpZGFkIG1heGltYSBkZSBwaXhlbGVzIHF1ZSBiYWphcmEgZWwgcmNzLiIsY1N0eWxlcy5zbGlkZXJzKSxkbGcuY2xvc2VCdG4oZS5jaWQpfSkse2NvbG9yOiJ3aGl0ZSIsd2lkdGg6IjM1MHB4In0pLGNIcihwSWQsITEse3dpZHRoOiIyMDBweCJ9KSxjQ2hlY2tib3gocElkLCJ0cmlnZ2VyYm90IiwidHJpZ2dlcmJvdCIsIkRpc3BhcmFyYSBhdXRvbWF0aWNhbWVudGUgY3VhbmRvIGVsIENPTE9SIHBhc2UgcG9yIGVsIGNyb3NzaGFpci4iKSxjQ3VzdG9tcyhwSWQsInJuZCIsImV4dHJhIG9wdGlvbnMiLChlPT57Y1RleHQoZS5jaWQsInJuZCIsIk9wdGlvbnMiLGNTdHlsZXMuZGxnVGl0bGVzKSxjQ2hlY2tib3goZS5jaWQsImRpc2FibGVfYWltX29uX3RyaWdnZXIiLCJkaXNhYmxlIGFpbSIsIkRlc2hhYmlsaXRhIGVsIGFpbSBjdWFuZG8gZXN0YSBwcmVzaW9uYWRvIGVsIHRyaWdnZXIuIiksY0NvbWJvQm94KGUuY2lkLCJ0cmlnZ2VyX3R5cGUiLCJ0eXBlIiwtMWU1LDFlNSwhMSksY0NvbWJvQm94KGUuY2lkLCJ0cmlnZ2VyX2tleSIsInRyaWdnZXIga2V5IiwtMWU1LDFlNSwhMSwiTGEgS2V5IGNvbiBsYSBjdWFsIHNlIGFjdGl2YSBlbCBUUklHR0VSLiIpLGNCcihlLmNpZCksY1NsckludChlLmNpZCwidHJpZ2dlcl9yYWRpdXMiLCJmb3YiLDEsNTAsMSwxNSwiUmFuZ28vRm92IHBhcmEgZGV0ZWN0YXIgZGVzZGUgZWwgY2VudHJvIGRlIGxhIG1pcmEsIG1pZW50cmFzIG1hcyB0ZW5nYSBtYXMgaW1wcmVjaXNvLiIsY1N0eWxlcy5zbGlkZXJzKSxjU2xySW50KGUuY2lkLCJ0cmlnZ2VyX2RlbGF5IiwiZGVsYXkiLDUsNTUwLDUsMjUwLCJEZWxheSBwYXJhIGNhZGEgZGlzcGFyby4iLGNTdHlsZXMuc2xpZGVycyksZGxnLmNsb3NlQnRuKGUuY2lkKX0pLHtjb2xvcjoid2hpdGUiLHdpZHRoOiIzNTBweCJ9KSxjSHIocElkLCExLHt3aWR0aDoiMjAwcHgifSksY0NoZWNrYm94KHBJZCwiYmhvcF90b2dnbGUiLCJiaG9wIiwiQWwgYWN0aXZhcmxvLCBkZWJlcyBiaW5kZWFyIGxhIGtleSBYQnV0dG9uMiBvIE1vdXNlNSBhbCBiaG9wIGVuIHZleiBkZWwgZXNwYWNpby4iKSxjQ3VzdG9tcyhwSWQsInJuZCIsImV4dHJhIG9wdGlvbnMiLChlPT57Y1RleHQoZS5jaWQsInJuZCIsIk9wdGlvbnMiLGNTdHlsZXMuZGxnVGl0bGVzKSxjU2xySW50KGUuY2lkLCJiaG9wX2RlbGF5IiwiYmhvcCBkZWxheSIsNSwyMDAsNSwyMDAsIkRlbGF5IGVudHJlIGNhZGEgc2FsdG8uIixjU3R5bGVzLnNsaWRlcnMpLGRsZy5jbG9zZUJ0bihlLmNpZCl9KSx7d2lkdGg6IjM1MHB4In0pLGNIcihwSWQsITEse3dpZHRoOiIyMDBweCJ9KSxjU2xySW50KHBJZCwiY3VzdG9tX3NsZWVwIiwic2xlZXAgJ21zJyIsMSwyMDAsMSwyMDAsIk1pbGlzZWd1bmRvcyBwYXJhIGFjdHVhbGl6YXIgZWwgY29sb3Jib3QsIG1pZW50cmFzIG1hcyB2YWxvciwgbWFzIHRhcmRhcmEgZW4gYWN0dWFsaXphci4iKSxmQ29tYm8oInRyaWdnZXJfdHlwZSIsInRyaWdnZXJfdHlwZSIpLGZDb21ibygiZGluYW1pY19zbW9vdGhfdHlwZSIsImRpbmFtaWNfc21vb3RoX3R5cGUiKSxmQ29tYm8oImNvbG9yX3R5cGUiLCJjb2xvcnMiKSxmQ29tYm8oInNvcnRfbWV0aG9kIiwibWV0aG9kcyIpLGZDb21ibygidHlwZV9mb3JtYXQiLCJmb3JtYXRzIik7Y29uc3QgYmluZEVsZW1lbnRzPVt7aWQ6Im1haW5fa2V5Iix0YXJnZXQ6Im1haW5fa2V5In0se2lkOiJzZWNvbmRhcnlfa2V5Iix0YXJnZXQ6InNlY29uZGFyeV9rZXkifSx7aWQ6InRyaWdnZXJfa2V5Iix0YXJnZXQ6InRyaWdnZXJfa2V5In0se2lkOiJkaXNhYmxlX3NlY29uZGFyeV9rZXkiLHRhcmdldDoiZGlzYWJsZV9zZWNvbmRhcnlfa2V5In1dO2ZDb21ibygiYWxsX3Byb2ZpbGVzIiwiYWxsX3Byb2ZpbGVzIikscElkPSJlbGVtZW50c19jZmdiIixjVGV4dChwSWQsInJuZCIsIiYjOTY3OTsgY2xvdWQgcHJvZmlsZXMiLHtzdDpjU3R5bGVzLnN1YnRpdGxlcyxmbjplPT57Y1Rvb2x0aXAoZS5pZCwicGVyZmlsZXMgY2xvdWQsIHNlIGd1YXJkYW4gZGUgZm9ybWEgc2VndXJhIGVuIGVsIHNlcnZpZG9yIGRlIHppbmMuIiksY0JyKCl9fSksY0J0bihwSWQsImJ0bl9zdl9wcm9maWxlIiwiY3JlYXRlIHByb2ZpbGUiLCgoKT0+e2RsZy5zaG93KCJkbGdfY3JlYXRlX3Byb2YiKX0pLCJHdWFyZGEgdHUgcGVyZmlsIGFjdHVhbCBlbiBlbCBzZXJ2aWRvciwgZWwgY3VhbCBwdWVkZXMgY2FyZ2FyIix7bWFyZ2luUmlnaHQ6IjVweCJ9KSxkbGcuY3JlYXRlKCJlbGVtZW50X2NvbmZpZyIsImRsZ19jcmVhdGVfcHJvZiIse2ZuYzplPT57Y1RleHQoZS5pZCwicm5kIiwiQ2xvdWQgcHJvZmlsZSBjcmVhdG9yLiIsY1N0eWxlcy5kbGdUaXRsZXMpLGNUeHRib3goZS5pZCwiY3Byb2ZpbGVuYW1lIiwhMSwicHJvZmlsZSBuYW1lICIsIiIse3Jlc2l6ZToibm9uZSIsb3ZlcmZsb3c6ImhpZGRlbiIsd2hpdGVTcGFjZToicHJlLXdyYXAiLG1hcmdpblRvcDoiNXB4Iixjb2xvcjoid2hpdGUiLGxhYmVsejp7Y29sb3I6IndoaXRlIn19LHtwYXR0ZXJuOiJeW2EtekEtWjAtOV0qJCIsbWluTGVuZ3RoOjEsbWF4TGVuZ3RoOjE2LHBsYWNlaG9sZGVyOiJuYW1lIixyZXF1aXJlZDohMH0pLGNCdG4oZS5pZCwicm5kIiwiY3JlYXRlIiwoKCk9PntpZihjVHh0VmFsaWQoImNwcm9maWxlbmFtZSIpKXtsZXQgZT0kaWQoImNwcm9maWxlbmFtZSIpLnZhbHVlO3puQnRuKCJzYXZlX3Byb2ZpbGUiLGUrIi0iK2UpLnRoZW4oKGU9Pntub3RpZnkoZS5yZXBsYWNlKC9fL2csIiAiKSw3ZTMpfSkpLmNhdGNoKChlPT57JGxvZyhlKX0pKX1lbHNlIG5vdGlmeSgiTm8gc2UgYWNlcHRhbiBjYXJhY3RlcmVzIGVzcGVjaWFsZXMsIGRlIDEgYSAxNiBjYXJhY3RlcmVzIHNvbGFtZW50ZS4iLDVlMywiUkVEIil9KSwiIix7d2lkdGg6IjEwMCUifSksZGxnLmNsb3NlQnRuKGUuaWQpfX0pLGNCdG4ocElkLCJidG5fcHJvZmlsZV9saXN0IiwicHJvZmlsZSBsaXN0IiwoKCk9PntkbGcuc2hvdygiZGxnX3Byb2ZfbGlzdCIpLHpuQnRuKCJwcm9maWxlX2xpc3QiKS50aGVuKChlPT57dHJ5e2xldCB0PUpTT04ucGFyc2UoZSk7aWYoMD09dC5sZW5ndGgpcmV0dXJuICRpZCgidV9wcm9maWxlX2xpc3RkdiIpLmlubmVySFRNTD0ibm8gcHJvZmlsZXMiLHZvaWQgbm90aWZ5KCJ1c2VyIGhhcyBubyBwcm9maWxlcyIsN2UzKTtsZXQgaT0iIjtmb3IoY29uc3QgZSBpbiB0KWlmKE9iamVjdC5oYXNPd25Qcm9wZXJ0eS5jYWxsKHQsZSkpe2NvbnN0IG49dFtlXTtpKz0iPC90cj4iLGkrPSI8dGQ+IitlKyI8L3RkPiIsaSs9Ijx0ZD4iKyR0aW1lLnN0cihuLnRpbWVzdGFtcCwyKSsiPC90ZD4iLGkrPSI8dGQ+IixpKz0iPGJ1dHRvbiBjbGFzcz0nbmV3YnV0dG9uJyB0aXRsZT0nbG9hZCBwcm9maWxlJyBzdHlsZT0naGVpZ2h0OjMwcHg7d2lkdGg6YXV0bztkaXNwbGF5OmlubGluZS1ibG9jazsnIG9uY2xpY2s9XCJ6bkJ0bignZ2V0X3Byb2ZpbGUnLCAnIitlKyInKS50aGVuKGFzeW5jIChyVHh0KT0+IHsgbm90aWZ5KHJUeHQucmVwbGFjZSgvXy9nLCAnICcpLCA3MDAwKTthd2FpdCBsU2VydmVyKCk7ZkNvbWJvKCdhbGxfcHJvZmlsZXMnLCAnYWxsX3Byb2ZpbGVzJyk7fSkuY2F0Y2goKGVycik9PiB7JGxvZyhlcnIpO30pO1wiPjxpIGNsYXNzPSdmYSBmYS1wbGF5JyBhcmlhLWhpZGRlbj0ndHJ1ZSc+PC9pPjwvYnV0dG9uPiIsaSs9IjxidXR0b24gY2xhc3M9J25ld2J1dHRvbicgdGl0bGU9J3NhdmUvb3ZlcnJpZGUgcHJvZmlsZScgc3R5bGU9J21hcmdpbi1sZWZ0OjJweDtoZWlnaHQ6MzBweDt3aWR0aDphdXRvO2Rpc3BsYXk6aW5saW5lLWJsb2NrOycgb25jbGljaz1cImlmKCFjb25maXJtKCdBcmUgeW91IHN1cmUgeW91IHdhbnQgdG8gb3ZlcnJpZGUgdGhpcyBjbG91ZCBwcm9maWxlIHdpdGggeW91ciBjdXJyZW50IHByb2ZpbGU/JykpIHJldHVybjsgem5CdG4oJ3NhdmVfcHJvZmlsZScsICciK2UrIicpLnRoZW4oYXN5bmMgIChyVHh0KT0+IHsgbm90aWZ5KHJUeHQucmVwbGFjZSgvXy9nLCAnICcpLCA3MDAwKTt9KS5jYXRjaCgoZXJyKSA9PnskbG9nKGVycil9KVwiPjxpIGNsYXNzPSdmYSBmYS1mbG9wcHktbycgYXJpYS1oaWRkZW49J3RydWUnPjwvaT48L2J1dHRvbj4iLGkrPSI8L3RkPiIsaSs9IjwvdHI+In0kaWQoInVfcHJvZmlsZV9saXN0IikuaW5uZXJIVE1MPSI8YnI+XG5cdFx0XHRcdDx0cj5cblx0XHRcdFx0PHRoPjwvdGg+XG5cdFx0XHRcdDx0aD48L3RoPlxuXHRcdFx0XHQ8dGg+PC90aD5cblx0XHRcdFx0PC90cj5cblx0XHRcdFx0IiwkaWQoInVfcHJvZmlsZV9saXN0MiIpLmlubmVySFRNTD0nPGJyPlxuXHRcdFx0XHQ8dHI+XG5cdFx0XHRcdDx0aD5uYW1lPC90aD5cblx0XHRcdFx0PHRoIHN0eWxlPSJjdXJzb3I6cG9pbnRlcjsiIG9uY2xpY2s9IiR0Ymwuc29ydCgxLCBcJ3VfcHJvZmlsZV9saXN0XCcpIj5sYXN0IHNhdmVkPC90aD5cblx0XHRcdFx0XHgzYyEtLTx0aD5zdGF0dXM8L3RoPi0tXHgzZVxuXHRcdFx0XHQ8dGg+b3B0aW9uczwvdGg+XG5cdFx0XHRcdDwvdHI+XG5cdFx0XHRcdCcsJGlkKCJ1X3Byb2ZpbGVfbGlzdCIpLmlubmVySFRNTCs9aX1jYXRjaCh0KXtpZigkbG9nKHQpLGUuaW5jbHVkZXMoIl8iKSlyZXR1cm4gdm9pZCBub3RpZnkoZS5yZXBsYWNlKC9fL2csIiAiKSw3ZTMpfX0pKS5jYXRjaCgoZT0+eyRsb2coZSl9KSl9KSwiTXVlc3RyYSB0dXMgcGVyZmlsZXMgY3JlYWRvcyIpLGRsZy5jcmVhdGUoImVsZW1lbnRfY29uZmlnIiwiZGxnX3Byb2ZfbGlzdCIse2ZuYzplPT57Y1RleHQoZS5pZCwicm5kIiwiQ2xvdWQgcHJvZmlsZXMuIixjU3R5bGVzLmRsZ1RpdGxlcyksY1R4dGJveChlLmlkLCJmaW5kX3ByX3RibGlzdCIsITEsIiIsIiIse30se3JlcXVpcmVkOiExLHBsYWNlaG9sZGVyOiJzZWFyY2ggcHJvZmlsZSIsZXZlbnRMaXN0ZW5lcjp7aW5wdXQ6KCk9PnskdGJsLnNlYXJjaCgiZmluZF9wcl90Ymxpc3QiLCJ1X3Byb2ZpbGVfbGlzdCIpfX19LCEwKSxjVGFibGUoZS5pZCwidV9wcm9maWxlX2xpc3QyIiwiIix7Y29sb3I6IndoaXRlIix3aWR0aDoiMTAwJSJ9KSxjRGl2KGUuaWQsInVfcHJvZmlsZV9saXN0ZHYiLHttYXhIZWlnaHQ6IjM1MHB4IixvdmVyZmxvdzoiYXV0byJ9LHt9LChlPT57Y1RhYmxlKGUuaWQsInVfcHJvZmlsZV9saXN0IiwiIix7Y29sb3I6IndoaXRlIix3aWR0aDoiMTAwJSJ9KX0pKSxkbGcuY2xvc2VCdG4oZS5pZCl9fSksY0hyKCksY1RleHQocElkLCJybmQiLCImIzk2Nzk7IGxvY2FsIHByb2ZpbGVzIix7c3Q6Y1N0eWxlcy5zdWJ0aXRsZXMsZm46ZT0+e2NUb29sdGlwKGUuaWQsInBlcmZpbGVzIGxvY2FsZXMsIHNlIGd1YXJkYW4gZW4gbGEgY2ZnIGxvY2FsLCBzZSBwdWVkZW4gYm9ycmFyL3BlcmRlciBlbiBjYXNvIGRlIGxpbXBpYXIgVEVNUC4iKSxjQnIoKX19KSxjQ29tYm9Cb3gocElkLCJhbGxfcHJvZmlsZXMiLCJwcm9maWxlIiwwLDIwLCExLCIiLChhc3luYyBlPT57YXdhaXQgbFNlcnZlcigpfSkse21pbldpZHRoOiIxODBweCJ9KSxjVHh0Ym94KHBJZCwicHJvZmlsZV9uYW1lX2MiLCExLCIiLCI0LTkgY2hhcmFjdGVycy4iLHttYXJnaW5MZWZ0OiI1cHgiLHdpZHRoOiIxNTBweCJ9LHtwYXR0ZXJuOiJeW2EtekEtWjAtOV0qJCIsbWluTGVuZ3RoOjMsbWF4TGVuZ3RoOjkscmVxdWlyZWQ6ITF9LCEwKSxjQnRuKHBJZCwiYnRuX3Byb2ZpbGVfY2hhbmdlIiwiY2hhbmdlIG5hbWUiLChhc3luYygpPT57aWYoY1R4dFZhbGlkKCJwcm9maWxlX25hbWVfYyIpKXt6blNJbmZvKCJwcm9maWxlX25hbWUiLCRpZCgicHJvZmlsZV9uYW1lX2MiKS52YWx1ZSksJGlkKCJwcm9maWxlX25hbWVfYyIpLnZhbHVlPSIiLGF3YWl0IGxTZXJ2ZXIoKSxmQ29tYm8oImFsbF9wcm9maWxlcyIsImFsbF9wcm9maWxlcyIpfWVsc2Ugbm90aWZ5KCJObyBzZSBhY2VwdGFuIGVzcGFjaW9zIG8gY2FyYWN0ZXJlcyBlc3BlY2lhbGVzLCB7My05IGNoYXJzfS4iLDVlMywiUkVEIil9KSwiQ2FtYmlhIGVsIG5vbWJyZSBkZWwgcHJvZmlsZSIse21hcmdpblJpZ2h0OiIxMHB4In0pLGNCdG4ocElkLCJidG5fcHJvZmlsZV9leHBvcnQiLCJleHBvcnQgcHJvZmlsZSIsKCgpPT57ZGxnLnNob3coImNvbmZpcm1fZXhwX3ByIil9KSwiRXhwb3J0YSBlbCBwZXJmaWwgYWN0dWFsIGFsIENMSVBCT0FSRC4iLHttYXJnaW5SaWdodDoiMTBweCJ9KSxkbGcuY3JlYXRlKCJlbGVtZW50X2NvbmZpZyIsImNvbmZpcm1fZXhwX3ByIix7Zm5jOmU9PntjVGV4dChlLmlkLCJybmQiLCJZb3UgYXJlIGFib3V0IHRvIDx1PkVYUE9SVDwvdT4geW91ciBjdXJyZW50IHByb2ZpbGUuIixjU3R5bGVzLmRsZ1RpdGxlcyksY0J0bihlLmlkLCJybmQiLCJDT05GSVJNIiwoYXN5bmMoKT0+e3puQnRuKCJleHBvcnRfcHJvZmlsZSIpLGRsZy5jbG9zZShlLmlkKX0pLCIiLHt3aWR0aDoiMTAwJSIsZm9udFdlaWdodDoiYm9sZCJ9KSxkbGcuY2xvc2VCdG4oZS5pZCl9fSksY0J0bihwSWQsInJuZCIsImltcG9ydCBwcm9maWxlIiwoYXN5bmMoKT0+e2RsZy5zaG93KCJjb25maXJtX2ltcF9wciIpfSkpLGRsZy5jcmVhdGUoImVsZW1lbnRfY29uZmlnIiwiY29uZmlybV9pbXBfcHIiLHtmbmM6ZT0+e2NUZXh0KGUuaWQsInJuZCIsIllvdSBhcmUgYWJvdXQgdG8gaW1wb3J0IGFuIDx1PlVOS05PV04gUFJPRklMRTwvdT48YnI+VGhpcyB3aWxsIDx1Pm92ZXJyaWRlPC91PiB5b3VyIGN1cnJlbnQgcHJvZmlsZS4iLGNTdHlsZXMuZGxnVGl0bGVzKSxjQnRuKGUuaWQsInJuZCIsIkNPTkZJUk0iLChhc3luYygpPT57em5CdG4oImltcG9ydF9wcm9maWxlIiksYXdhaXQgbFNlcnZlcigpLGZDb21ibygiYWxsX3Byb2ZpbGVzIiwiYWxsX3Byb2ZpbGVzIiksZGxnLmNsb3NlKGUuaWQpfSksIiIse3dpZHRoOiIxMDAlIixmb250V2VpZ2h0OiJib2xkIn0pLGRsZy5jbG9zZUJ0bihlLmlkKX19KSxjQnRuKHBJZCwicm5kIiwic2V0IGRlZmF1bHQiLCgoKT0+e2RsZy5zaG93KCJjZnJfc2V0ZGVmYXVsdCIpfSksIkRldnVlbHZlIGVsIHBlcmZpbCBhIHZhbG9yZXMgZGVmYXVsdCwgdGFtYmllbiBlbCBub21icmUuIiksZGxnLmNyZWF0ZShwSWQsImNmcl9zZXRkZWZhdWx0Iix7Zm5jOmU9PntjVGV4dChlLmlkLCJybmQiLCJZb3UgYXJlIGFib3V0IHRvIHNldCB0aGUgY3VycmVudDxicj5wcm9maWxlIHRvIGRlZmF1bHQgVkFMVUVTIixjU3R5bGVzLmRsZ1RpdGxlcyksY0J0bihlLmlkLCJybmQiLCJDT05GSVJNIiwoYXN5bmMoKT0+e3puQnRuKCJkZWZhdWx0X3Byb2ZpbGUiKSxhd2FpdCBsU2VydmVyKCksZkNvbWJvKCJhbGxfcHJvZmlsZXMiLCJhbGxfcHJvZmlsZXMiKSxkbGcuY2xvc2UoZS5pZCl9KSwiIix7d2lkdGg6IjEwMCUiLGZvbnRXZWlnaHQ6ImJvbGQifSksZGxnLmNsb3NlQnRuKGUuaWQpfX0pLGNIcigpLGNUZXh0KHBJZCwicm5kIiwiJiM5Njc5OyBsb2NhbCBjb25maWciLHtzdDpjU3R5bGVzLnN1YnRpdGxlcyxmbjplPT57Y1Rvb2x0aXAoZS5pZCwiY29uZmlnIGxvY2FsIHF1ZSBjb250aWVuZSB0b2RvcyBsb3MgcGVyZmlsZXMgY3JlYWRvcywgc2UgcHVlZGVuIGJvcnJhci9wZXJkZXIgZW4gY2FzbyBkZSBsaW1waWFyIFRFTVAuIiksY0JyKCl9fSksZGxnLmNyZWF0ZSgiZWxlbWVudF9jb25maWciLCJjb25maXJtX2xvYWRjZmciLHtmbmM6ZT0+e2NUZXh0KGUuaWQsInJuZCIsIllvdSBhcmUgYWJvdXQgdG8gbG9hZCB5b3VyIDx1PmxvY2FsPC91PiBDRkciLGNTdHlsZXMuZGxnVGl0bGVzKSxjQnRuKGUuaWQsInJuZCIsIkNPTkZJUk0iLChhc3luYygpPT57em5CdG4oImxvYWRfYyIpLGF3YWl0IGxTZXJ2ZXIoKSxmQ29tYm8oImFsbF9wcm9maWxlcyIsImFsbF9wcm9maWxlcyIpLGRsZy5jbG9zZShlLmlkKX0pLCIiLHt3aWR0aDoiMTAwJSIsZm9udFdlaWdodDoiYm9sZCJ9KSxkbGcuY2xvc2VCdG4oZS5pZCl9fSksZGxnLmNyZWF0ZSgiZWxlbWVudF9jb25maWciLCJjb25maXJtX3NhdmVjZmciLHtmbmM6ZT0+e2NUZXh0KGUuaWQsInJuZCIsIllvdSBhcmUgYWJvdXQgdG8gc2F2ZSB5b3VyIGxvY2FsIENGRyIsY1N0eWxlcy5kbGdUaXRsZXMpLGNCdG4oZS5pZCwicm5kIiwiQ09ORklSTSIsKCgpPT57em5CdG4oInNhdmVfYyIpLGRsZy5jbG9zZShlLmlkKX0pLCIiLHt3aWR0aDoiMTAwJSIsZm9udFdlaWdodDoiYm9sZCJ9KSxkbGcuY2xvc2VCdG4oZS5pZCl9fSksZGxnLmNyZWF0ZSgiZWxlbWVudF9jb25maWciLCJjb25maXJtX2ltcG9ydGNmZyIse2ZuYzplPT57Y1RleHQoZS5pZCwicm5kIiwiWW91IGFyZSBhYm91dCB0byBJTVBPUlQgYW5vdGhlciBDRkciLGNTdHlsZXMuZGxnVGl0bGVzKSxjQnRuKGUuaWQsInJuZCIsIkNPTkZJUk0iLCgoKT0+e3puQnRuKCJpbXBvcnRfYyIpLGRsZy5jbG9zZShlLmlkKX0pLCIiLHt3aWR0aDoiMTAwJSIsZm9udFdlaWdodDoiYm9sZCJ9KSxkbGcuY2xvc2VCdG4oZS5pZCl9fSksZGxnLmNyZWF0ZSgiZWxlbWVudF9jb25maWciLCJjb25maXJtX2V4cG9ydGNmZyIse2ZuYzplPT57Y1RleHQoZS5pZCwicm5kIiwiWW91IGFyZSBhYm91dCB0byBFWFBPUlQgdGhlIGVudGlyZSBsb2NhbCBDRkcsPGJyPiB3aGljaCBpbmNsdWRlIGFsbCB5b3VyIHByb2ZpbGVzIixjU3R5bGVzLmRsZ1RpdGxlcyksY0J0bihlLmlkLCJybmQiLCJDT05GSVJNIiwoKCk9Pnt6bkJ0bigiZXhwb3J0X2MiKSxkbGcuY2xvc2UoZS5pZCl9KSwiIix7d2lkdGg6IjEwMCUiLGZvbnRXZWlnaHQ6ImJvbGQifSksZGxnLmNsb3NlQnRuKGUuaWQpfX0pLGRsZy5jcmVhdGUoImVsZW1lbnRfY29uZmlnIiwiY29uZmlybV9leGl0Iix7Zm5jOmU9PntjVGV4dChlLmlkLCJybmQiLCJZb3UgYXJlIGFib3V0IHRvIGV4aXQiLGNTdHlsZXMuZGxnVGl0bGVzKSxjQnRuKGUuaWQsInJuZCIsIkNPTkZJUk0iLCgoKT0+e2NFeGl0KCksZGxnLmNsb3NlKGUuaWQpfSksIiIse3dpZHRoOiIxMDAlIixmb250V2VpZ2h0OiJib2xkIn0pLGRsZy5jbG9zZUJ0bihlLmlkKX19KSxwSWQ9InBhbmVsX3RpY2tldHMiLGNUZXh0KHBJZCwidGlja2V0Y2VudGVyIiwiVGlja2V0IENlbnRlciIse3N0Ont0ZXh0QWxpZ246ImNlbnRlciIsdGV4dERlY29yYXRpb246InVuZGVybGluZSIsZm9udFNpemU6IjE4cHgiLG1hcmdpbkJvdHRvbToiMTBweCIsbWFyZ2luVG9wOiIwcHgifX0pO2xldCBzdFRpY2tldHNGYXE9e3RleHRBbGlnbjoiY2VudGVyIixmb250U2l6ZToiMTRweCIsbWFyZ2luQm90dG9tOiIxMHB4In07Y1RleHQocElkLCJybmQiLCItIERvIG5vdCBzcGFtIHRoZSB0aWNrZXQgc3lzdGVtLjxicj4tIE9ubHkgY3JlYXRlIHRpY2tldHMgaWYgeW91IGhhdmUgYW4gaXNzdWUuPGJyPi0gT25seSBjcmVhdGUgdGlja2V0cyBpZiB5b3UgaGF2ZSBhIGZlYXR1cmUgcmVxdWVzdC48YnI+Iix7c3Q6c3RUaWNrZXRzRmFxfSksY1RleHQocElkLCJybmQiLCItIE9ubHkgY3JlYXRlIHRpY2tldHMgaWYgeW91IG5lZWQgPHU+aGVscDwvdT4uPGJyPi0gQWxsIHRpY2tldHMgYXJlIDx1PnByaXZhdGU8L3U+Ljxicj4tIERvIG5vdCBwb3N0IGlycmVsZXZhbnQgY29tbWVudHMgaW4gdGlja2V0cyBvciB5b3UgbWF5IGJlIDx1PmJhbm5lZDwvdT4uIix7c3Q6c3RUaWNrZXRzRmFxfSksY0NvbWJvQm94MihwSWQsInRpY2tldF9iZWhhdmlvciIsWyJCdWciLCJGZWF0dXJlIiwiT3RoZXIiXSwhMCwiU2VsZWNjaW9uYSB1bmEgcmF6b24gZGVsIHRpY2tldC4iKSxjVGV4dEFyZWEocElkLCJ0aWNrZXRfY29udGVudCIsITAsIiIse2hlaWdodDoiMTAwcHgiLHJlc2l6ZToibm9uZSIsb3ZlcmZsb3c6ImhpZGRlbiIsd2hpdGVTcGFjZToicHJlLXdyYXAiLG1hcmdpblRvcDoiNXB4In0se3BhdHRlcm46Il5bYS16QS1aMC05Oi0rLyBdKiR7NX0iLG1pbkxlbmd0aDo1LG1heExlbmd0aDoyNTYscGxhY2Vob2xkZXI6ImluZm8iLHJlcXVpcmVkOiEwfSk7bGV0IHNob3dfdGlja2V0X2M9ITE7ZnVuY3Rpb24gb3duSW5mbygpe3puR2V0KCJnZXRfdXNlcl9pbmZvIiwieiIpLnRoZW4oKGU9PntsZXQgdD1KU09OLnBhcnNlKGUpO3QuYXZhdGFyJiYoJGlkKCJ1c2VyX2F2YXRhciIpLnNyYz13aW5kb3cuYXRvYih0LmF2YXRhciksJGlkKCJhdnRyX3ByZXZpZXciKS5zcmM9d2luZG93LmF0b2IodC5hdmF0YXIpKTtsZXQgaT0iIjtpKz0iPHAgc3R5bGU9J21hcmdpbi10b3A6MHB4O21hcmdpbi1ib3R0b206MHB4Oyc+PGI+QCIrdC5hbGlhcyx0LmFsaWFzLmluY2x1ZGVzKCJaVXNlciIpfHwoY1VzZXJBbGlhcz0hMCksdC5yb2xlJiYoaSs9IjxzcGFuIHN0eWxlPSdkaXNwbGF5OmlubGluZTtmb250LXNpemU6MTBweDtjb2xvcjoiK3JvbGVjbHJbdC5yb2xlLnRvTG93ZXJDYXNlKCldKyI7Jz4gKCIrdC5yb2xlKyIpPC9zcGFuPjxicj48L2I+PC9wPiIsY1VzZXJSb2xlPXQucm9sZS50b0xvd2VyQ2FzZSgpKSx0LnVzZXJfaWQ/aSs9IjxwIHN0eWxlPSdmb250LXNpemU6MTBweDttYXJnaW4tdG9wOjBweDsnPnVpZDogIit0LnVzZXJfaWQ6aSs9IjxwIHN0eWxlPSdmb250LXNpemU6MTBweDttYXJnaW4tdG9wOjBweDsnPnVpZDogTk8iLHQucmVnaXN0ZXJfdGltZT9pKz0iIC0gam9pbmVkOiAiKyR0aW1lLnN0cih0LnJlZ2lzdGVyX3RpbWUsMCkrIjwvcD4iOmkrPSI8L3A+Iix0LmRlc2NyaXB0aW9uP2krPSI8cCBzdHlsZT0nZm9udC1zaXplOjEycHg7bWFyZ2luLXRvcDogMHB4Oyc+aW5mbzogIit3aW5kb3cuYXRvYih0LmRlc2NyaXB0aW9uKSsiPC9wPiI6aSs9IjxwPihubyBpbmZvIHlldCk8L3A+IiwkaWQoInVzZXJfaW5mbyIpLmlubmVySFRNTD1pLGhMb2FkaW5nKCJsb2FkaW5nYXZhdGFyIil9KSkuY2F0Y2goKGU9PnskbG9nKGUpfSkpfWNCdG4ocElkLCJybmQiLCJjcmVhdGUgdGlja2V0IiwoKCk9PntpZighc2hvd190aWNrZXRfYylyZXR1cm4gc2V0VmlzKFsidGlja2V0X2NvbnRlbnQiLCJ0aWNrZXRfYmVoYXZpb3IiXSwiaW5saW5lLWJsb2NrIiksdm9pZChzaG93X3RpY2tldF9jPSEwKTtpZihjVHh0VmFsaWQoInRpY2tldF9jb250ZW50Iikpe2xldCBlPSRpZCgidGlja2V0X2NvbnRlbnQiKS52YWx1ZTt6bkJ0bigiY3JlYXRlX3RpY2tldCIsJGlkKCJ0aWNrZXRfYmVoYXZpb3IiKS52YWx1ZSsiLSIrZSkudGhlbigoZT0+e25vdGlmeShlLnJlcGxhY2UoL18vZywiICIpLDdlMyl9KSkuY2F0Y2goKGU9PnskbG9nKGUpfSkpfWVsc2Ugbm90aWZ5KCJObyBzZSBhY2VwdGFuIGNhcmFjdGVyZXMgZXNwZWNpYWxlcywgZGUgNSBhIDI1NiBjYXJhY3RlcmVzIHNvbGFtZW50ZS4iLDVlMywiUkVEIil9KSwiQ3JlYSB1biB0aWNrZXQgZWwgY3VhbCBzZXJhIGF0ZW5kaWRvL3Zpc3RvIHBvciBsb3MgYWRtaW5pc3RyYWRvcmVzLiIpLGNIcihwSWQsITEse3dpZHRoOiIyMDBweCJ9KSxjQnRuKHBJZCwicm5kIiwidmlldyB0aWNrZXRzIiwoKCk9PntzaG93X3RpY2tldF9jJiYoc2V0VmlzKFsidGlja2V0X2NvbnRlbnQiLCJ0aWNrZXRfYmVoYXZpb3IiXSwibm9uZSIpLHNob3dfdGlja2V0X2M9ITEpLHpuQnRuKCJnZXRfdGlja2V0cyIpLnRoZW4oKGU9PntpZihlLnNwbGl0KCJfIikubGVuZ3RoLTE+MilyZXR1cm4gdm9pZCBub3RpZnkoZS5yZXBsYWNlKC9fL2csIiAiKSw3ZTMpO2xldCB0PUpTT04ucGFyc2UoZSk7aWYoMD09dC5sZW5ndGgpcmV0dXJuICRpZCgidXNlcl90aWNrZXRzIikuaW5uZXJIVE1MPSJubyB0aWNrZXRzIix2b2lkIG5vdGlmeSgidXNlciBoYXMgbm8gdGlja2V0cyIsN2UzKTskaWQoInVzZXJfdGlja2V0cyIpLmlubmVySFRNTD0ibm8gdGlja2V0cyI7bGV0IGk9IiI7Zm9yKGNvbnN0IGUgaW4gdClpZihPYmplY3QuaGFzT3duUHJvcGVydHkuY2FsbCh0LGUpKXtjb25zdCBuPXRbZV07aSs9IjxiPjx1PiIrbi5yZWFzb24rIiBbIituLmlkKyJdPC91PjwvYj4gfCA8YnV0dG9uIGNsYXNzPSduZXdidXR0b24nIHR0aXA9J0RlbGV0ZSB0aWNrZXQnIHN0eWxlPSdkaXNwbGF5OmlubGluZS1ibG9jaztjb2xvcjpyZWQ7aGVpZ2h0OjMwcHg7JyBvbmNsaWNrPVwiaWYoIWNvbmZpcm0oJ0FyZSB5b3Ugc3VyZSB5b3Ugd2FudCB0byBkZWxldGUgdGhpcyB0aWNrZXQ/JykpIHJldHVybjsgem5CdG4oJ2RlbGV0ZV90aWNrZXQnLCAnIituLmlkKydcJykudGhlbiggKHJUeHQpID0+eyBub3RpZnkoclR4dC5yZXBsYWNlKC9fL2csIFwnIFwnKSwgNzAwMCk7fSkuY2F0Y2goIChlcnIpID0+eyRsb2coZXJyKTt9KTsiPjxpIGNsYXNzPSJmYSBmYS10aW1lcy1jaXJjbGUiIGFyaWEtaGlkZGVuPSJ0cnVlIj48L2k+PC9idXR0b24+PGJyPicsaSs9IjxwPiIrd2luZG93LmF0b2Iobi5jb250ZW50KSsiPC9wPiIsaSs9IjxociBjbGFzcz0naHJDbGFzcyc+In0kaWQoInVzZXJfdGlja2V0cyIpLmlubmVySFRNTD1pfSkpLmNhdGNoKChlPT57JGxvZyhlKX0pKX0pLCJNdWVzdHJhIHR1cyB0aWNrZXRzIGNyZWFkb3MiKSxjVGV4dChwSWQsInVzZXJfdGlja2V0cyIsIiIse3N0Ont0ZXh0QWxpZ246ImNlbnRlciJ9fSksY0JyKHBJZCkscElkPSJwYW5lbF9wcm9maWxlcyIsY1RleHQocElkLCJybmQiLCJQcm9maWxlIix7c3Q6e3RleHRBbGlnbjoiY2VudGVyIixmb250V2VpZ2h0OiJib2xkIix0ZXh0RGVjb3JhdGlvbjoidW5kZXJsaW5lIixmb250U2l6ZToiMjBweCIsbWFyZ2luQm90dG9tOiIxMHB4IixtYXJnaW5Ub3A6IjBweCJ9fSksY0RpdihwSWQsInVzZXJpbmZvIix7ZGlzcGxheToiaW5saW5lLWdyaWQiLGdyaWRUZW1wbGF0ZUNvbHVtbnM6InJlcGVhdCgzLCAxZnIpIixncmlkR2FwOiIxMHB4In0pLGNMb2FkaW5nKHBJZCwibG9hZGluZ2F2YXRhciIse3Bvc2l0aW9uOiJyZWxhdGl2ZSIsZGlzcGxheToiYmxvY2siLGxlZnQ6IjQ4cHgiLHRvcDoiLTU5cHgifSkscElkPSJ1c2VyaW5mbyIsY0ltZyhwSWQsInVzZXJfYXZhdGFyIixkQXZhdGFyLDkwLDkwLHtqdXN0aWZ5U2VsZjoic3RhcnQiLG1hcmdpbkxlZnQ6IjEwcHgiLG9iamVjdEZpdDoiY292ZXIiLGJvcmRlclJhZGl1czoiNXB4In0pLGNUZXh0KHBJZCwidXNlcl9pbmZvIiwibm9uZSIse3N0OntkaXNwbGF5OiJncmlkIixncmlkVGVtcGxhdGVDb2x1bW5zOiIxNjBweCIsbWFyZ2luVG9wOiIwcHgifX0pLHBJZD0icGFuZWxfcHJvZmlsZXMiLGNIcihwSWQsITEse3dpZHRoOiIyMDBweCJ9KSxjQnRuKHBJZCwicm5kIiwiY3JlYXRlIHBhc3N3b3JkIiwoKCk9PntkbGcuc2hvdygicGFzc3dvcmRfZGxnIil9KSwiUGVybWl0ZSBjcmVhciB1bmEgcGFzc3dvcmQgdW5pY2EgcGFyYSB0dSB1c3VhcmlvLCB0ZSBzZXJ2aXJhIHBhcmEgbG9ndWVhcnRlIGVuIGxhIHBhZ2luYSB3ZWIuIix7anVzdGlmeVNlbGY6ImNlbnRlciJ9KSxkbGcuY3JlYXRlKHBJZCwicGFzc3dvcmRfZGxnIix7Zm5jOmU9PntjVGV4dChlLmlkLCJybmQiLCJDcmVhdGUgUGFzc3dvcmQiLGNTdHlsZXMuZGxnVGl0bGVzKSxjVHh0Ym94KGUuaWQsInBmX3Bhc3N3b3JkX3RleHRib3giLCExLCIiLCI0LTIwIGNoYXJhY3RlcnMsIG5vIHN5bWJvbHMhIix7bWFyZ2luVG9wOiI1cHgiLHdpZHRoOiI5NyUifSx7cGF0dGVybjoiXlthLXpBLVowLTldKiQiLG1pbkxlbmd0aDo0LG1heExlbmd0aDoyMCxyZXF1aXJlZDohMH0pLGNCcihlLmlkKSxjQnRuKGUuaWQsInJuZCIsImNyZWF0ZSIsKCgpPT57Y29uc3QgdD0kaWQoInBmX3Bhc3N3b3JkX3RleHRib3giKTtpZihjVHh0VmFsaWQodC5pZCkpe3puQnRuKCJjcmVhdGVfcGFzc3dvcmQiLHQudmFsdWUpLnRoZW4oKHQ9Pntub3RpZnkodC5yZXBsYWNlKC9fL2csIiAiKSw3ZTMpLHQuaW5jbHVkZXMoImNyZWF0ZWQiKSYmZGxnLmNsb3NlKGUuaWQpfSkpLmNhdGNoKChlPT57JGxvZyhlKX0pKX1lbHNlIG5vdGlmeSh0Lm1pbkxlbmd0aCsiIGEgIit0Lm1heExlbmd0aCsiIGNhcmFjdGVyZXMuIFNpbiBjYXJhY3RlcmVzL3NpbWJvbG9zIGVzcGVjaWFsZXMuIiw1ZTMsIlJFRCIpfSksIiIse3dpZHRoOiIxMDAlIn0pLGRsZy5jbG9zZUJ0bihlLmlkKX19KSxjQnRuKHBJZCwicm5kIiwiY2hhbmdlIGFsaWFzIiwoKCk9PntkbGcuc2hvdygiYWxpYXNfZGxnIil9KSwiUGVybWl0ZSBjYW1iaWFyIGVsIGFsaWFzIDEgdmV6IGNhZGEgMzAgZGlhcy4iLHtqdXN0aWZ5U2VsZjoiY2VudGVyIn0pLGRsZy5jcmVhdGUocElkLCJhbGlhc19kbGciLHtmbmM6ZT0+e2NUZXh0KGUuaWQsInJuZCIsIkNoYW5nZSBhbGlhcyIsY1N0eWxlcy5kbGdUaXRsZXMpLGNUeHRib3goZS5pZCwicGZfYWxpYXNfdGV4dGJveCIsITEsIiIsIiIse21hcmdpblRvcDoiNXB4Iix3aWR0aDoiOTclIn0se3BhdHRlcm46Il5bYS16QS1aMC05XSokIixtaW5MZW5ndGg6MyxtYXhMZW5ndGg6MjAscmVxdWlyZWQ6ITB9KSxjQnIoZS5pZCksY0J0bihlLmlkLCJybmQiLCJjaGFuZ2UiLCgoKT0+e2NvbnN0IHQ9JGlkKCJwZl9hbGlhc190ZXh0Ym94Iik7aWYoY1R4dFZhbGlkKHQuaWQpKXt6bkJ0bigiY2hhbmdlX2FsaWFzIix0LnZhbHVlKS50aGVuKCh0PT57bm90aWZ5KHQucmVwbGFjZSgvXy9nLCIgIiksN2UzKSx0LmluY2x1ZGVzKCJjaGFuZ2VkIikmJiF0LmluY2x1ZGVzKCJ3YWl0IikmJihvd25JbmZvKCksY1VzZXJBbGlhcz0hMCxkbGcuY2xvc2UoZS5pZCkpfSkpLmNhdGNoKChlPT57JGxvZyhlKX0pKX1lbHNlIG5vdGlmeSh0Lm1pbkxlbmd0aCsiIGEgIit0Lm1heExlbmd0aCsiIGNhcmFjdGVyZXMuIFNpbiBjYXJhY3RlcmVzL3NpbWJvbG9zIGVzcGVjaWFsZXMuIiw1ZTMsIlJFRCIpfSksIiIse3dpZHRoOiIxMDAlIn0pLGRsZy5jbG9zZUJ0bihlLmlkKX19KSxwSWQ9InBhbmVsX3Byb2ZpbGVzIixjQnRuKHBJZCwicm5kIiwidG9nZ2xlIGNoYXQiLCgoKT0+e2RsZy5zaG93KCJlbmRpc2NoYXREbGciKX0pLCJIYWJpbGl0YS9EZXNoYWJpbGl0YSBlbCBjaGF0LCB0ZSBwb2RyYW4gbGxlZ2FyIG1lbnNhamVzLiIse2p1c3RpZnlTZWxmOiJjZW50ZXIifSksZGxnLmNyZWF0ZShwSWQsImVuZGlzY2hhdERsZyIse2ZuYzplPT57Y1RleHQoZS5pZCwicm5kIiwiVG9nZ2xlIGNoYXQiLGNTdHlsZXMuZGxnVGl0bGVzKSxjSHIoZS5pZCwhMSksY1RleHQoZS5pZCwicm5kIiwiT25jZSBlbmFibGVkLCBhbnlvbmUgY2FuPGJyPmNyZWF0ZSBjaGF0cyB3aXRoIHlvdSBhbmQgdmljZS12ZXJzYS4iLHtzdDp7dGV4dEFsaWduOiJjZW50ZXIiLGNvbG9yOiJ3aGl0ZSJ9fSksY0J0bihlLmlkLCJybmQiLCJ0b2dnbGUiLCgoKT0+e3puQnRuKCJjaGF0X3RvZ2dsZSIpLnRoZW4oKHQ9Pntub3RpZnkodC5yZXBsYWNlKC9fL2csIiAiKSwxN2UzKSxkbGcuY2xvc2UoZS5pZCl9KSkuY2F0Y2goKGU9PnskbG9nKGUpfSkpfSksIiIse3dpZHRoOiIxMDAlIn0pLGRsZy5jbG9zZUJ0bihlLmlkKX19KSxjQnRuKHBJZCwicm5kIiwiY2hhbmdlIGF2YXRhciIsKCgpPT57ZGxnLnNob3coImF2dHJfZGxnIil9KSwiQ2FtYmlhIGVsIGF2YXRhciBhIHVuYSBpbWFnZW4sIHNvbG8gVVJMUy4iLHtqdXN0aWZ5U2VsZjoiY2VudGVyIn0pLGRsZy5jcmVhdGUocElkLCJhdnRyX2RsZyIse2ZuYzplPT57Y1RleHQoZS5pZCwicm5kIiwiQ2hhbmdlIGF2YXRhciIsY1N0eWxlcy5kbGdUaXRsZXMpLGNJbWcoZS5pZCwiYXZ0cl9wcmV2aWV3IixkQXZhdGFyLDkwLDkwLHtkaXNwbGF5OiJibG9jayIsbWFyZ2luOiIwIGF1dG8iLG9iamVjdEZpdDoiY292ZXIifSksY0JyKGUuaWQpLGNUZXh0KGUuaWQsInJuZCIsIkltZ3VyIFVSTCBvbmx5LCBleGFtcGxlLiIse3N0Ont0ZXh0QWxpZ246ImNlbnRlciIsY29sb3I6IndoaXRlIn19KSxjVGV4dChlLmlkLCJybmQiLCJodHRwczovL2kuaW1ndXIuY29tL0duSmFFWkwucG5nIix7c3Q6e3RleHRBbGlnbjoiY2VudGVyIixjb2xvcjoid2hpdGUifX0pLGNUeHRib3goZS5pZCwicGZfYXZhdGFyX3RleHRib3giLCExLCIiLCIxMCBhIDEzMCBjYXJhY3RlcmVzLiBFdml0YXIgdXNhciBVUkwncyBkZSBnaWZzL3ZpZGVvcy4iLHttYXJnaW5Ub3A6IjVweCIsd2lkdGg6Ijk3JSJ9LHtwYXR0ZXJuOiJeKGh0dHBzPzovLyk/KGkuaW1ndXIuY29tLykoW2EtekEtWjAtOV0rKSguanBnfC5qcGVnfC5wbmcpJCIsbWluTGVuZ3RoOjIwLG1heExlbmd0aDo0MCxyZXF1aXJlZDohMH0pLGNCcihlLmlkKSxjQnRuKGUuaWQsInJuZCIsInByZXZpZXciLCgoKT0+e2NvbnN0IGU9JGlkKCJwZl9hdmF0YXJfdGV4dGJveCIpO2NUeHRWYWxpZChlLmlkKT8kaWQoImF2dHJfcHJldmlldyIpLnNyYz1lLnZhbHVlOm5vdGlmeShlLm1pbkxlbmd0aCsiIGEgIitlLm1heExlbmd0aCsiIGNhcmFjdGVyZXMuIFNpbiBjYXJhY3RlcmVzL3NpbWJvbG9zIGVzcGVjaWFsZXMuIiw1ZTMsIlJFRCIpfSksIiIse3dpZHRoOiIxMDAlIn0pLGNCcihlLmlkKSxjSHIoZS5pZCwhMSksY0J0bihlLmlkLCJybmQiLCJjaGFuZ2UiLCgoKT0+e2NvbnN0IHQ9JGlkKCJwZl9hdmF0YXJfdGV4dGJveCIpO2lmKGNUeHRWYWxpZCh0LmlkKSl7bGV0IGk9dC52YWx1ZTt6bkJ0bigiY2hhbmdlX2F2YXRhciIsaSkudGhlbigodD0+e25vdGlmeSh0LnJlcGxhY2UoL18vZywiICIpLDdlMyksdC5pbmNsdWRlcygiY2hhbmdlZCIpJiYhdC5pbmNsdWRlcygid2FpdCIpJiYoJGlkKCJhdnRyX3ByZXZpZXciKS5zcmM9aSwkaWQoInVzZXJfYXZhdGFyIikuc3JjPWksZGxnLmNsb3NlKGUuaWQpKX0pKS5jYXRjaCgoZT0+eyRsb2coZSl9KSl9ZWxzZSBub3RpZnkodC5taW5MZW5ndGgrIiBhICIrdC5tYXhMZW5ndGgrIiBjYXJhY3RlcmVzLiBTaW4gY2FyYWN0ZXJlcy9zaW1ib2xvcyBlc3BlY2lhbGVzLiIsNWUzLCJSRUQiKX0pLCIiLHt3aWR0aDoiMTAwJSJ9KSxjQnIoZS5pZCksZGxnLmNsb3NlQnRuKGUuaWQpfX0pLHBJZD0icGFuZWxfcHJvZmlsZXMiLGNCdG4ocElkLCJvcGVuZGxnZGVzYyIsImNoYW5nZSBkZXNjcmlwdGlvbiIsKCgpPT57ZGxnLnNob3coImRlc2NfZGxnIil9KSwiQ2FtYmlhIGxhIGRlc2NyaXBjaW9uIGRlIHR1IHBlcmZpbC4iLHtqdXN0aWZ5U2VsZjoiY2VudGVyIn0pLGRsZy5jcmVhdGUocElkLCJkZXNjX2RsZyIse2ZuYzplPT57Y1RleHQoZS5pZCwicm5kIiwiQ2hhbmdlIGRlc2NyaXB0aW9uIixjU3R5bGVzLmRsZ1RpdGxlcyksY1RleHRBcmVhKGUuaWQsImRlc2NyaXB0aW9uX2NvbnRlbnQiLCExLCIiLHtoZWlnaHQ6IjEwMHB4IixyZXNpemU6Im5vbmUiLG92ZXJmbG93OiJoaWRkZW4iLHdoaXRlU3BhY2U6InByZS13cmFwIixtYXJnaW5Ub3A6IjVweCIsanVzdGlmeVNlbGY6ImNlbnRlciIsd2lkdGg6IjEwMCUiLHRleHRib3g6e2Rpc3BsYXk6ImluaGVyaXQifX0se3BhdHRlcm46Il5bYS16QS1aMC05IF0qJCIsbWluTGVuZ3RoOjQsbWF4TGVuZ3RoOjI1NixwbGFjZWhvbGRlcjoiZGVzY3JpcHRpb24iLHJlcXVpcmVkOiEwfSksY0JyKGUuaWQpLGNCdG4oZS5pZCwicm5kIiwiY2hhbmdlIiwoKCk9Pntjb25zdCB0PSRpZCgiZGVzY3JpcHRpb25fY29udGVudCIpO2lmKGNUeHRWYWxpZCh0LmlkKSl7em5CdG4oImNoYW5nZV9kZXNjcmlwdGlvbiIsdC52YWx1ZSkudGhlbigodD0+e25vdGlmeSh0LnJlcGxhY2UoL18vZywiICIpLDdlMyksdC5pbmNsdWRlcygiY2hhbmdlZCIpJiYhdC5pbmNsdWRlcygid2FpdCIpJiYob3duSW5mbygpLGRsZy5jbG9zZShlLmlkKSl9KSkuY2F0Y2goKGU9PnskbG9nKGUpfSkpfWVsc2Ugbm90aWZ5KHQubWluTGVuZ3RoKyIgYSAiK3QubWF4TGVuZ3RoKyIgY2FyYWN0ZXJlcy4gU2luIGNhcmFjdGVyZXMvc2ltYm9sb3MgZXNwZWNpYWxlcy4iLDVlMywiUkVEIil9KSwiIix7d2lkdGg6IjEwMCUifSksZGxnLmNsb3NlQnRuKGUuaWQpfX0pLGNCdG4ocElkLCJybmQiLCJvcHRpb25zIiwoKCk9PntkbGcuc2hvdygib3B0aW9uc0RsZyIpfSksIk9wY2lvbmVzIGFkaWNpb25hbGVzIix7anVzdGlmeVNlbGY6ImNlbnRlciJ9KSxkbGcuY3JlYXRlKHBJZCwib3B0aW9uc0RsZyIse3N0eWxlejp7Y29sb3I6IndoaXRlIix3aWR0aDoiMjIwcHgifSxmbmM6ZT0+e2NUZXh0KGUuaWQsInJuZCIsIkV4dHJhLW9wdGlvbnMiLGNTdHlsZXMuZGxnVGl0bGVzKSxjQ2hlY2tib3gyKGUuaWQsIkFVT25saW5lcyIsImF1dG8gdXBkYXRlIG9ubGluZXMiLHt0aXA6IlVwZGF0ZSB0aGUgb25saW5lIGNvdW50IGFmdGVyIDVzZWNzIixub3JtYWxUaXA6ITAsbm9DbGllbnQ6ITAsZGVsYXlTcGF3bjohMCxmblNwYXduOmU9PntlLmNoZWNrZWQ9c3RyVG9Cb29sKCRMUy5nZXQyKGUuaWQpKX0sZm5DbGljazplPT57JExTLnNldChlLmlkLGUuY2hlY2tlZCl9fSksY0NoZWNrYm94MihlLmlkLCJBVUNoYXRHbG9iYWwiLCJhdXRvIHVwZGF0ZSBjaGF0Iix7dGlwOiJVcGRhdGUgdGhlIGdsb2JhbCBjaGF0IGFmdGVyIDVzZWNzIixub3JtYWxUaXA6ITAsbm9DbGllbnQ6ITAsZGVsYXlTcGF3bjohMCxmblNwYXduOmU9PntlLmNoZWNrZWQ9c3RyVG9Cb29sKCRMUy5nZXQyKGUuaWQpKX0sZm5DbGljazplPT57JExTLnNldChlLmlkLGUuY2hlY2tlZCl9fSksY0NoZWNrYm94MihlLmlkLCJBVUNoYXRQTVMiLCJhdXRvIHVwZGF0ZSA8Yj5QTTwvYj4iLHt0aXA6IlVwZGF0ZSB0aGUgY3VycmVudCBQTSBhZnRlciA1c2VjcyIsbm9ybWFsVGlwOiEwLG5vQ2xpZW50OiEwLGRlbGF5U3Bhd246ITAsZm5TcGF3bjplPT57ZS5jaGVja2VkPXN0clRvQm9vbCgkTFMuZ2V0MihlLmlkKSl9LGZuQ2xpY2s6ZT0+eyRMUy5zZXQoZS5pZCxlLmNoZWNrZWQpfX0pLGNDaGVja2JveDIoZS5pZCwiQVVNZW51IiwiYXV0byB1cGRhdGUgPGI+TUVOVTwvYj4iLHt0aXA6IlVwZGF0ZSB0aGUgTUVOVSBhZnRlciA1c2VjcyBpbiBjYXNlIHRoZXJlJ3MgYW55IGNoYW5nZXMgaW4gb3RoZXIgdGFiIixub3JtYWxUaXA6ITAsbm9DbGllbnQ6ITAsZGVsYXlTcGF3bjohMCxmblNwYXduOmU9PntlLmNoZWNrZWQ9c3RyVG9Cb29sKCRMUy5nZXQyKGUuaWQpKX0sZm5DbGljazplPT57JExTLnNldChlLmlkLGUuY2hlY2tlZCl9fSksZGxnLmNsb3NlQnRuKGUuaWQpfX0pLGNCcigpO2NvbnN0IHZLZXlzPVtdO2ZvcihsZXQgZT02NTtlPD05MDtlKyspdktleXMucHVzaCh7Y29kZTplLG5hbWU6U3RyaW5nLmZyb21DaGFyQ29kZShlKX0pO2ZvcihsZXQgZT00ODtlPD01NztlKyspdktleXMucHVzaCh7Y29kZTplLG5hbWU6U3RyaW5nLmZyb21DaGFyQ29kZShlKX0pO2NvbnN0IHN2S2V5cz1be2NvZGU6MCxuYW1lOiJOT05FIn0se2NvZGU6OCxuYW1lOiJCYWNrc3BhY2UifSx7Y29kZTo5LG5hbWU6IlRhYiJ9LHtjb2RlOjEzLG5hbWU6IkVudGVyIn0se2NvZGU6MTYsbmFtZToiU2hpZnQifSx7Y29kZToxNyxuYW1lOiJDdHJsIn0se2NvZGU6MTgsbmFtZToiQWx0In0se2NvZGU6MTY0LG5hbWU6IkxlZnQgQWx0In0se2NvZGU6MTY1LG5hbWU6IlJpZ2h0IEFsdCJ9LHtjb2RlOjE5LG5hbWU6IlBhdXNlL0JyZWFrIn0se2NvZGU6OTEsbmFtZToiTGVmdCBXaW5kb3dzIn0se2NvZGU6OTIsbmFtZToiUmlnaHQgV2luZG93cyJ9LHtjb2RlOjkzLG5hbWU6IkFwcGxpY2F0aW9ucyJ9LHtjb2RlOjk2LG5hbWU6Ik51bVBhZCAwIn0se2NvZGU6OTcsbmFtZToiTnVtUGFkIDEifSx7Y29kZTo5OCxuYW1lOiJOdW1QYWQgMiJ9LHtjb2RlOjk5LG5hbWU6Ik51bVBhZCAzIn0se2NvZGU6MTAwLG5hbWU6Ik51bVBhZCA0In0se2NvZGU6MTAxLG5hbWU6Ik51bVBhZCA1In0se2NvZGU6MTAyLG5hbWU6Ik51bVBhZCA2In0se2NvZGU6MTAzLG5hbWU6Ik51bVBhZCA3In0se2NvZGU6MTA0LG5hbWU6Ik51bVBhZCA4In0se2NvZGU6MTA1LG5hbWU6Ik51bVBhZCA5In0se2NvZGU6MTEyLG5hbWU6IkYxIn0se2NvZGU6MTEzLG5hbWU6IkYyIn0se2NvZGU6MTE0LG5hbWU6IkYzIn0se2NvZGU6MTE1LG5hbWU6IkY0In0se2NvZGU6MTE2LG5hbWU6IkY1In0se2NvZGU6MTE3LG5hbWU6IkY2In0se2NvZGU6MTE4LG5hbWU6IkY3In0se2NvZGU6MTE5LG5hbWU6IkY4In0se2NvZGU6MTIwLG5hbWU6IkY5In0se2NvZGU6MTIxLG5hbWU6IkYxMCJ9LHtjb2RlOjEyMixuYW1lOiJGMTEifSx7Y29kZToxMjMsbmFtZToiRjEyIn0se2NvZGU6MSxuYW1lOiJMQlVUVE9OIn0se2NvZGU6MixuYW1lOiJSQlVUVE9OIn0se2NvZGU6NCxuYW1lOiJNQlVUVE9OIn0se2NvZGU6NSxuYW1lOiJYQlVUVE9OMSJ9LHtjb2RlOjYsbmFtZToiWEJVVFRPTjIifSx7Y29kZToxODcsbmFtZToiPSJ9LHtjb2RlOjE4OCxuYW1lOiIsIn0se2NvZGU6MTg5LG5hbWU6Ii0ifSx7Y29kZToxOTAsbmFtZToiLiJ9XTtmdW5jdGlvbiBjQmluZEVsbShlLHQpe2NvbnN0IGk9JGVsbSgib3B0aW9uIik7cmV0dXJuIGkudmFsdWU9ZS5jb2RlLGkudGV4dD1lLm5hbWUsaS5pZD10KyJfb3B0IixpfWZ1bmN0aW9uIHJJbmZvKCl7Zm9yKGNvbnN0IGUgaW4gdUJvb2wpem5Cb29sKHVCb29sW2VdKTtmb3IoY29uc3QgZSBpbiB1Rmx0KXpuRmxvYXQodUZsdFtlXSk7Zm9yKGNvbnN0IGUgaW4gdUludCl6bkludCh1SW50W2VdKTtmb3IoY29uc3QgZSBpbiB1SW50Mil6bkludCh1SW50MltlXSwhMSl9ZnVuY3Rpb24gdVNlcnZlcigpe2Zvcihjb25zdCBlIGluIHVCb29sKXpuU0Jvb2wodUJvb2xbZV0pO2Zvcihjb25zdCBlIGluIHVGbHQpem5TRmxvYXQodUZsdFtlXSl9ZnVuY3Rpb24gdGFiU3dpdGNoKGUsdD0iYyIsaT0iaW5saW5lLWJsb2NrIil7ZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgiW2MtdGFiLSIrdCsiLWJ0bl0iKS5mb3JFYWNoKCh0PT57dC5pZD09PWUrIkJ0biI/dC5jbGFzc0xpc3QuYWRkKCJhY3RpdmUiKTp0LmNsYXNzTGlzdC5yZW1vdmUoImFjdGl2ZSIpfSkpLHNldFZpcyhlLGl8fCJpbmxpbmUtYmxvY2siKSxzZXRWaXModVRhYnNbdF0sIm5vbmUiKSxzZXRWaXMoZSxpfHwiaW5saW5lLWJsb2NrIil9dktleXMucHVzaCguLi5zdktleXMpLHZLZXlzLnNvcnQoKChlLHQpPT5lLmNvZGUtdC5jb2RlKSksYmluZEVsZW1lbnRzLmZvckVhY2goKGU9Pntjb25zdCB0PSRpZChlLnRhcmdldCk7dktleXMuZm9yRWFjaCgoaT0+e3QuYXBwZW5kQ2hpbGQoY0JpbmRFbG0oaSxlLmlkKSl9KSl9KSksdGFiU3dpdGNoKCJtYWluX3RhYiIsImMiLCJub25lIiksZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcigibW91c2VlbnRlciIsKCgpPT57aXNNb3VzZUluc2lkZT0hMH0pKSxkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCJtb3VzZWxlYXZlIiwoKCk9Pntpc01vdXNlSW5zaWRlPSExfSkpLGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoInZpc2liaWxpdHljaGFuZ2UiLCgoKT0+e2lzV2luZG93VmlzPSJ2aXNpYmxlIj09ZG9jdW1lbnQudmlzaWJpbGl0eVN0YXRlfSkpO2xldCBtb3VzZUNoZWNrZXI9c2V0SW50ZXJ2YWwoKCgpPT57aXNNb3VzZVZpcz0ibm9uZSIhPWRvY3VtZW50LmJvZHkuc3R5bGUuY3Vyc29yJiZpc01vdXNlSW5zaWRlfSksMzAwKSxzdlVwZGF0ZXI9c2V0SW50ZXJ2YWwoKGFzeW5jKCk9Pntpc1dpbmRvd1ZpcyYmaXNNb3VzZVZpcyYmJExTLmdldDIoIkFVTWVudSIpJiZhd2FpdCBsU2VydmVyKCl9KSw1ZTMpLGNoYXRVcGRhdGVyPXNldEludGVydmFsKCgoKT0+e2lzTW91c2VWaXMmJigkTFMuZ2V0MigiQVVDaGF0R2xvYmFsIikmJnVDaGF0KCksJExTLmdldDIoIkFVQ2hhdFBNUyIpJiZ1UHJpdkNoYXQoKSwkTFMuZ2V0MigiQVVPbmxpbmVzIikmJmdPbmxpbmVzKCkpfSksMmUzKSx3YWl0aW5nPXNldEludGVydmFsKCgoKT0+eyQuZ2V0KCIvZ19pbmZvP2luZm89Z2FtZWZvdW5kIiwoZT0+e3dHYW1lRm91bmQ9cGFyc2VJbnQoZSksd0dhbWVGb3VuZD8oaXRlckZvdW5kKyssaXRlckZvdW5kPjUmJih6bkluZm8oInVzZXJfZGF5cyIsImRheXMgbGVmdDogIiwidXNlckRheXMiKSx6bkluZm8oImxhc3RfdXBkYXRlIiwiPGI+VXBkYXRlZDwvYj46ICIpLHpuSW5mbygiY2hhbmdlbG9ncyIsIjxiPkNoYW5nZWxvZ3M8L2I+OiAiKSxzZXRWaXMoIndhaXRpbmdfZ2FtZSIsIm5vbmUiKSxzZXRWaXMoImVsZW1lbnRfYnV0dG9ucyIsImZsZXgiKSx0YWJTd2l0Y2goImVsZW1lbnRfbWFpbiIpLHRhYlN3aXRjaCgicGFuZWxfdXBkYXRlcyIsInIiKSx0YWJTd2l0Y2goImdsb2JhbENoYXQiLCJsIiwiZmxleCIpLGNsZWFySW50ZXJ2YWwod2FpdGluZykpKTooem5JbmZvKCJ3YWl0aW5nX2dhbWUiLCJpbnRpYWxpemluZzxicj5jbG9zaW5nIGluOiAiKSxzZXRWaXMoWyJlbGVtZW50X21haW4iLCJlbGVtZW50X2J1dHRvbnMiLCJ1c2VyRGF5cyJdLCJub25lIiksdGFiU3dpdGNoKCJlbGVtZW50X21haW4iLCJjIiwibm9uZSIpKX0pKX0pLDI1MCkscnVubmluZz1zZXRJbnRlcnZhbCgoKCk9Pnt0cnl7JC5nZXQoIi9nX2luZm8/aW5mbz1ydW5uaW5nIiwoZT0+e30pKS5mYWlsKChlPT57Y0V4aXQoKX0pKX1jYXRjaChlKXskbG9nKGUpLGFsZXJ0KGUpLGNFeGl0KCl9fSksM2UzKTtmdW5jdGlvbiBjVG9vbHRpcChlLHQpe2lmKGNoZWNrRWxtbnQoZSkpcmV0dXJuO2lmKCF0KXJldHVybjtjb25zdCBpPSRpZChlKSxuPSRlbG0oImkiKTtuLmNsYXNzTmFtZT0iZmEgZmEtcXVlc3Rpb24tY2lyY2xlIGZhLTIiLG4uc2V0QXR0cmlidXRlKCJhcmlhLWhpZGRlbiIsInRydWUiKSxuLnN0eWxlLmNzc1RleHQ9ImRpc3BsYXk6aW5saW5lLWJsb2NrO2ZvbnQtd2VpZ2h0OjkwMDtmb250LXNpemU6MTVweDtvcGFjaXR5OjAuNTttYXJnaW4tbGVmdDo4cHg7IixuLnNldEF0dHJpYnV0ZSgidHRpcCIsdCksaS5hcHBlbmRDaGlsZChuKX1mdW5jdGlvbiBjRGEoZSx0PXt0eXBlOm51bGwsaWQ6bnVsbCxjbHM6bnVsbCxzdDpudWxsLGVsOm51bGwsZm46bnVsbCxkZWxheUZuOm51bGwsdGlwOm51bGx9KXtpZih0LmlkPSJSIj09dC5pZHx8InIiPT10LmlkPyRybmQoKTp0LmlkLG51bGwhPXQuaWQmJiJOIiE9dC5pZCl7aWYoY2hlY2tFbG1udChlLHQuaWQpKXJldHVybn1lbHNlIGlmKGNoZWNrRWxtbnQoZSkpcmV0dXJuO2NvbnN0IGk9JGVsbSh0LnR5cGV8fCJkaXYiKTtpZih0LmNscyYmKHQuY2xzPUFycmF5LmlzQXJyYXkodC5jbHMpP3QuY2xzOlt0LmNsc10sdC5jbHMuZm9yRWFjaCgoZT0+e2UmJmkuY2xhc3NMaXN0LmFkZChlKX0pKSksbnVsbCE9dC5pZCYmIk4iIT10LmlkJiYoaS5pZD10LmlkKSx0LmVsKXtpZih0LmVsLmV2ZW50cylmb3IobGV0IGUgaW4gdC5lbC5ldmVudHMpaS5hZGRFdmVudExpc3RlbmVyKGUsKGk9Pnt0LmVsLmV2ZW50c1tlXSh0aGlzLGkpfSkpO09iamVjdC5hc3NpZ24oaSx0LmVsKX1pZih0LnN0JiYoInN0cmluZyI9PXR5cGVvZiB0LnN0P2kuc3R5bGUuY3NzVGV4dD10LnN0Ok9iamVjdC5hc3NpZ24oaS5zdHlsZSx0LnN0KSksdC50aXAmJiIiIT10LnRpcCYmaS5zZXRBdHRyaWJ1dGUoInR0aXAiLHQudGlwKSwiYm9keSI9PWUpZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChpKTtlbHNleyRpZChlKS5hcHBlbmRDaGlsZChpKX10LmZuJiYodC5kZWxheUZuP3VGdW5jcy5wdXNoKCgoKT0+dC5mbihpKSkpOnQuZm4oaSkpfWZ1bmN0aW9uIGNEaXYoZSx0LGk9e30sbj17fSxsPShlPT57fSkpe2lmKCJybmQiPT10JiYodD0kcm5kKCkpLGNoZWNrRWxtbnQoZSx0KSlyZXR1cm47Y29uc3QgYT0kZWxtKCJkaXYiKTtpZihhLmlkPXQsbiYmKE9iamVjdC5hc3NpZ24oYSxuKSxuLmV2ZW50TGlzdGVuZXIpKWZvcihsZXQgZSBpbiBuLmV2ZW50TGlzdGVuZXIpYS5hZGRFdmVudExpc3RlbmVyKGUsKCgpPT57bi5ldmVudExpc3RlbmVyW2VdKHRoaXMpfSkpO2kmJk9iamVjdC5hc3NpZ24oYS5zdHlsZSxpKTskaWQoZSkuYXBwZW5kQ2hpbGQoYSksbChhKX1mdW5jdGlvbiBjVGFiQnRuKGUsdCxpPSJjIil7Y29uc3Qgbj0kaWQoZSk7dC5mb3JFYWNoKChhc3luYyhlLGwpPT57bGV0IGE9JGVsbSgiYnV0dG9uIik7YS5jbGFzc05hbWU9InRhYi1idXR0b24iLGEuc2V0QXR0cmlidXRlKCJjLXRhYi0iK2krIi1idG4iLCIiKSxhLmlkPWUuaWQrIkJ0biIsYS5pbm5lckhUTUw9ZS50eHQsMD09PWw/YS5zdHlsZS5ib3JkZXJUb3BSaWdodFJhZGl1cz0iMHB4IjoobD09PXQubGVuZ3RoLTF8fChhLnN0eWxlLmJvcmRlclRvcFJpZ2h0UmFkaXVzPSIwcHgiKSxhLnN0eWxlLmJvcmRlclRvcExlZnRSYWRpdXM9IjBweCIpLHVUYWJzW2ldfHwodVRhYnNbaV09W10pLHVUYWJzW2ldLnB1c2goZS5pZCksYS5vbmNsaWNrPSgpPT57dGFiU3dpdGNoKGUuaWQsaSxlLmRpc3BsYXl8fCJpbmxpbmUtYmxvY2siKX0sbi5hcHBlbmRDaGlsZChhKX0pKX1mdW5jdGlvbiBjQnRuKGUsdCxpLG49KGU9Pnt9KSxsPSIiLGE9e30scz17fSl7aWYoInJuZCI9PXQmJih0PSRybmQoKSksY2hlY2tFbG1udChlLHQpKXJldHVybjtjb25zdCBvPSRlbG0oImJ1dHRvbiIpO2lmKG8udHlwZT0iYnV0dG9uIixvLmNsYXNzTGlzdC5hZGQoIm5ld2J1dHRvbiIpLG8uaWQ9dCxpLmluY2x1ZGVzKCJmYSBmYSIpJiYhaS5pbmNsdWRlcygiPGkgY2xhc3M9IikmJihpPSc8aSBjbGFzcz0iJytpKyciIGFyaWEtaGlkZGVuPSJ0cnVlIj48L2k+Jyksby5pbm5lckhUTUw9aSxzJiYoT2JqZWN0LmFzc2lnbihvLHMpLHMuZXZlbnRMaXN0ZW5lcikpZm9yKGxldCBlIGluIHMuZXZlbnRMaXN0ZW5lcilvLmFkZEV2ZW50TGlzdGVuZXIoZSwoKCk9PntzLmV2ZW50TGlzdGVuZXJbZV0odGhpcyl9KSk7YSYmT2JqZWN0LmFzc2lnbihvLnN0eWxlLGEpLG8ub25jbGljaz0oKT0+e24obyl9LCIiIT1sJiZvLnNldEF0dHJpYnV0ZSgidHRpcCIsbCk7JGlkKGUpLmFwcGVuZENoaWxkKG8pfWZ1bmN0aW9uIGNIcihlPXBJZCx0PSEwLGk9e30pe2NvbnN0IG49JGlkKGUpO2xldCBsPSRlbG0oImhyIik7dCYmKGwuc3R5bGUubWFyZ2luTGVmdD0iLTIwcHgiKSxsLmNsYXNzTGlzdC5hZGQoImhyQ2xhc3MiKSxpJiZPYmplY3QuYXNzaWduKGwuc3R5bGUsaSksbi5hcHBlbmRDaGlsZChsKX1mdW5jdGlvbiBjQnIoZT1wSWQsdD0xKXtjb25zdCBpPSRpZChlKTtmb3IobGV0IGU9MDtlPHQ7ZSsrKWkuYXBwZW5kQ2hpbGQoJGVsbSgiYnIiKSl9ZnVuY3Rpb24gY0NoZWNrYm94MihlLHQsaSxuPXt0aXA6IiIsY2xhc3M6bnVsbCxmbkNsaWNrOm51bGwsZm5TcGF3bjpudWxsLG5vQ2xpZW50OiExLHN0eWxlOm51bGx9KXtpZigicm5kIj09dCYmKHQ9JHJuZCgpKSxjaGVja0VsbW50KGUsdCkpcmV0dXJuO2NvbnN0IGw9JGVsbSgiZGl2Iik7bC5jbGFzc0xpc3QuYWRkKCJlbGVtaXRlbXNfYmciKSxuLmNsYXNzJiZuLmNsYXNzLmZvckVhY2goKGU9PntlJiZsLmNsYXNzTGlzdC5hZGQoZSl9KSksbC5odG1sRm9yPXQsbC5zdHlsZS5kaXNwbGF5PSJpbmxpbmUtZmxleCI7Y29uc3QgYT0kZWxtKCJpbnB1dCIpO2EudHlwZT0iY2hlY2tib3giLGEuaWQ9dCxhLm9uY2hhbmdlPSgpPT57bi5ub0NsaWVudHx8dVNlcnZlcigpLG4uZm5DbGljayYmbi5mbkNsaWNrKGEpfTtjb25zdCBzPSRlbG0oImxhYmVsIik7cy5odG1sRm9yPXQscy5pbm5lckhUTUw9aSxzLmlkPXQrIkxCTCI7Y29uc3Qgbz0kaWQoZSk7bC5hcHBlbmRDaGlsZChhKSxsLmFwcGVuZENoaWxkKHMpO2NvbnN0IHI9JGVsbSgiaSIpO24ubm9ybWFsVGlwfHxudWxsPT1uLnRpcHx8IiI9PW4udGlwfHwoci5jbGFzc05hbWU9ImZhIGZhLXF1ZXN0aW9uLWNpcmNsZSBmYS0yIixyLnNldEF0dHJpYnV0ZSgiYXJpYS1oaWRkZW4iLCJ0cnVlIiksci5zdHlsZS5kaXNwbGF5PSJpbmxpbmUtYmxvY2siLHIuc3R5bGUuZm9udFdlaWdodD0iOTAwIixyLnN0eWxlLmZvbnRTaXplPSIxNXB4IixyLnN0eWxlLm9wYWNpdHk9IjAuNSIsci5zdHlsZS5tYXJnaW5MZWZ0PSI4cHgiLHIuc2V0QXR0cmlidXRlKCJ0dGlwIixuLnRpcCkpLG4uc3R5bGUmJk9iamVjdC5hc3NpZ24obC5zdHlsZSxuLnN0eWxlKSxuLm5vcm1hbFRpcCYmbnVsbCE9bi50aXAmJiIiIT1uLnRpcCYmbC5zZXRBdHRyaWJ1dGUoInR0aXAiLG4udGlwKSxvLmFwcGVuZENoaWxkKGwpLG4ubm9ybWFsVGlwfHxudWxsPT1uLnRpcHx8IiI9PW4udGlwfHxvLmFwcGVuZENoaWxkKHIpLG4ubm9DbGllbnR8fHVCb29sLnB1c2godCksbi5mblNwYXduJiYobi5kZWxheVNwYXduP3VGdW5jcy5wdXNoKCgoKT0+bi5mblNwYXduKGEpKSk6KCRsb2coImluc3RhbnQgZnVuYzoiLHQpLG4uZm5TcGF3bihhKSkpfWZ1bmN0aW9uIGNDaGVja2JveChlLHQsaSxuPSIiLGw9KGU9Pnt9KSxhPSExLHM9e30pe2lmKCJybmQiPT10JiYodD0kcm5kKCkpLGNoZWNrRWxtbnQoZSx0KSlyZXR1cm47Y29uc3Qgbz0kZWxtKCJkaXYiKTtvLmNsYXNzTGlzdC5hZGQoImVsZW1pdGVtc19iZyIpLG8uaHRtbEZvcj10LG8uc3R5bGUuZGlzcGxheT0iaW5saW5lLWZsZXgiO2NvbnN0IHI9JGVsbSgiaW5wdXQiKTtyLnR5cGU9ImNoZWNrYm94IixyLmlkPXQsci5vbmNoYW5nZT0oKT0+e2F8fHVTZXJ2ZXIoKSxsKHIpfTtjb25zdCBkPSRlbG0oImxhYmVsIik7ZC5odG1sRm9yPXQsZC5pbm5lckhUTUw9aSxkLmlkPXQrIkxCTCI7Y29uc3QgYz0kaWQoZSk7by5hcHBlbmRDaGlsZChyKSxvLmFwcGVuZENoaWxkKGQpO2NvbnN0IHA9JGVsbSgiaSIpOyIiIT1uJiYocC5jbGFzc05hbWU9ImZhIGZhLXF1ZXN0aW9uLWNpcmNsZSBmYS0yIixwLnNldEF0dHJpYnV0ZSgiYXJpYS1oaWRkZW4iLCJ0cnVlIikscC5zdHlsZS5kaXNwbGF5PSJpbmxpbmUtYmxvY2siLHAuc3R5bGUuZm9udFdlaWdodD0iOTAwIixwLnN0eWxlLmZvbnRTaXplPSIxNXB4IixwLnN0eWxlLm9wYWNpdHk9IjAuNSIscC5zdHlsZS5tYXJnaW5MZWZ0PSI4cHgiLHAuc2V0QXR0cmlidXRlKCJ0dGlwIixuKSkscyYmT2JqZWN0LmFzc2lnbihvLnN0eWxlLHMpLGMuYXBwZW5kQ2hpbGQobyksIiIhPW4mJmMuYXBwZW5kQ2hpbGQocCksYXx8dUJvb2wucHVzaCh0KX1mdW5jdGlvbiBjQ3VzdG9tcyhlLHQsaT0iIixuPShlPT57fSksbD17fSl7aWYoInJuZCI9PXQmJih0PSRybmQoKSksY2hlY2tFbG1udChlLHQpKXJldHVybjtjb25zdCBhPSRpZChlKSxzPSRlbG0oImkiKTtzLmNsYXNzTmFtZT0iZmEgZmEtY29nIixzLnNldEF0dHJpYnV0ZSgiYXJpYS1oaWRkZW4iLCJ0cnVlIikscy5zdHlsZS5kaXNwbGF5PSJpbmxpbmUtYmxvY2siLHMuc3R5bGUuZm9udFdlaWdodD0iOTAwIixzLnN0eWxlLmZvbnRTaXplPSIxNXB4IixzLnN0eWxlLm9wYWNpdHk9IjAuNSIscy5zdHlsZS5tYXJnaW5MZWZ0PSI4cHgiLHMuc3R5bGUuY3Vyc29yPSJwb2ludGVyIixzLmNpZD10KyJfZGxnIiwiIiE9aSYmcy5zZXRBdHRyaWJ1dGUoInR0aXAiLGkpLHMub25jbGljaz1hc3luYygpPT57ZGxnLnNob3cocy5jaWQpfSxkbGcuY3JlYXRlKGUscy5jaWQse3N0eWxlejpsfSksbihzKSxhLmFwcGVuZENoaWxkKHMpfWZ1bmN0aW9uIGNTbHJGbG9hdChlLHQsaSxuLGwsYSxzLG89IiIpe2lmKCJybmQiPT10JiYodD0kcm5kKCkpLGNoZWNrRWxtbnQoZSx0KSlyZXR1cm47bGV0IHI9U3RyaW5nKGEpLnNwbGl0KCIuIilbMV18fCIiO3I9ci5sZW5ndGg7Y29uc3QgZD0kZWxtKCJkaXYiKTtkLmNsYXNzTGlzdC5hZGQoImxlbmd0aCIsImZfc2xpZGVyX2JnIiksZC5zZXRBdHRyaWJ1dGUoImRhdGEtbWluIixuKSxkLnNldEF0dHJpYnV0ZSgiZGF0YS1tYXgiLGwpLGQuc3R5bGUuZGlzcGxheT0iaW5saW5lLWZsZXgiO2NvbnN0IGM9JGVsbSgiZGl2Iik7Yy5jbGFzc0xpc3QuYWRkKCJsX3RpdGxlIiwiZl90aXRsZSIpLGMuc2V0QXR0cmlidXRlKCJkYXRhLWxlbmd0aCIscyksYy50ZXh0Q29udGVudD1pKyI6ICI7Y29uc3QgcD0kZWxtKCJpbnB1dCIpO3AuY2xhc3NMaXN0LmFkZCgibnVtYmVyc2xpZGVyIikscC50eXBlPSJudW1iZXIiLHAucGF0dGVybj0iWzAtOV0qIixwLmlucHV0TW9kZT0ibnVtZXJpYyIscC5pZD10LHAubWluPW4scC5tYXg9bCxwLnN0ZXA9YSxwLnZhbHVlPXMscC5vbmlucHV0PSgpPT57dVNlcnZlcigpLGFwcGx5RmlsbChwLCEwLHIscC52YWx1ZSl9O2NvbnN0IHU9JGVsbSgiYnV0dG9uIik7dS5jbGFzc0xpc3QuYWRkKCJjb250cm9scy1udW1iZXIiKSx1LnN0eWxlLmRpc3BsYXk9ImlubGluZSIsdS5zdHlsZS5tYXJnaW5MZWZ0PSI4cHgiLHUuc3R5bGUubWFyZ2luUmlnaHQ9IjhweCIsdS5pbm5lckhUTUw9IiYjODcyMjsiLnRyaW0oKSx1Lm9uY2xpY2s9KCk9PntzdW1SZXN0QnRuKHQsMCxuLGwsMSxyKSx1U2VydmVyKCksYXBwbHlGaWxsKHAsITAscixwLnZhbHVlKX07Y29uc3QgZz0kZWxtKCJidXR0b24iKTtnLmNsYXNzTGlzdC5hZGQoImNvbnRyb2xzLW51bWJlciIpLGcuc3R5bGUuZGlzcGxheT0iaW5saW5lIixnLnN0eWxlLm1hcmdpbkxlZnQ9IjhweCIsZy5zdHlsZS5tYXJnaW5SaWdodD0iOHB4IixnLmlubmVySFRNTD0iJiM0MzsiLnRyaW0oKSxnLm9uY2xpY2s9KCk9PntzdW1SZXN0QnRuKHQsMSxuLGwsMSxyKSx1U2VydmVyKCksYXBwbHlGaWxsKHAsITAscixwLnZhbHVlKX07Y29uc3QgaD0kaWQoZSk7ZC5hcHBlbmRDaGlsZChjKSxkLmFwcGVuZENoaWxkKHUpLGQuYXBwZW5kQ2hpbGQocCksZC5hcHBlbmRDaGlsZChnKTtjb25zdCBmPSRlbG0oImkiKTsiIiE9byYmKGYuY2xhc3NOYW1lPSJmYSBmYS1xdWVzdGlvbi1jaXJjbGUgZmEtMiIsZi5zZXRBdHRyaWJ1dGUoImFyaWEtaGlkZGVuIiwidHJ1ZSIpLGYuc3R5bGUuZGlzcGxheT0iaW5saW5lLWJsb2NrIixmLnN0eWxlLmZvbnRXZWlnaHQ9IjkwMCIsZi5zdHlsZS5mb250U2l6ZT0iMTVweCIsZi5zdHlsZS5vcGFjaXR5PSIwLjUiLGYuc3R5bGUubWFyZ2luTGVmdD0iOHB4IixmLnNldEF0dHJpYnV0ZSgidHRpcCIsbykpLGguYXBwZW5kQ2hpbGQoZCksIiIhPW8mJmguYXBwZW5kQ2hpbGQoZiksdUZsdC5wdXNoKHQpfWZ1bmN0aW9uIGNJbWcoZSx0LGksbixsLGE9e30scz17fSl7aWYoInJuZCI9PXQmJih0PSRybmQoKSksY2hlY2tFbG1udChlLHQpKXJldHVybjtjb25zdCBvPSRpZChlKSxyPSRlbG0oImltZyIpO2lmKHIuc2V0QXR0cmlidXRlKCJpZCIsdCksci5zZXRBdHRyaWJ1dGUoInNyYyIsaSksci5zZXRBdHRyaWJ1dGUoImFsdCIsInVfYXZhdGFyIiksci5zZXRBdHRyaWJ1dGUoIndpZHRoIixuKSxyLnNldEF0dHJpYnV0ZSgiaGVpZ2h0IixsKSxzJiYoT2JqZWN0LmFzc2lnbihyLHMpLHMuZXZlbnRMaXN0ZW5lcikpZm9yKGxldCBlIGluIHMuZXZlbnRMaXN0ZW5lcilyLmFkZEV2ZW50TGlzdGVuZXIoZSwodD0+e3MuZXZlbnRMaXN0ZW5lcltlXSh0aGlzLHQpfSkpO2EmJk9iamVjdC5hc3NpZ24oci5zdHlsZSxhKSxvLmFwcGVuZENoaWxkKHIpfWZ1bmN0aW9uIGNUZXh0QXJlYShlLHQsaT0hMSxuPSIiLGw9e30sYT17fSl7aWYoInJuZCI9PXQmJih0PSRybmQoKSksY2hlY2tFbG1udChlLHQpKXJldHVybjtjb25zdCBzPSRlbG0oImRpdiIpO2lmKCIiIT09bil7cy5jbGFzc0xpc3QuYWRkKCJ0ZXh0Ym94Iik7Y29uc3QgZT0kZWxtKCJsYWJlbCIpO2UudGV4dENvbnRlbnQ9bi50cmltKCksZS5pZD10KyJsYmwiLGUuc3R5bGUuZGlzcGxheT1pPyJub25lIjoiaW5saW5lLWJsb2NrIixlLnNldEF0dHJpYnV0ZSgiZm9yIix0KSxsJiZsLmxhYmVseiYmT2JqZWN0LmFzc2lnbihzLnN0eWxlLGwubGFiZWx6KSxzLmFwcGVuZENoaWxkKGUpfWNvbnN0IG89JGVsbSgidGV4dGFyZWEiKTtpZihvLmlkPXQsYSYmKE9iamVjdC5hc3NpZ24obyxhKSxhLmV2ZW50TGlzdGVuZXIpKWZvcihsZXQgZSBpbiBhLmV2ZW50TGlzdGVuZXIpby5hZGRFdmVudExpc3RlbmVyKGUsKCgpPT57YS5ldmVudExpc3RlbmVyW2VdKHRoaXMpfSkpO2lmKG8uc3R5bGUuZGlzcGxheT1pPyJub25lIjoiaW5saW5lLWJsb2NrIixsJiYoT2JqZWN0LmFzc2lnbihvLnN0eWxlLGwpLGwudGV4dGJveCYmT2JqZWN0LmFzc2lnbihzLnN0eWxlLGwudGV4dGJveCkpLCIiIT09bilzLmFwcGVuZENoaWxkKG8pO2Vsc2V7JGlkKGUpLmFwcGVuZENoaWxkKG8pfWNvbnN0IHI9JGlkKGUpOyIiPT09biYmcj9yLmFwcGVuZENoaWxkKG8pOnImJnIuYXBwZW5kQ2hpbGQocyl9ZnVuY3Rpb24gY1R4dGJveChlLHQsaT0hMSxuPSIiLGw9IiIsYT17fSxzPXt9LG89ITEpe2lmKCJybmQiPT10JiYodD0kcm5kKCkpLGNoZWNrRWxtbnQoZSx0KSlyZXR1cm47Y29uc3Qgcj0kZWxtKCJkaXYiKTtpZigiIiE9PW4pe3IuY2xhc3NMaXN0LmFkZCgidGV4dGJveCIpO2NvbnN0IGU9JGVsbSgibGFiZWwiKTtlLnRleHRDb250ZW50PW4udHJpbSgpLGUuaWQ9dCsibGJsIixlLnN0eWxlLmRpc3BsYXk9aT8ibm9uZSI6ImlubGluZS1ibG9jayIsZS5zZXRBdHRyaWJ1dGUoImZvciIsdCksYSYmYS5sYWJlbHomJk9iamVjdC5hc3NpZ24oci5zdHlsZSxhLmxhYmVseiksci5hcHBlbmRDaGlsZChlKX1jb25zdCBkPSRlbG0oImlucHV0Iik7aWYoZC5zZXRBdHRyaWJ1dGUoInR5cGUiLCJ0ZXh0IiksZC5zZXRBdHRyaWJ1dGUoImlkIix0KSxvJiZkLnNldEF0dHJpYnV0ZSgibm9jaGVjayIsIiIpLCIiIT1sJiZkLnNldEF0dHJpYnV0ZSgidHRpcCIsbCkscyYmKE9iamVjdC5hc3NpZ24oZCxzKSxzLmV2ZW50TGlzdGVuZXIpKWZvcihsZXQgZSBpbiBzLmV2ZW50TGlzdGVuZXIpZC5hZGRFdmVudExpc3RlbmVyKGUsKHQ9PntzLmV2ZW50TGlzdGVuZXJbZV0oZCx0KX0pKTtpZihkLnN0eWxlLmRpc3BsYXk9aT8ibm9uZSI6ImlubGluZS1ibG9jayIsYSYmKE9iamVjdC5hc3NpZ24oZC5zdHlsZSxhKSxhLnRleHRib3gmJk9iamVjdC5hc3NpZ24oci5zdHlsZSxhLnRleHRib3gpKSwiIiE9PW4pci5hcHBlbmRDaGlsZChkKTtlbHNleyRpZChlKS5hcHBlbmRDaGlsZChkKX1jb25zdCBjPSRpZChlKTsiIj09PW4mJmM/Yy5hcHBlbmRDaGlsZChkKTpjJiZjLmFwcGVuZENoaWxkKHIpfWZ1bmN0aW9uIGNUYWJsZShlLHQsaSxuPXt9LGw9e30pe2lmKCJybmQiPT10JiYodD0kcm5kKCkpLGNoZWNrRWxtbnQoZSx0KSlyZXR1cm47Y29uc3QgYT0kZWxtKCJ0YWJsZSIpO2lmKCIiIT1pJiYoYS5pbm5lckhUTUw9aS50cmltKCkpLGEuaWQ9dCxsJiYoT2JqZWN0LmFzc2lnbihhLGwpLGwuZXZlbnRMaXN0ZW5lcikpZm9yKGxldCBlIGluIGwuZXZlbnRMaXN0ZW5lcilhLmFkZEV2ZW50TGlzdGVuZXIoZSwoKCk9PntsLmV2ZW50TGlzdGVuZXJbZV0odGhpcyl9KSk7biYmT2JqZWN0LmFzc2lnbihhLnN0eWxlLG4pOyRpZChlKS5hcHBlbmRDaGlsZChhKX1mdW5jdGlvbiBjVGV4dChlLHQsaSxuPXtlbDpudWxsLHN0Om51bGwsc3QyOm51bGx9KXtpZigicm5kIj09dCYmKHQ9JHJuZCgpKSxjaGVja0VsbW50KGUsdCkpcmV0dXJuO2NvbnN0IGw9JGVsbSgicCIpO2lmKGwuY2xhc3NMaXN0LmFkZCgidGV4dCIpLGkmJihsLmlubmVySFRNTD1pLnRyaW0oKSksbC5pZD10LG4uZXZlbnRzKWZvcihsZXQgZSBpbiBuLmV2ZW50cylsLmFkZEV2ZW50TGlzdGVuZXIoZSwodD0+e24uZXZlbnRzW2VdKGwsdCl9KSk7bi5lbCYmT2JqZWN0LmFzc2lnbihsLG4uZWwpLG4uc3QmJk9iamVjdC5hc3NpZ24obC5zdHlsZSxuLnN0KSxuLnN0MiYmT2JqZWN0LmFzc2lnbihsLnN0eWxlLG4uc3QyKTskaWQoZSkuYXBwZW5kQ2hpbGQobCksbnVsbCE9bi5mbiYmbi5mbihsKX1mdW5jdGlvbiBjQ29tYm9Cb3g0KGUsdCxpPXtzdDpudWxsLG9wdHM6bnVsbCxvcHRzRW51bTohMSxmblNwYXduOm51bGwsZGVsYXlTcGF3bjpudWxsfSl7Y0RhKGUse3R5cGU6InNlbGVjdCIsaWQ6dCxjbHM6InNlbGVjdC1kcm9wZG93biIsc3Q6aS5zdCxmbjplPT57aS5vcHRzJiZpLm9wdHMuZm9yRWFjaCgoKHQsbik9Pntjb25zdCBsPSRlbG0oIm9wdGlvbiIpO2kub3B0c0VudW0/bC52YWx1ZT1uOmwudmFsdWU9dCxsLnRleHQ9dCwkaWQoZS5pZCkuYWRkKGwpfSkpLG51bGwhPWkuZm5TcGF3biYmImZ1bmN0aW9uIj09dHlwZW9mIGkuZm5TcGF3biYmaS5mblNwYXduKGUpfSxkZWxheUZuOmkuZGVsYXlTcGF3bn0pfWZ1bmN0aW9uIGNDb21ib0JveDIoZSx0LGksbj0hMSxsPSIiLGE9e30pe2lmKCJybmQiPT10JiYodD0kcm5kKCkpLGNoZWNrRWxtbnQoZSx0KSlyZXR1cm47Y29uc3Qgcz0kZWxtKCJzZWxlY3QiKTtzLmNsYXNzTGlzdC5hZGQoInNlbGVjdC1kcm9wZG93biIpLHMuaWQ9dCwiIiE9bCYmcy5zZXRBdHRyaWJ1dGUoInR0aXAiLGwpLGkuZm9yRWFjaCgoKGUsdCk9Pntjb25zdCBpPSRlbG0oIm9wdGlvbiIpO2kudmFsdWU9dCxpLnRleHQ9ZSxzLmFkZChpKX0pKSxzLnN0eWxlLmRpc3BsYXk9MT09bj8ibm9uZSI6ImlubGluZS1ibG9jayIsYSYmT2JqZWN0LmFzc2lnbihzLnN0eWxlLGEpOyRpZChlKS5hcHBlbmRDaGlsZChzKX1mdW5jdGlvbiBjQ29tYm9Cb3goZSx0LGksbixsLGE9ITEscz0iIixvPShlPT57fSkscj17fSl7aWYoInJuZCI9PXQmJih0PSRybmQoKSksY2hlY2tFbG1udChlLHQpKXJldHVybjtjb25zdCBkPSRlbG0oImRpdiIpOyIiIT1pJiYoZC5jbGFzc0xpc3QuYWRkKCJ0ZXh0IiksZC50ZXh0Q29udGVudD1pLnRyaW0oKSk7Y29uc3QgYz0kZWxtKCJzZWxlY3QiKTtjLmNsYXNzTGlzdC5hZGQoInNlbGVjdC1kcm9wZG93biIpLGMuaWQ9dCxjLnN0eWxlLmhlaWdodD0iNDJweCIsYSYmKGMuc3R5bGUubWFyZ2luUmlnaHQ9IjEwcHgiKSxjLm9uY2hhbmdlPSgpPT57em5TSW50KHQsbixsKSxvKGMpfSxyJiYoT2JqZWN0LmFzc2lnbihjLnN0eWxlLHIpLHIudGV4dF9kaXYmJk9iamVjdC5hc3NpZ24oZC5zdHlsZSxyLnRleHRfZGl2KSk7Y29uc3QgcD0kaWQoZSk7IiIhPWkmJnAuYXBwZW5kQ2hpbGQoZCkscC5hcHBlbmRDaGlsZChjKTtjb25zdCB1PSRlbG0oImkiKTsiIiE9cyYmKHUuY2xhc3NOYW1lPSJmYSBmYS1xdWVzdGlvbi1jaXJjbGUgZmEtMiIsdS5zZXRBdHRyaWJ1dGUoImFyaWEtaGlkZGVuIiwidHJ1ZSIpLHUuc3R5bGUuZGlzcGxheT0iaW5saW5lIix1LnN0eWxlLnBvc2l0aW9uPSJyZWxhdGl2ZSIsdS5zdHlsZS5tYXJnaW5MZWZ0PSI4cHgiLHUuc3R5bGUuZm9udFdlaWdodD0iOTAwIix1LnN0eWxlLmZvbnRTaXplPSIxNXB4Iix1LnN0eWxlLm9wYWNpdHk9IjAuNSIsdS5zZXRBdHRyaWJ1dGUoInR0aXAiLHMpLHAuYXBwZW5kQ2hpbGQodSkpLHVJbnQyLnB1c2godCl9ZnVuY3Rpb24gY0xvYWRpbmcoZT1wSWQsdCxpPXt9KXtpZihjaGVja0VsbW50KGUsdCkpcmV0dXJuO2NvbnN0IG49ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiZGl2Iik7bi5jbGFzc0xpc3QuYWRkKCJsb2FkZXIiLCJsb2FkZXItLXN0eWxlOCIpLG4uaWQ9dDtjb25zdCBsPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnROUygiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciLCJzdmciKTtsLnNldEF0dHJpYnV0ZSgidmVyc2lvbiIsIjEuMSIpLGwuc2V0QXR0cmlidXRlKCJ3aWR0aCIsIjI0cHgiKSxsLnNldEF0dHJpYnV0ZSgiaGVpZ2h0IiwiMzBweCIpLGwuc2V0QXR0cmlidXRlKCJ2aWV3Qm94IiwiMCAwIDI0IDMwIiksbC5zdHlsZS5jc3NUZXh0PSJlbmFibGUtYmFja2dyb3VuZDpuZXcgMCAwIDUwIDUwOyI7Zm9yKGxldCBlPTA7ZTwzO2UrKyl7Y29uc3QgdD1kb2N1bWVudC5jcmVhdGVFbGVtZW50TlMoImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiwicmVjdCIpO3Quc2V0QXR0cmlidXRlKCJ4IiwiIis4KmUpLHQuc2V0QXR0cmlidXRlKCJ5IiwiMTAiKSx0LnNldEF0dHJpYnV0ZSgid2lkdGgiLCI0IiksdC5zZXRBdHRyaWJ1dGUoImhlaWdodCIsIjEwIiksdC5zZXRBdHRyaWJ1dGUoImZpbGwiLCJ2YXIoLS1jLXByaW1hcnkpIiksdC5zZXRBdHRyaWJ1dGUoIm9wYWNpdHkiLCIwLjIiKTtjb25zdCBpPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnROUygiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciLCJhbmltYXRlIik7aS5zZXRBdHRyaWJ1dGUoImF0dHJpYnV0ZU5hbWUiLCJvcGFjaXR5IiksaS5zZXRBdHRyaWJ1dGUoImF0dHJpYnV0ZVR5cGUiLCJYTUwiKSxpLnNldEF0dHJpYnV0ZSgidmFsdWVzIiwiMC4yOyAxOyAuMiIpLGkuc2V0QXR0cmlidXRlKCJiZWdpbiIsLjE1KmUrInMiKSxpLnNldEF0dHJpYnV0ZSgiZHVyIiwiMC42cyIpLGkuc2V0QXR0cmlidXRlKCJyZXBlYXRDb3VudCIsImluZGVmaW5pdGUiKTtjb25zdCBuPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnROUygiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciLCJhbmltYXRlIik7bi5zZXRBdHRyaWJ1dGUoImF0dHJpYnV0ZU5hbWUiLCJoZWlnaHQiKSxuLnNldEF0dHJpYnV0ZSgiYXR0cmlidXRlVHlwZSIsIlhNTCIpLG4uc2V0QXR0cmlidXRlKCJ2YWx1ZXMiLCIxMDsgMjA7IDEwIiksbi5zZXRBdHRyaWJ1dGUoImJlZ2luIiwuMTUqZSsicyIpLG4uc2V0QXR0cmlidXRlKCJkdXIiLCIwLjZzIiksbi5zZXRBdHRyaWJ1dGUoInJlcGVhdENvdW50IiwiaW5kZWZpbml0ZSIpO2NvbnN0IGE9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudE5TKCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIsImFuaW1hdGUiKTthLnNldEF0dHJpYnV0ZSgiYXR0cmlidXRlTmFtZSIsInkiKSxhLnNldEF0dHJpYnV0ZSgiYXR0cmlidXRlVHlwZSIsIlhNTCIpLGEuc2V0QXR0cmlidXRlKCJ2YWx1ZXMiLCIxMDsgNTsgMTAiKSxhLnNldEF0dHJpYnV0ZSgiYmVnaW4iLC4xNSplKyJzIiksYS5zZXRBdHRyaWJ1dGUoImR1ciIsIjAuNnMiKSxhLnNldEF0dHJpYnV0ZSgicmVwZWF0Q291bnQiLCJpbmRlZmluaXRlIiksdC5hcHBlbmRDaGlsZChpKSx0LmFwcGVuZENoaWxkKG4pLHQuYXBwZW5kQ2hpbGQoYSksbC5hcHBlbmRDaGlsZCh0KX1uLmFwcGVuZENoaWxkKGwpLGkmJk9iamVjdC5hc3NpZ24obi5zdHlsZSxpKTsoJGlkKGUpfHxkb2N1bWVudC5ib2R5KS5hcHBlbmRDaGlsZChuKX1mdW5jdGlvbiBjU2xySW50KGUsdCxpLG4sbCxhLHMsbz0iIixyPXt9KXtpZigicm5kIj09dCYmKHQ9JHJuZCgpKSxjaGVja0VsbW50KGUsdCkpcmV0dXJuO2NvbnN0IGQ9JGlkKGUpLGM9JGVsbSgiZGl2Iik7Yy5jbGFzc0xpc3QuYWRkKCJsZW5ndGgiLCJyX3NsaWRlcl9iZyIpLGMuc2V0QXR0cmlidXRlKCJkYXRhLW1pbiIsbiksYy5zZXRBdHRyaWJ1dGUoImRhdGEtbWF4IixsKSxjLnN0eWxlLmRpc3BsYXk9ImlubGluZS1mbGV4IixyJiZyLmJneiYmT2JqZWN0LmFzc2lnbihjLnN0eWxlLHIuYmd6KTtjb25zdCBwPSRlbG0oImRpdiIpO3AuY2xhc3NMaXN0LmFkZCgibF90aXRsZSIsImZfdGl0bGUiKSxwLnNldEF0dHJpYnV0ZSgiZGF0YS1sZW5ndGgiLHMpLHAudGV4dENvbnRlbnQ9aSsiOiAiLHImJnIudGl0bGV6JiZPYmplY3QuYXNzaWduKHAuc3R5bGUsci50aXRsZXopO2NvbnN0IHU9JGVsbSgiaW5wdXQiKSxnPSRlbG0oImJ1dHRvbiIpO2cuY2xhc3NOYW1lPSJjb250cm9scy1udW1iZXIiLGcuc3R5bGUuZGlzcGxheT0iaW5saW5lIixnLnN0eWxlLm1hcmdpbkxlZnQ9IjhweCIsZy5zdHlsZS5tYXJnaW5SaWdodD0iOHB4IixnLmlubmVySFRNTD0iJiM4NzIyOyIudHJpbSgpLGcub25jbGljaz0oKT0+e3N1bVJlc3RCdG4odCwwLG4sbCksem5TSW50KHQsbixsKSxhcHBseUZpbGwodSl9O2NvbnN0IGg9JGVsbSgiYnV0dG9uIik7aC5jbGFzc05hbWU9ImNvbnRyb2xzLW51bWJlciIsaC5zdHlsZS5kaXNwbGF5PSJpbmxpbmUiLGguc3R5bGUubWFyZ2luTGVmdD0iOHB4IixoLnN0eWxlLm1hcmdpblJpZ2h0PSI4cHgiLGguaW5uZXJIVE1MPSImIzQzOyIudHJpbSgpLGgub25jbGljaz0oKT0+e3N1bVJlc3RCdG4odCwxLG4sbCksem5TSW50KHQsbixsKSxhcHBseUZpbGwodSl9LHUuY2xhc3NMaXN0LmFkZCgic2xpZGVyIiksdS5zZXRBdHRyaWJ1dGUoImlkIix0KSx1LnNldEF0dHJpYnV0ZSgidHlwZSIsInJhbmdlIiksdS5zZXRBdHRyaWJ1dGUoIm1pbiIsbiksdS5zZXRBdHRyaWJ1dGUoIm1heCIsbCksdS5zZXRBdHRyaWJ1dGUoInN0ZXAiLGEpLHUuc2V0QXR0cmlidXRlKCJ2YWx1ZSIscyksdS5vbmNoYW5nZT0oKT0+e3puU0ludCh0LG4sbCksYXBwbHlGaWxsKHUpfSxjLmFwcGVuZENoaWxkKHApLGMuYXBwZW5kQ2hpbGQoZyksYy5hcHBlbmRDaGlsZCh1KSxjLmFwcGVuZENoaWxkKGgpLGQuYXBwZW5kQ2hpbGQoYyk7Y29uc3QgZj0kZWxtKCJpIik7IiIhPW8mJihmLmNsYXNzTmFtZT0iZmEgZmEtcXVlc3Rpb24tY2lyY2xlIGZhLTIiLGYuc2V0QXR0cmlidXRlKCJhcmlhLWhpZGRlbiIsInRydWUiKSxmLnN0eWxlLmRpc3BsYXk9ImlubGluZSIsZi5zdHlsZS5wb3NpdGlvbj0icmVsYXRpdmUiLGYuc3R5bGUubWFyZ2luTGVmdD0iOHB4IixmLnN0eWxlLmZvbnRXZWlnaHQ9IjkwMCIsZi5zdHlsZS5mb250U2l6ZT0iMTVweCIsZi5zdHlsZS5vcGFjaXR5PSIwLjUiLHImJnIudHRpcHMmJk9iamVjdC5hc3NpZ24oZi5zdHlsZSxyLnR0aXBzKSxmLnNldEF0dHJpYnV0ZSgidHRpcCIsbyksZC5hcHBlbmRDaGlsZChmKSksdUludC5wdXNoKHQpfWZ1bmN0aW9uIHVTbGlkZXJzKCl7ZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgiLnJfc2xpZGVyX2JnIikuZm9yRWFjaCgoZT0+e2NvbnN0IHQ9ZS5xdWVyeVNlbGVjdG9yKCIuc2xpZGVyIiksaT1lLnF1ZXJ5U2VsZWN0b3IoIi5sX3RpdGxlIik7dC5hZGRFdmVudExpc3RlbmVyKCJpbnB1dCIsKGU9PntpLnNldEF0dHJpYnV0ZSgiZGF0YS1sZW5ndGgiLGUudGFyZ2V0LnZhbHVlKSxhcHBseUZpbGwoZS50YXJnZXQpfSkpLGFwcGx5RmlsbCh0KX0pKTtkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCIuZl9zbGlkZXJfYmciKS5mb3JFYWNoKChhc3luYyBlPT57Y29uc3QgdD1lLnF1ZXJ5U2VsZWN0b3IoIi5udW1iZXJzbGlkZXIiKTtpZih0KXthcHBseUZpbGwodCwhMCwoU3RyaW5nKHQuc3RlcCkuc3BsaXQoIi4iKVsxXXx8IiIpLmxlbmd0aCx0LnZhbHVlKX19KSl9ZnVuY3Rpb24gYXBwbHlGaWxsKGUsdD0hMSxpPTEsbil7aWYodClyZXR1cm4gZS5wYXJlbnROb2RlLnF1ZXJ5U2VsZWN0b3IoIi5sX3RpdGxlIikuc2V0QXR0cmlidXRlKCJkYXRhLWxlbmd0aCIscGFyc2VGbG9hdChuKS50b0ZpeGVkKGkpKSxlLnN0eWxlLmJhY2tncm91bmQ9Y1N0eWxlcy5iZ1NsaWRlcnMsZS5zdHlsZS5jb2xvcj0idmFyKC0tYy10ZXh0KSIsZS5zdHlsZS5ib3JkZXJSYWRpdXM9IjVweCIsdm9pZChlLnN0eWxlLmJvcmRlcj0iMXB4IHNvbGlkIHZhcigtLWMtY29udG9ybm9zKSIpO2NvbnN0IGw9KDEwMCooZS52YWx1ZS1lLm1pbikvKGUubWF4LWUubWluKSkudG9GaXhlZCgxKSxhPWBsaW5lYXItZ3JhZGllbnQoOTBkZWcsIHZhcigtLWMtcHJpbWFyeSkgMCUsIHZhcigtLWMtc2Vjb25kYXJ5KSAke2x9JSwgJHtjU3R5bGVzLmJnU2xpZGVyc30gJHtsfSUsICR7Y1N0eWxlcy5iZ1NsaWRlcnN9IDEwMCUpYDtlLnN0eWxlLmJhY2tncm91bmQ9YSxlLnBhcmVudE5vZGUucXVlcnlTZWxlY3RvcigiLmxfdGl0bGUiKS5zZXRBdHRyaWJ1dGUoImRhdGEtbGVuZ3RoIixlLnZhbHVlKX1mdW5jdGlvbiBzdW1SZXN0QnRuKGUsdCxpLG4sbD0wLGE9MSl7bnVsbCE9JGlkKGUpP2w/dD8kaWQoZSkudmFsdWU+bj8kaWQoZSkudmFsdWU9cGFyc2VGbG9hdChuKTokaWQoZSkudmFsdWU9KHBhcnNlRmxvYXQoJGlkKGUpLnZhbHVlKStwYXJzZUZsb2F0KCRpZChlKS5zdGVwKSkudG9GaXhlZChhKTokaWQoZSkudmFsdWU8aT8kaWQoZSkudmFsdWU9cGFyc2VGbG9hdChuKTokaWQoZSkudmFsdWU9KHBhcnNlRmxvYXQoJGlkKGUpLnZhbHVlKS1wYXJzZUZsb2F0KCRpZChlKS5zdGVwKSkudG9GaXhlZChhKTp0PyRpZChlKS52YWx1ZT5uPyRpZChlKS52YWx1ZT1wYXJzZUludChuKTokaWQoZSkudmFsdWU9cGFyc2VGbG9hdCgkaWQoZSkudmFsdWUpK3BhcnNlRmxvYXQoJGlkKGUpLnN0ZXApOiRpZChlKS52YWx1ZTxpPyRpZChlKS52YWx1ZT1wYXJzZUludChuKTokaWQoZSkudmFsdWU9cGFyc2VGbG9hdCgkaWQoZSkudmFsdWUpLXBhcnNlRmxvYXQoJGlkKGUpLnN0ZXApOiRsb2coZSwiZG9lc250IGV4aXN0Iil9ZnVuY3Rpb24gc3RyVG9Cb29sKGUpe2lmKCJzdHJpbmciIT10eXBlb2YgZSlyZXR1cm4gQm9vbGVhbihlKTtzd2l0Y2goZS50b0xvd2VyQ2FzZSgpLnRyaW0oKSl7Y2FzZSJ0cnVlIjpjYXNlInllcyI6Y2FzZSIxIjpyZXR1cm4hMDtjYXNlImZhbHNlIjpjYXNlIm5vIjpjYXNlIjAiOmNhc2UgbnVsbDpyZXR1cm4hMTtkZWZhdWx0OnJldHVybiBCb29sZWFuKGUpfX1mdW5jdGlvbiB6bkJvb2woZSl7JC5nZXQoIi9nX2Jvb2w/ZmVhdHVyZT0iK2UsKHQ9PntudWxsIT0kaWQoZSk/JGlkKGUpLmNoZWNrZWQ9c3RyVG9Cb29sKHQpOiRsb2coZSwiZG9lc250IGV4aXN0Iil9KSl9ZnVuY3Rpb24gem5JbnQoZSx0PSEwKXskLmdldCgiL2dfaW50P2ZlYXR1cmU9IitlLChpPT57bnVsbCE9JGlkKGUpPygkaWQoZSkudmFsdWU9aSxlLmluY2x1ZGVzKCJ0aGVtZVNlbGVjdCIpJiYkaWQoZSkuZGlzcGF0Y2hFdmVudChuZXcgRXZlbnQoImNoYW5nZSIpKSx0JiZudWxsIT0kaWQoZSsieiIpJiYoJGlkKGUrInoiKS5pbm5lckhUTUw9JGlkKGUpLnZhbHVlKSk6JGxvZyhlLCJkb2VzbnQgZXhpc3QiKX0pKX1mdW5jdGlvbiB6bkZsb2F0KGUpeyQuZ2V0KCIvZ19mbG9hdD9mZWF0dXJlPSIrZSwodD0+e2lmKG51bGw9PSRpZChlKSlyZXR1cm4gdm9pZCAkbG9nKGUsImRvZXNudCBleGlzdCIpO2xldCBpPVN0cmluZygkaWQoZSkuc3RlcCkuc3BsaXQoIi4iKVsxXXx8IiI7JGlkKGUpLnZhbHVlPXBhcnNlRmxvYXQodCkudG9GaXhlZChpLmxlbmd0aCksbnVsbCE9JGlkKGUrInoiKSYmKCRpZChlKyJ6IikuaW5uZXJIVE1MPSRpZChlKS52YWx1ZSl9KSl9ZnVuY3Rpb24gem5TQm9vbChlKXtsZXQgdD0kaWQoZSk7aWYobnVsbD09dClyZXR1cm4gdm9pZCAkbG9nKGUsImRvZXNudCBleGlzdCIpO2xldCBpPXQuY2hlY2tlZDskLmdldCgiL3NfYm9vbD9mZWF0dXJlPSIrZSsiJnZhbD0iK2ksKGU9Pnt9KSl9ZnVuY3Rpb24gem5TSW50KGUsdD0wLGk9MCl7bGV0IG49JGlkKGUpO2lmKG51bGw9PW4pcmV0dXJuIHZvaWQgJGxvZyhlKyIgbm90IGZvdW5kIik7bGV0IGw9bi52YWx1ZTswPT10JiYwPT1pPyQuZ2V0KCIvc19pbnQ/ZmVhdHVyZT0iK2UrIiZ2YWw9IitsLCh0PT57bGV0IGk9JGlkKGUrInoiKTtudWxsPT1pJiZudWxsPT1pfHwoaS5pbm5lckhUTUw9dCl9KSk6cGFyc2VJbnQobCk+PXBhcnNlSW50KHQpJiZwYXJzZUludChsKTw9cGFyc2VJbnQoaSk/JC5nZXQoIi9zX2ludD9mZWF0dXJlPSIrZSsiJnZhbD0iK2wsKHQ9PntsZXQgaT0kaWQoZSsieiIpO251bGw9PWkmJm51bGw9PWl8fChpLmlubmVySFRNTD10KX0pKTokbG9nKCJtaW5tYXggb3ZlcnBhc3NlZCB8ICIsbCx0LGkpfWZ1bmN0aW9uIHpuU0Zsb2F0KGUpe2xldCB0PSRpZChlKTtpZihudWxsPT10KXJldHVybiB2b2lkICRsb2coZSwiZG9lc250IGV4aXN0Iik7bGV0IGk9cGFyc2VGbG9hdCh0LnZhbHVlKSxuPXBhcnNlRmxvYXQodC5taW4pLGw9cGFyc2VGbG9hdCh0Lm1heCk7aT49biYmaTw9bCYmJC5nZXQoIi9zX2Zsb2F0P2ZlYXR1cmU9IitlKyImdmFsPSIraSwodD0+e251bGwhPSRpZChlKyJ6IikmJigkaWQoZSsieiIpLmlubmVySFRNTD10KX0pKX1mdW5jdGlvbiB6blNJbmZvKGUsdCxpPSgoKT0+e30pKXskLmdldCgiL3NfaW5mbz9mZWF0dXJlPSIrZSsiJnZhbD0iK3QsKGU9PntpKCl9KSl9ZnVuY3Rpb24gem5CdG4oZSx0PSIiKXtyZXR1cm4gbmV3IFByb21pc2UoKChpLG4pPT57IiI9PXQ/JC5nZXQoIi90b2dnbGU/ZmVhdHVyZT0iK2UsKGU9PntpKGUpfSkpLmZhaWwoKGU9PntuKGUpfSkpOiQuZ2V0KCIvdG9nZ2xlP2ZlYXR1cmU9IitlKyImdmFsPSIrdCwoZT0+e2koZSl9KSkuZmFpbCgoZT0+e24oZSl9KSl9KSl9ZnVuY3Rpb24gY0V4aXQoKXt6bkJ0bigiZGVhZCIpLHNldFRpbWVvdXQoKCgpPT57d2luZG93Lm9wZW4oIiIsIl9zZWxmIiwiIiksd2luZG93LmNsb3NlKCksaGlzdG9yeS5nbygtMSksbmF2aWdhdG9yLmFwcC5iYWNrSGlzdG9yeSgpLHdpbmRvdy5sb2NhdGlvbi5yZWxvYWQoKX0pLDVlMyl9ZnVuY3Rpb24gZkNvbWJvKGUsdCl7JC5nZXQoIi9nX2luZm8/aW5mbz0iK3QsKHQ9PntsZXQgaT0kaWQoZSk7aWYobnVsbD09aSlyZXR1cm4gdm9pZCAkbG9nKGUsImRvZXNudCBleGlzdCIpO2xldCBuPXdpbmRvdy5hdG9iKHQpO2lmKG51bGwhPW4mJihuPUpTT04ucGFyc2UobiksbnVsbCE9bikpe2kuaW5uZXJIVE1MPSIiLnRyaW0oKTtmb3IoY29uc3QgdCBpbiBuKWlmKE9iamVjdC5oYXNPd25Qcm9wZXJ0eS5jYWxsKG4sdCkpe2NvbnN0IGw9blt0XTtsZXQgYT0kZWxtKCJvcHRpb24iKTthLnZhbHVlPXQsYS5pZD1lKyJfIit0LGEuaW5uZXJIVE1MPWwuaWQsaS5hcHBlbmRDaGlsZChhKX19fSkpfWFzeW5jIGZ1bmN0aW9uIHBhbmVsRXZlbnRzKCl7cmVzaXplRXZlbnR8fHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCJyZXNpemUiLCgoKT0+e2N1cldpZHRoPXdpbmRvdy5pbm5lcldpZHRoLGN1cldpZHRoPDFlMz8odFBhbmVsKCJsZWZ0X3BhbmVsIiwxKSx0UGFuZWwoInJpZ2h0X3BhbmVsIiwxKSk6KHRQYW5lbCgibGVmdF9wYW5lbCIsMiksdFBhbmVsKCJyaWdodF9wYW5lbCIsMikpLHJlc2l6ZUV2ZW50PSEwfSkpLCRtLnBob25lKCk/KGRvY3VtZW50LmJvZHkuc3R5bGUuem9vbT0iNzUlIiwkaWQoInFyY29kZV90ZXh0IikuaW5uZXJIVE1MPSJvbmx5IG9uIHBjIi50cmltKCksJGlkKCJxcmltYWdlIikuc3R5bGUuZGlzcGxheT0ibm9uZSIsdFBhbmVsKCJsZWZ0X3BhbmVsIiksdFBhbmVsKCkpOigkaWQoInFyY29kZV90ZXh0IikuaW5uZXJIVE1MPSJzY2FuIG9uIG1vYmlsZSBvciBlbnRlcjogIit3aW5kb3cubG9jYXRpb24uaG9zdG5hbWUrIiBvbiB5b3VyIG1vYmlsZSBicm93c2VyIiwkaWQoInFyaW1hZ2UiKS5zcmM9Imh0dHBzOi8vY2hhcnQuZ29vZ2xlYXBpcy5jb20vY2hhcnQ/Y2h0PXFyJmNobD0iK3dpbmRvdy5sb2NhdGlvbi5ob3N0bmFtZSsiJmNocz0yNTB4MjUwJmNobGQ9THwwIixjdXJXaWR0aDwxZTM/KHRQYW5lbCgibGVmdF9wYW5lbCIpLHRQYW5lbCgpKTokbS5zdGVhbSgpPygkaWQoInJpZ2h0X3BhbmVsIikuc3R5bGUub3BhY2l0eT0wLCRpZCgicmlnaHRfcGFuZWwiKS5zdHlsZS53aWR0aD0iMHB4IixzZXRUaW1lb3V0KChhc3luYygpPT57JGlkKCJyaWdodF9wYW5lbCIpLnN0eWxlLmRpc3BsYXk9Im5vbmUifSksMjUwKSwkaWQoImxlZnRfcGFuZWwiKS5zdHlsZS5vcGFjaXR5PTAsJGlkKCJsZWZ0X3BhbmVsIikuc3R5bGUud2lkdGg9IjBweCIsc2V0VGltZW91dCgoYXN5bmMoKT0+eyRpZCgibGVmdF9wYW5lbCIpLnN0eWxlLmRpc3BsYXk9Im5vbmUifSksMjUwKSxub3RpZnkoInBhbmVscyBkaXNhYmxlZCBvbiBzdGVhbS4iKSk6KCRpZCgicmlnaHRfcGFuZWwiKS5zdHlsZS5vcGFjaXR5PTEsc2V0VGltZW91dCgoYXN5bmMoKT0+eyRpZCgicmlnaHRfcGFuZWwiKS5zdHlsZS5kaXNwbGF5PSJibG9jayJ9KSwyNTApLCRpZCgibGVmdF9wYW5lbCIpLnN0eWxlLm9wYWNpdHk9MSxzZXRUaW1lb3V0KChhc3luYygpPT57JGlkKCJsZWZ0X3BhbmVsIikuc3R5bGUuZGlzcGxheT0iYmxvY2sifSksMjUwKSkpfWFzeW5jIGZ1bmN0aW9uIHRQYW5lbChlPSJyaWdodF9wYW5lbCIsdD0wKXtjb25zdCBpPSRpZChlKTswPT10PyJub25lIiE9aS5zdHlsZS5kaXNwbGF5PyhpLnN0eWxlLndpZHRoPSIwcHgiLGkuc3R5bGUuaGVpZ2h0PSIwcHgiLGkuc3R5bGUub3BhY2l0eT0iMCIsc2V0VGltZW91dCgoYXN5bmMoKT0+e2kuc3R5bGUuZGlzcGxheT0ibm9uZSJ9KSwyNTApLCgkbS5waG9uZSgpfHxjdXJXaWR0aDwxZTMpJiYoJGlkKCJjZW50ZXJfcGFuZWwiKS5zdHlsZS5kaXNwbGF5PSJibG9jayIsZS5pbmNsdWRlcygicmlnaHQiKT8kaWQoIm1fdF9yaWdodF9wYW5lbCIpLnN0eWxlLmRpc3BsYXk9Im5vbmUiOiRpZCgibV90X2xlZnRfcGFuZWwiKS5zdHlsZS5kaXNwbGF5PSJub25lIikpOihpLnN0eWxlLmRpc3BsYXk9ImJsb2NrIixhd2FpdCBzZXRUaW1lb3V0KChhc3luYygpPT57fSksMjUwKSxpLnN0eWxlLndpZHRoPSJhdXRvIixpLnN0eWxlLmhlaWdodD0iYXV0byIsaS5zdHlsZS5vcGFjaXR5PSIxIiwoJG0ucGhvbmUoKXx8Y3VyV2lkdGg8MWUzKSYmKCRpZCgiY2VudGVyX3BhbmVsIikuc3R5bGUuZGlzcGxheT0ibm9uZSIsZS5pbmNsdWRlcygicmlnaHQiKT8kaWQoIm1fdF9yaWdodF9wYW5lbCIpLnN0eWxlLmRpc3BsYXk9ImJsb2NrIjokaWQoIm1fdF9sZWZ0X3BhbmVsIikuc3R5bGUuZGlzcGxheT0iYmxvY2siKSk6Im5vbmUiIT1pLnN0eWxlLmRpc3BsYXkmJjE9PXQ/KGkuc3R5bGUud2lkdGg9IjBweCIsaS5zdHlsZS5oZWlnaHQ9IjBweCIsaS5zdHlsZS5vcGFjaXR5PSIwIixzZXRUaW1lb3V0KChhc3luYygpPT57aS5zdHlsZS5kaXNwbGF5PSJub25lIn0pLDI1MCksKCRtLnBob25lKCl8fGN1cldpZHRoPDFlMykmJigkaWQoImNlbnRlcl9wYW5lbCIpLnN0eWxlLmRpc3BsYXk9ImJsb2NrIixlLmluY2x1ZGVzKCJyaWdodCIpPyRpZCgibV90X3JpZ2h0X3BhbmVsIikuc3R5bGUuZGlzcGxheT0ibm9uZSI6JGlkKCJtX3RfbGVmdF9wYW5lbCIpLnN0eWxlLmRpc3BsYXk9Im5vbmUiKSk6Mj09dCYmIm5vbmUiPT1pLnN0eWxlLmRpc3BsYXkmJihpLnN0eWxlLmRpc3BsYXk9ImJsb2NrIixhd2FpdCAkbS53OCgyNTApLGkuc3R5bGUud2lkdGg9ImF1dG8iLGkuc3R5bGUuaGVpZ2h0PSJhdXRvIixpLnN0eWxlLm9wYWNpdHk9IjEiLCgkbS5waG9uZSgpfHxjdXJXaWR0aDwxZTMpJiYoJGlkKCJjZW50ZXJfcGFuZWwiKS5zdHlsZS5kaXNwbGF5PSJub25lIixlLmluY2x1ZGVzKCJyaWdodCIpPyRpZCgibV90X3JpZ2h0X3BhbmVsIikuc3R5bGUuZGlzcGxheT0iYmxvY2siOiRpZCgibV90X2xlZnRfcGFuZWwiKS5zdHlsZS5kaXNwbGF5PSJibG9jayIpKX1sZXQgbm90aWZ5SWQ9MCxub3RpZnlDbnRyPWRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoIiNub3RpZmljYXRpb24tY29udGFpbmVyIik7ZnVuY3Rpb24gbm90aWZ5KGUsdCxpKXt0PXZvaWQgMD09PXQ/MjUwMDp0LGk9Kytub3RpZnlJZDtsZXQgbj0kZWxtKCJkaXYiKTtuLmNsYXNzTGlzdC5hZGQoIm5vdGlmaWNhdGlvbiIpLG4uaW5uZXJIVE1MPSgiPHA+IitlKyI8L3A+PGJ1dHRvbiBjbGFzcz0nY2xvc2UtYnV0dG9uJyBkYXRhLW5vdGlmaWNhdGlvbi1pZD0nIitpKyInPiZ0aW1lczs8L2J1dHRvbj4iKS50cmltKCksbi5zdHlsZS5tYXJnaW5MZWZ0PSJhdXRvIixuLnN0eWxlLndpZHRoPSJmaXQtY29udGVudCIsbm90aWZ5Q250ci5hcHBlbmRDaGlsZChuKSxzZXRUaW1lb3V0KCgoKT0+e24uc3R5bGUub3BhY2l0eT0iMCIsc2V0VGltZW91dCgoKCk9PntuLnJlbW92ZSgpfSksNDUwKX0pLHQpLChlPW4ucHJldmlvdXNTaWJsaW5nKSYmZS5zdHlsZSYmKGUuc3R5bGUubWFyZ2luVG9wPSI2cHgiKX1mdW5jdGlvbiBjVHh0VmFsaWQoZSx0PSExKXtsZXQgaT0kaWQoZSk7cmV0dXJuISFpJiYodD8oaS52YWxpZGl0eS52YWxpZHx8YWxlcnQoImludmFsaWQgaW5wdXRcbiogbm8gc3ltYm9scywgeyIraS5taW5MZW5ndGgrIi0iK2kubWF4TGVuZ3RoKyIgY2hhcnMgb25seX0iKSxpLnZhbGlkaXR5LnZhbGlkKTppLnZhbGlkaXR5LnZhbGlkKX1mdW5jdGlvbiBjaGVja0VsbW50KGUsdCl7aWYoIiIhPWUmJiIiIT10KXJldHVybiJib2R5Ij09ZXx8JGlkKGUpPyEoIXR8fCEkaWQodCkpJiYoJGxvZyh0LCJhbHJlYWR5IGV4aXN0cyIpLCEwKTooJGxvZyhlLCJkb2VzbnQgZXhpc3QiKSwhMCk7JGxvZyhlLHQsIm5vIElEIil9ZnVuY3Rpb24gY1RoZW1lKCl7Y29uc3QgZT1kb2N1bWVudC5ib2R5LHQ9JGlkKCJ0aGVtZVNlbGVjdCIpLnZhbHVlO2Uuc2V0QXR0cmlidXRlKCJ0aGVtZSIsdCksJExTLnNldCgidGhlbWVTZWxlY3QiLHQpfWFzeW5jIGZ1bmN0aW9uIGxTZXJ2ZXIoKXthd2FpdCAkbS53OCgxNTAwKSxySW5mbygpLGF3YWl0ICRtLnc4KDE1MDApLHVTbGlkZXJzKCksYXdhaXQgJG0udzgoMTAwKSxwU25kKCJzbmQxIil9YXN5bmMgZnVuY3Rpb24gZGVsYXllZEZ1bmNzKCl7dUZ1bmNzLmZvckVhY2goKGFzeW5jKGUsdCk9Pnthd2FpdCBlKHVGdW5jc1t0KzFdKX0pKX1ub3RpZnlDbnRyLmFkZEV2ZW50TGlzdGVuZXIoImNsaWNrIiwoZT0+e2lmKGUudGFyZ2V0LmNsYXNzTGlzdC5jb250YWlucygiY2xvc2UtYnV0dG9uIikpe2xldCB0PWRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoIltkYXRhLW5vdGlmaWNhdGlvbi1pZD0nIitlLnRhcmdldC5kYXRhc2V0Lm5vdGlmaWNhdGlvbklkKyInXSIpLnBhcmVudEVsZW1lbnQ7dC5zdHlsZS5vcGFjaXR5PSIwIixzZXRUaW1lb3V0KCgoKT0+e3QucmVtb3ZlKCl9KSwyNTApLChlPXQucHJldmlvdXNTaWJsaW5nKSYmZS5zdHlsZSYmKGUuc3R5bGUubWFyZ2luVG9wPSI2cHgiKX19KSksbFNlcnZlcigpLGRlbGF5ZWRGdW5jcygpLHBhbmVsRXZlbnRzKCksb3duSW5mbygpLGdPbmxpbmVzKCksdUNoYXQoKSwkbG9nKCJtZW51IGxvYWRlZCIpOw==";
eval(atob(A));