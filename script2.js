var A = "bGV0IHVEbGdzPVtdLHVCb29sPVtdLHVGbHQ9W10sdUludD1bXSx1RnVuY3M9W10sdUludDI9W10sdVRhYnM9e30scElkPSIiLGRBdmF0YXI9Imh0dHBzOi8vY2RuLmpzZGVsaXZyLm5ldC9naC9Db2xhQ2FwcmljaG9zYS9GUFdMUi9sb2dhcmRvLnBuZyIsaEFsaWFzPSExLGNVc2VyQWxpYXM9ITEsY1VzZXJSb2xlPTAsbE1zZz0wLGxNc2dQcml2PTAsZlNuZD0wLGZVc2VyQ2Q9MCxsVXNlclNlbGVjdGVkQ2hhdD1udWxsLGxVU0NDcmVhdGVkPSEwLGxVU0NEYXRlPW51bGwsaXRlckZvdW5kPTAsd0dhbWVGb3VuZD0hMSxpc1dpbmRvd1Zpcz0hMCxpc01vdXNlSW5zaWRlPSExLGlzTW91c2VWaXM9ITEscmVzaXplRXZlbnQ9ITEsY3VyV2lkdGg9d2luZG93LmlubmVyV2lkdGh8fDk5OTtjb25zdCAkTFM9e2dldDplPT5sb2NhbFN0b3JhZ2UuZ2V0SXRlbShlKSxnZXQyOmU9PnN0clRvQm9vbCgkTFMuZ2V0KGUpKXx8ITEsc2V0OihlLHQpPT5sb2NhbFN0b3JhZ2Uuc2V0SXRlbShlLHQpLHJlbW92ZTplPT5sb2NhbFN0b3JhZ2UucmVtb3ZlSXRlbShlKX0sJGxvZz0oLi4uZSk9Pihjb25zb2xlLmxvZyhgG1szNm1bJHsobmV3IEVycm9yKS5zdGFjay5zcGxpdCgiXG4iKVsyXS50cmltKCl9XRtbMG0gLT5gLC4uLmUpLCJ1d3UiKSwkaWQ9ZT0+ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoZSk7ZnVuY3Rpb24gJGNsaWNrKGUpeyRpZChlKT8kaWQoZSk/LmNsaWNrKCk6JGxvZygiJGNsaWNrOiIsZSwiZG9lc250IGV4aXN0Iil9Y29uc3QgJGVsbT1lPT5kb2N1bWVudC5jcmVhdGVFbGVtZW50KGUpO2Z1bmN0aW9uICRybmQoZT04KXtsZXQgdD0iIjt0PSIiO2ZvcihsZXQgaT0wO2k8ZTtpKyspdCs9IkFCQ0RFRkdISUpLTE1OT1BRUlNUVVZXWFlaYWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXowMTIzNDU2Nzg5Ii5jaGFyQXQoTWF0aC5mbG9vcig2MipNYXRoLnJhbmRvbSgpKSk7cmV0dXJuIHR9YXN5bmMgZnVuY3Rpb24gem5HZXQoZSx0PSIiKXtyZXR1cm4gbmV3IFByb21pc2UoKChpLG4pPT57JC5nZXQoIi90b2dnbGU/ZmVhdHVyZT0iK2UrIiZ2YWw9Iit0LChlPT57aShlKX0pKS5mYWlsKChlPT57bihlKX0pKX0pKX1mdW5jdGlvbiB6bkluZm8oZSx0PSIiLGk9bnVsbCl7JC5nZXQoIi9nX2luZm8/aW5mbz0iK2UsKG49PntudWxsIT0kaWQoaXx8ZSkmJigkaWQoaXx8ZSkuaW5uZXJIVE1MPXQrbixpc1ZpcyhpfHxlKSYmc2V0VmlzKGl8fGUpKX0pKX1jb25zdCAkdGltZT17aW50OigpPT5NYXRoLnJvdW5kKCtuZXcgRGF0ZS8xZTMpLHllYXJOTW9udGg6KCk9Pntjb25zdCBlPW5ldyBEYXRlO3JldHVybmAke2UuZ2V0RnVsbFllYXIoKX1uJHtgJHtlLmdldE1vbnRoKCkrMX1gLnBhZFN0YXJ0KDIsIjAiKX1gfSxzdHI6KGUsdD0xKT0+e2xldCBpPW5ldyBEYXRlKDFlMyorZSk7aWYoMT09dClyZXR1cm4oIjAiK2kuZ2V0SG91cnMoKSkuc3Vic3RyKC0yKSsiOiIrKCIwIitpLmdldE1pbnV0ZXMoKSkuc3Vic3RyKC0yKTtpZigyPT10KXtsZXQgZT0oIjAiK2kuZ2V0SG91cnMoKSkuc3Vic3RyKC0yKSx0PSgiMCIraS5nZXRNaW51dGVzKCkpLnN1YnN0cigtMiksbj1pLmdldEZ1bGxZZWFyKCksbD0oIjAiKyhpLmdldE1vbnRoKCkrMSkpLnN1YnN0cigtMik7cmV0dXJuKCIwIitpLmdldERhdGUoKSkuc3Vic3RyKC0yKSsiLyIrbCsiLyIrbisiIC0gIitlKyI6Iit0fXtsZXQgZT1pLmdldEZ1bGxZZWFyKCksdD0oIjAiKyhpLmdldE1vbnRoKCkrMSkpLnN1YnN0cigtMik7cmV0dXJuKCIwIitpLmdldERhdGUoKSkuc3Vic3RyKC0yKSsiLyIrdCsiLyIrZX19fSwkdGJsPXtzZWFyY2g6KGUsdCk9PntsZXQgaSxuLGwsYSxzLG8scixjO2ZvcihpPSRpZChlKSxuPWkudmFsdWUudG9VcHBlckNhc2UoKSxsPSRpZCh0KSxhPWwuZ2V0RWxlbWVudHNCeVRhZ05hbWUoInRyIiksbz0xO288YS5sZW5ndGg7bysrKWZvcihhW29dLnN0eWxlLmRpc3BsYXk9Im5vbmUiLHM9YVtvXS5nZXRFbGVtZW50c0J5VGFnTmFtZSgidGQiKSxyPTA7cjxzLmxlbmd0aDtyKyspaWYoc1tyXSYmKGM9c1tyXS50ZXh0Q29udGVudHx8c1tyXS5pbm5lclRleHQsYy50b1VwcGVyQ2FzZSgpLmluZGV4T2Yobik+LTEpKXthW29dLnN0eWxlLmRpc3BsYXk9IiI7YnJlYWt9fSxzb3J0OihlLHQpPT57bGV0IGksbixsLGEscyxvLHIsYyxkPTA7Zm9yKGk9JGlkKHQpLGw9ITAsYz0iYXNjIjtsOyl7Zm9yKGw9ITEsbj1pLnJvd3MsYT0xO2E8bi5sZW5ndGgtMTthKyspaWYocj0hMSxzPW5bYV0uZ2V0RWxlbWVudHNCeVRhZ05hbWUoIlREIilbZV0sbz1uW2ErMV0uZ2V0RWxlbWVudHNCeVRhZ05hbWUoIlREIilbZV0sImFzYyI9PWMpe2lmKHMuaW5uZXJIVE1MLnRvTG93ZXJDYXNlKCk+by5pbm5lckhUTUwudG9Mb3dlckNhc2UoKSl7cj0hMDticmVha319ZWxzZSBpZigiZGVzYyI9PWMmJnMuaW5uZXJIVE1MLnRvTG93ZXJDYXNlKCk8by5pbm5lckhUTUwudG9Mb3dlckNhc2UoKSl7cj0hMDticmVha31yPyhuW2FdLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKG5bYSsxXSxuW2FdKSxsPSEwLGQrKyk6MD09ZCYmImFzYyI9PWMmJihjPSJkZXNjIixsPSEwKX19LGJvZHk6ZT0+ZS5yZXBsYWNlKC+/L2csIjx0ZCAiKS5yZXBsYWNlKC97L2csIjx0ZD4iKS5yZXBsYWNlKC99L2csIjwvdGQ+IikucmVwbGFjZSgvXFsvZywiPHRyPiIpLnJlcGxhY2UoL1xdL2csIjwvdHI+IiksaGVhZDplPT5lLnJlcGxhY2UoL78vZywiPHRoICIpLnJlcGxhY2UoL3svZywiPHRoPiIpLnJlcGxhY2UoL30vZywiPC90aD4iKS5yZXBsYWNlKC9cWy9nLCI8dHI+IikucmVwbGFjZSgvXF0vZywiPC90cj4iKX0sZGxnPXtjcmVhdGU6KGUsdCxpPXtzdHlsZXo6bnVsbCxlbGVtbnQ6bnVsbCxmbmM6bnVsbH0pPT57aWYoInIiPT10JiYodD0kcm5kKCkpLGNoZWNrRWxtbnQoZSx0KSlyZXR1cm47Y29uc3Qgbj0kZWxtKCJkaWFsb2ciKTtpZihuLmlkPXQsaS5zdHlsZXomJk9iamVjdC5hc3NpZ24obi5zdHlsZSxpLnN0eWxleiksbnVsbCE9aS5lbGVtbnQmJk9iamVjdC5rZXlzKGkuZWxlbW50KS5sZW5ndGg+MClmb3IobGV0IGUgaW4gaS5lbGVtbnQpe2NvbnN0IHQ9aS5lbGVtbnRbZV0sbD0kZWxtKHQudHlwZSk7T2JqZWN0LmFzc2lnbihsLHQucHJvcHMpLE9iamVjdC5hc3NpZ24obC5zdHlsZSx0LnN0eWxlcyksbi5hcHBlbmRDaGlsZChsKX0kaWQoZSkuYXBwZW5kQ2hpbGQobiksbnVsbCE9aS5mbmMmJmkuZm5jKG4pLHVEbGdzLnB1c2godCl9LGNoZWNrOmU9PntsZXQgdD0kaWQoZSk7cmV0dXJuISF0JiZ0Lmhhc0F0dHJpYnV0ZSgib3BlbiIpfSxzaG93OmU9PntsZXQgdD0kaWQoZSk7cmV0dXJuISF0JiZ0LnNob3dNb2RhbCgpfSxjbG9zZTplPT57bGV0IHQ9JGlkKGUpO3JldHVybiEhdCYmdC5jbG9zZSgpfSxjbG9zZUJ0bjplPT57Y0hyKGUsITEse3dpZHRoOiIyMDBweCJ9KSxjQnRuKGUsInIiLCI8Yj5jbG9zZTwvYj4iLCgoKT0+e2RsZy5jbG9zZShlKX0pLCIiLHt3aWR0aDoiMTAwJSJ9KX19LCRtPXtwaG9uZTooKT0+e2xldCBlPSExO3ZhciB0O3JldHVybiB0PW5hdmlnYXRvci51c2VyQWdlbnR8fG5hdmlnYXRvci52ZW5kb3J8fHdpbmRvdy5vcGVyYSwoLyhhbmRyb2lkfGJiXGQrfG1lZWdvKS4rbW9iaWxlfGF2YW50Z298YmFkYVwvfGJsYWNrYmVycnl8YmxhemVyfGNvbXBhbHxlbGFpbmV8ZmVubmVjfGhpcHRvcHxpZW1vYmlsZXxpcChob25lfG9kKXxpcmlzfGtpbmRsZXxsZ2UgfG1hZW1vfG1pZHB8bW1wfG1vYmlsZS4rZmlyZWZveHxuZXRmcm9udHxvcGVyYSBtKG9ifGluKWl8cGFsbSggb3MpP3xwaG9uZXxwKGl4aXxyZSlcL3xwbHVja2VyfHBvY2tldHxwc3B8c2VyaWVzKDR8NikwfHN5bWJpYW58dHJlb3x1cFwuKGJyb3dzZXJ8bGluayl8dm9kYWZvbmV8d2FwfHdpbmRvd3MgY2V8eGRhfHhpaW5vL2kudGVzdCh0KXx8LzEyMDd8NjMxMHw2NTkwfDNnc298NHRocHw1MFsxLTZdaXw3NzBzfDgwMnN8YSB3YXxhYmFjfGFjKGVyfG9vfHNcLSl8YWkoa298cm4pfGFsKGF2fGNhfGNvKXxhbW9pfGFuKGV4fG55fHl3KXxhcHR1fGFyKGNofGdvKXxhcyh0ZXx1cyl8YXR0d3xhdShkaXxcLW18ciB8cyApfGF2YW58YmUoY2t8bGx8bnEpfGJpKGxifHJkKXxibChhY3xheil8YnIoZXx2KXd8YnVtYnxid1wtKG58dSl8YzU1XC98Y2FwaXxjY3dhfGNkbVwtfGNlbGx8Y2h0bXxjbGRjfGNtZFwtfGNvKG1wfG5kKXxjcmF3fGRhKGl0fGxsfG5nKXxkYnRlfGRjXC1zfGRldml8ZGljYXxkbW9ifGRvKGN8cClvfGRzKDEyfFwtZCl8ZWwoNDl8YWkpfGVtKGwyfHVsKXxlcihpY3xrMCl8ZXNsOHxleihbNC03XTB8b3N8d2F8emUpfGZldGN8Zmx5KFwtfF8pfGcxIHV8ZzU2MHxnZW5lfGdmXC01fGdcLW1vfGdvKFwud3xvZCl8Z3IoYWR8dW4pfGhhaWV8aGNpdHxoZFwtKG18cHx0KXxoZWlcLXxoaShwdHx0YSl8aHAoIGl8aXApfGhzXC1jfGh0KGMoXC18IHxffGF8Z3xwfHN8dCl8dHApfGh1KGF3fHRjKXxpXC0oMjB8Z298bWEpfGkyMzB8aWFjKCB8XC18XC8pfGlicm98aWRlYXxpZzAxfGlrb218aW0xa3xpbm5vfGlwYXF8aXJpc3xqYSh0fHYpYXxqYnJvfGplbXV8amlnc3xrZGRpfGtlaml8a2d0KCB8XC8pfGtsb258a3B0IHxrd2NcLXxreW8oY3xrKXxsZShub3x4aSl8bGcoIGd8XC8oa3xsfHUpfDUwfDU0fFwtW2Etd10pfGxpYnd8bHlueHxtMVwtd3xtM2dhfG01MFwvfG1hKHRlfHVpfHhvKXxtYygwMXwyMXxjYSl8bVwtY3J8bWUocmN8cmkpfG1pKG84fG9hfHRzKXxtbWVmfG1vKDAxfDAyfGJpfGRlfGRvfHQoXC18IHxvfHYpfHp6KXxtdCg1MHxwMXx2ICl8bXdicHxteXdhfG4xMFswLTJdfG4yMFsyLTNdfG4zMCgwfDIpfG41MCgwfDJ8NSl8bjcoMCgwfDEpfDEwKXxuZSgoY3xtKVwtfG9ufHRmfHdmfHdnfHd0KXxub2soNnxpKXxuenBofG8yaW18b3AodGl8d3YpfG9yYW58b3dnMXxwODAwfHBhbihhfGR8dCl8cGR4Z3xwZygxM3xcLShbMS04XXxjKSl8cGhpbHxwaXJlfHBsKGF5fHVjKXxwblwtMnxwbyhja3xydHxzZSl8cHJveHxwc2lvfHB0XC1nfHFhXC1hfHFjKDA3fDEyfDIxfDMyfDYwfFwtWzItN118aVwtKXxxdGVrfHIzODB8cjYwMHxyYWtzfHJpbTl8cm8odmV8em8pfHM1NVwvfHNhKGdlfG1hfG1tfG1zfG55fHZhKXxzYygwMXxoXC18b298cFwtKXxzZGtcL3xzZShjKFwtfDB8MSl8NDd8bWN8bmR8cmkpfHNnaFwtfHNoYXJ8c2llKFwtfG0pfHNrXC0wfHNsKDQ1fGlkKXxzbShhbHxhcnxiM3xpdHx0NSl8c28oZnR8bnkpfHNwKDAxfGhcLXx2XC18diApfHN5KDAxfG1iKXx0MigxOHw1MCl8dDYoMDB8MTB8MTgpfHRhKGd0fGxrKXx0Y2xcLXx0ZGdcLXx0ZWwoaXxtKXx0aW1cLXx0XC1tb3x0byhwbHxzaCl8dHMoNzB8bVwtfG0zfG01KXx0eFwtOXx1cChcLmJ8ZzF8c2kpfHV0c3R8djQwMHx2NzUwfHZlcml8dmkocmd8dGUpfHZrKDQwfDVbMC0zXXxcLXYpfHZtNDB8dm9kYXx2dWxjfHZ4KDUyfDUzfDYwfDYxfDcwfDgwfDgxfDgzfDg1fDk4KXx3M2MoXC18ICl8d2ViY3x3aGl0fHdpKGcgfG5jfG53KXx3bWxifHdvbnV8eDcwMHx5YXNcLXx5b3VyfHpldG98enRlXC0vaS50ZXN0KHQuc3Vic3RyKDAsNCkpKSYmKGU9ITApLGV9LHN0ZWFtOigpPT5uYXZpZ2F0b3IudXNlckFnZW50LnRvTG93ZXJDYXNlKCkuaW5kZXhPZigic3RlYW0iKT4tMSx3ODplPT5uZXcgUHJvbWlzZSgodD0+c2V0VGltZW91dCh0LGUpKSl9LGNzcz17fTtmdW5jdGlvbiBjcmVhdGVTdHlsZShlLHQsaT0hMSl7dHJ5e3Q9SlNPTi5wYXJzZSh0KX1jYXRjaChlKXt9aWYoIWV8fCF0KXJldHVybjtjb25zdCBuPWUsbD1gJHtufTpob3ZlcmAsYT0kaWQoImR5bmFtaWNDU1MiKSxzPWEuaW5uZXJUZXh0LmluY2x1ZGVzKGAuJHtufSB7YCksbz1hLmlubmVyVGV4dC5pbmNsdWRlcyhgLiR7bH0ge2ApO2lmKGkpe2lmKCFlfHwhdClyZXR1cm47aWYoIXQubm9ybWFsJiYhdC5ob3ZlcilyZXR1cm47aWYoInN0cmluZyI9PXR5cGVvZiB0Lm5vcm1hbCYmIXMpe2NvbnN0IGk9YC4ke2V9IHsgJHt0Lm5vcm1hbH0gfWA7YS5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShpKSl9aWYoInN0cmluZyI9PXR5cGVvZiB0LmhvdmVyJiYhbyl7Y29uc3QgaT1gLiR7ZX06aG92ZXIgeyAke3QuaG92ZXJ9IH1gO2EuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoaSkpfX1lbHNle2lmKHMpJGxvZyhuLCJjbGFzcyBhbHJlYWR5IGV4aXN0Iik7ZWxzZXtjb25zdCBlPVtdO2ZvcihsZXQgaSBpbiB0KWlmKCJob3ZlciIhPT1pJiYib25jbGljayIhPT1pKXtjb25zdCBuPWNzcy5Qcm9wZXJ0eU1hcHBpbmdbaV18fGk7ZS5wdXNoKGAke259OiAke2Nzcy50cmFuc1ZhbHVlKHRbaV0pfTtgKX1pZihlLmpvaW4oIiAiKS5sZW5ndGg+MCl7Y29uc3QgdD1gLiR7bn0geyAke2Uuam9pbigiICIpfSB9YDthLmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKHQpKX19aWYodC5ob3ZlciYmIm9iamVjdCI9PXR5cGVvZiB0LmhvdmVyKXtjb25zdCBlPXQuaG92ZXI7aWYobykkbG9nKGwsImNsYXNzIGFscmVhZHkgZXhpc3QiKTtlbHNle2NvbnN0IHQ9W107Zm9yKGxldCBpIGluIGUpe2NvbnN0IG49Y3NzLlByb3BlcnR5TWFwcGluZ1tpXXx8aTt0LnB1c2goYCR7bn06ICR7Y3NzLnRyYW5zVmFsdWUoZVtpXSl9O2ApfWlmKHQuam9pbigiICIpLmxlbmd0aD4wKXtjb25zdCBlPWAuJHtsfSB7ICR7dC5qb2luKCIgIil9IH1gO2EuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoZSkpfX19dC5vbmNsaWNrJiYic3RyaW5nIj09dHlwZW9mIHQub25jbGljayYmJGxvZygib25jbGljayBzdHlsZSIsdC5vbmNsaWNrKX19Y3NzLlByb3BlcnR5TWFwcGluZz17Ymc6ImJhY2tncm91bmQiLGJnQ2xyOiJiYWNrZ3JvdW5kLWNvbG9yIixiZ0ltZzoiYmFja2dyb3VuZC1pbWFnZSIsZm9udFc6ImZvbnQtd2VpZ2h0Iixmb250UzoiZm9udC1zaXplIn0sY3NzLlZhbHVlTWFwcGluZz17dHJhbnM6InRyYW5zcGFyZW50In0sY3NzLnRyYW5zVmFsdWU9ZT0+e2NvbnN0IHQ9ZS5zcGxpdCgiLCIpO2ZvcihsZXQgZT0wO2U8dC5sZW5ndGg7ZSsrKXtjb25zdCBpPXRbZV0udHJpbSgpLG49Y3NzLlZhbHVlTWFwcGluZ1tpXTtuJiYodFtlXT1uKX1yZXR1cm4gdC5qb2luKCIsICIpfSxjcmVhdGVTdHlsZSgidGVzdENsYXNzIix7Y29sb3I6InllbGxvd2dyZWVuIixob3Zlcjp7Y29sb3I6InJlZCJ9fSksY3JlYXRlU3R5bGUoImhyQ2xhc3MiLHtub3JtYWw6ImJvcmRlci10b3A6IDFweCBzb2xpZCB2YXIoLS1jLWhyKTsgYm9yZGVyLXJpZ2h0OiAwcHg7IGJvcmRlci1ib3R0b206IDBweDsgYm9yZGVyLWxlZnQ6IDBweDsgYm9yZGVyLWltYWdlOiBpbml0aWFsOyBvcGFjaXR5OiAwLjI7IHBhZGRpbmctdG9wOiAwcHg7IHBhZGRpbmctYm90dG9tOiAwcHg7Iixob3Zlcjoib3BhY2l0eToxLjA7In0sITApLGNyZWF0ZVN0eWxlKCJoZWFkZXJDbHMiLHtub3JtYWw6ImRpc3BsYXk6IGdyaWQ7XG5ncmlkLWF1dG8tZmxvdzogY29sdW1uO1xuZ2FwOiA1cHg7XG53aWR0aDogZml0LWNvbnRlbnQ7XG5tYXJnaW46IDVweDtcbm1hcmdpbi10b3A6IDE1cHg7XG5tYXJnaW4tYm90dG9tOiAyMHB4O1xuYm94LXNoYWRvdzogMCAwcHggI2ZmZmZmZiwgMCAwIDEzcHggcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjE5Mik7XG5ib3JkZXItcmFkaXVzOiA1cHg7XG5wbGFjZS1pdGVtczogY2VudGVyO1xuY29sb3I6IHZhcigtLWMtdGV4dCk7XG5iYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1jLWNvbnRyb2xzKTtcbmJvcmRlcjoxcHggc29saWQgcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjE5MikifSwhMCksY3JlYXRlU3R5bGUoImNlbnRlcmVkRGl2Iix7ZGlzcGxheToiZmxleCIsImp1c3RpZnktY29udGVudCI6InNwYWNlLWV2ZW5seSJ9KTtjb25zdCBjU3R5bGVzPXtzbGlkZXJzOnt0dGlwczp7Y29sb3I6IndoaXRlIn0sdGl0bGV6Ontjb2xvcjoid2hpdGUifSxiZ3o6e2NvbG9yOiJ3aGl0ZSJ9fSxkbGdUaXRsZXM6e3N0Ont0ZXh0QWxpZ246ImNlbnRlciIsdGV4dERlY29yYXRpb246InVuZGVybGluZSIsZm9udFNpemU6IjE4cHgiLG1hcmdpbkJvdHRvbToiMTBweCIsbWFyZ2luVG9wOiIwcHgiLGNvbG9yOiJ3aGl0ZSJ9fSxzdWJ0aXRsZXM6e2ZvbnRTaXplOiIxOHB4Iixmb250V2VpZ2h0OiJib2xkIixtYXJnaW5MZWZ0OiIyMHB4IixkaXNwbGF5OiJpbmxpbmUtZmxleCJ9LGJnU2xpZGVyczoicmdiYSgyNTUsIDI1NSwgMjU1LCAwLjIxNCkifSxyb2xlY2xyPXtub3JtYWw6IiM2MDYwNjAiLHByZW1pdW06IiM4YmIwZmYiLGNoYWQ6IiNmZmU1OGIiLEdPRDoiI2YxNGMzOSIsUEFQSToiI2NlOThlMiJ9O2NEYSgiYm9keSIse2lkOiJSIixjbHM6ImhlYWRlciIsZm46ZT0+e2NEYShlLmlkLHtpZDoiZGFIZWFkZXIiLGNsczoiaGVhZGVyQ2xzIixmbjplPT57bGV0IHQ9ZS5pZDtsaUVsbSh0LCJ0aXRsZUlkIiwiZm9udC13ZWlnaHQ6IGJvbGQ7cGFkZGluZy1sZWZ0OjEwcHg7IiksZEJhbGwodCksbGlFbG0odCwicHJvZHVjdElkIiksZEJhbGwodCksbGlFbG0odCwidXNlckRheXMiLCJmb250LXdlaWdodDogYm9sZDt3aWR0aDogbWF4LWNvbnRlbnQ7IiksZEJhbGwodCksY0NvbWJvQm94NCh0LCJ0aGVtZVNlbGVjdCIse3N0OiJtYXJnaW46MTBweDt3aWR0aDogNjBweDttaW4td2lkdGg6IDYwcHg7IixvcHRzRW51bTohMCxvcHRzOlsiZGFyayIsIndoaXRlIiwicHVycGxlIiwibWFyaW5lIiwicGluayIsImdvbGQiLCJyZWQiXSxmblNwYXduOmU9PntlLmFkZEV2ZW50TGlzdGVuZXIoImNoYW5nZSIsKCgpPT57Y1RoZW1lKCl9KSl9fSksY0J0bih0LCJyIiwiZmEgZmEtcmVmcmVzaCIsKCgpPT57bFNlcnZlcigpfSksInJlZnJlc2ggcGFnZSBzZXR0aW5ncyIse21hcmdpblJpZ2h0OiIxMHB4In0pfX0pfX0pLGNEYSgiYm9keSIse2lkOiJSIixjbHM6ImNvbnRlbnQiLHN0OiJkaXNwbGF5OiBmbGV4O3BsYWNlLWl0ZW1zOiBmbGV4LXN0YXJ0O2p1c3RpZnktY29udGVudDogY2VudGVyOyIsZm46ZT0+e2NEYShlLmlkLHtpZDoibGVmdF9wYW5lbCIsY2xzOiJwYW5lbF9zdHlsZSIsc3Q6InRyYW5zaXRpb246IGFsbCAwLjVzIGVhc2U7bWFyZ2luLXJpZ2h0OiAxNXB4OyIsZm46ZT0+e2xldCB0PWUuaWQ7Y0RhKHQse2lkOiJlbGVtZW50X2xlZnRfYnV0dG9ucyIsY2xzOiJ0YWJzIn0pLGNEYSh0LHtpZDoicGFuZWxfY2hhdCIsY2xzOiJwYW5lbF9yaWdodF9zdHlsZSIsc3Q6ImRpc3BsYXk6ZmxleDsifSl9fSksY0RhKGUuaWQse2lkOiJtX3RfbGVmdF9wYW5lbCIsc3Q6ImRpc3BsYXk6bm9uZTsiLGZuOmU9PntjQnRuKGUuaWQsInIiLCJmYSBmYS1ob21lIiwoKCk9Pnt0UGFuZWwoImxlZnRfcGFuZWwiKX0pLCJob21lIHBhbmVsIil9fSksY0RhKGUuaWQse2lkOiJjZW50ZXJfcGFuZWwiLGNsczoicGFuZWxfc3R5bGUiLGZuOmU9PntsZXQgdD1lLmlkO2NEYSh0LHtpZDoiUiIsc3Q6IndpZHRoOiA0MTVweDsiLGZuOmU9PntjRGEoZS5pZCx7aWQ6ImVsZW1lbnRfYnV0dG9ucyIsY2xzOiJ0YWJzIixzdDoiZGlzcGxheTpub25lOyJ9KSxjRGEoZS5pZCx7dHlwZToiaDIiLGlkOiJ3YWl0aW5nX2dhbWUiLHN0OiJ0ZXh0LWFsaWduOiBjZW50ZXI7cGFkZGluZy10b3A6MTVweDsifSl9fSksY0RhKHQse2lkOiJlbGVtZW50X21haW4iLHN0OiJkaXNwbGF5Om5vbmU7IixjbHM6ImVsZW1lbnR6IixmbjplPT57Y0JyKGUuaWQpLGNEYShlLmlkLHtpZDoibWFpbl9lbGVtZW50cyIsY2xzOiJidXR0b25zIixmbjplPT57Y0RhKGUuaWQse2lkOiJyIixzdDoiZGlzcGxheTogZmxleDsganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0OyBtYXJnaW4tcmlnaHQ6IDE1cHg7IixmbjplPT57Y0RhKGUuaWQse2lkOiJyIixzdDoibWFyZ2luLXJpZ2h0OiBhdXRvOyIsZm46ZT0+e2NCdG4oZS5pZCwiciIsImZhIGZhLWNvbW1lbnRpbmciLCgoKT0+e3RQYW5lbCgibGVmdF9wYW5lbCIpfSksImhvbWUgcGFuZWwiKX19KSxjRGEoZS5pZCx7aWQ6InIiLHN0OiJtYXJnaW4tbGVmdDogYXV0bzsiLGZuOmU9PntjQnRuKGUuaWQsInIiLCJmYSBmYS1lbGxpcHNpcy1oIiwoKCk9Pnt0UGFuZWwoKX0pLCJwcm9maWxlIHBhbmVsIil9fSl9fSksY0hyKGUuaWQpfX0pfX0pLGNEYSh0LHtpZDoiZWxlbWVudF9rZXlzIixzdDoiZGlzcGxheTpub25lO3dpZHRoOiA0MTVweDsiLGNsczoiZWxlbWVudHoiLGZuOmU9PntjQnIoZS5pZCksY0RhKGUuaWQse2lkOiJrZXlzX2VsZW1lbnRzIixjbHM6ImJ1dHRvbnMifSl9fSksY0RhKHQse2lkOiJlbGVtZW50X292ZXJsYXkiLHN0OiJkaXNwbGF5Om5vbmU7d2lkdGg6IDQxNXB4OyIsY2xzOiJlbGVtZW50eiIsZm46ZT0+e2NCcihlLmlkKSxjRGEoZS5pZCx7aWQ6Im92ZXJsYXlfZWxlbWVudHMiLGNsczoiYnV0dG9ucyJ9KX19KSxjRGEodCx7aWQ6ImVsZW1lbnRfc2V0dGluZyIsc3Q6ImRpc3BsYXk6bm9uZTt3aWR0aDogNDE1cHg7IixjbHM6ImVsZW1lbnR6IixmbjplPT57Y0JyKGUuaWQpLGNEYShlLmlkLHtpZDoic2V0dGluZ19lbGVtZW50cyIsY2xzOiJidXR0b25zIixmbjplPT57Y0RhKGUuaWQse2lkOiJlbGVtZW50c19jZmdiIn0pLGNEYShlLmlkLHtpZDoiZWxlbWVudHNfY2ZnYSJ9KSxjQnRuKGUuaWQsInIiLCJTQVZFIiwoKCk9PntkbGcuc2hvdygiY29uZmlybV9zYXZlY2ZnIil9KSwiIix7d2lkdGg6IjM4MHB4In0pLGNCdG4oZS5pZCwiciIsIkxPQUQiLCgoKT0+e2RsZy5zaG93KCJjb25maXJtX2xvYWRjZmciKX0pLCIiLHt3aWR0aDoiMzgwcHgifSksY0JyKGUuaWQpLGNCdG4oZS5pZCwiciIsIkVYUE9SVCIsKCgpPT57ZGxnLnNob3coImNvbmZpcm1fZXhwb3J0Y2ZnIil9KSwiIix7d2lkdGg6IjM4MHB4In0pLGNCdG4oZS5pZCwiciIsIklNUE9SVCIsKCgpPT57ZGxnLnNob3coImNvbmZpcm1faW1wb3J0Y2ZnIil9KSwiIix7d2lkdGg6IjM4MHB4In0pLGNIcihlLmlkKSxjQnRuKGUuaWQsInIiLCI8Yj5FWElUPC9iPiIsKCgpPT57ZGxnLnNob3coImNvbmZpcm1fZXhpdCIpfSksIiIse3dpZHRoOiIzODBweCJ9KX19KX19KSxjRGEodCx7aWQ6ImVsZW1lbnRfcXJjb2RlIixzdDoiZGlzcGxheTpub25lO3dpZHRoOiAxMDAlOyIsY2xzOiJlbGVtZW50eiIsZm46ZT0+e2NCcihlLmlkKSxjRGEoZS5pZCx7aWQ6IlIiLGNsczoiYnV0dG9ucyIsZm46ZT0+e2NEYShlLmlkLHtpZDoicXJpbWFnZXNoaXQiLHN0OiJtYXJnaW4tbGVmdDogLTIwcHg7ZGlzcGxheTogZ3JpZDtwbGFjZS1pdGVtczogY2VudGVyOyIsZm46ZT0+e2NEYShlLmlkLHt0eXBlOiJoMiIsaWQ6InFyY29kZV90ZXh0IixjbHM6ImNvbnRlbnQtbG9nbyIsc3Q6InBhZGRpbmctdG9wOjBweDttYXJnaW4tbGVmdDowcHg7dGV4dC1hbGlnbjpjZW50ZXI7In0pLGNEYShlLmlkLHt0eXBlOiJpbWciLGlkOiJxcmltYWdlIixjbHM6WyJxci1jb2RlIiwiaW1nLXRodW1ibmFpbCIsImltZy1yZXNwb25zaXZlIl0sZWw6e3NyYzoiaHR0cHM6Ly9jaGFydC5nb29nbGVhcGlzLmNvbS9jaGFydD9jaHQ9cXImY2hsPWh0dHBzOi8vZ29vZ2xlLmNvbSZjaHM9MjQweDI0MCZjaGxkPUx8MCJ9fSl9fSl9fSl9fSksY0RhKHQse2lkOiJlbGVtZW50X2NvbmZpZyIsc3Q6Im1hcmdpbi10b3A6MjBweDsifSl9fSksY0RhKGUuaWQse2lkOiJtX3RfcmlnaHRfcGFuZWwiLHN0OiJkaXNwbGF5Om5vbmU7IixmbjplPT57Y0J0bihlLmlkLCJyIiwiZmEgZmEtaG9tZSIsKCgpPT57dFBhbmVsKCl9KSwiaG9tZSBwYW5lbCIpfX0pLGNEYShlLmlkLHtpZDoicmlnaHRfcGFuZWwiLGNsczoicGFuZWxfc3R5bGUiLHN0OiJ0cmFuc2l0aW9uOiBhbGwgMC41cyBlYXNlO21hcmdpbi1sZWZ0OiAxNXB4OyIsZm46ZT0+e2xldCB0PWUuaWQ7Y0RhKHQse2lkOiJlbGVtZW50X3JpZ2h0X2J1dHRvbnMiLGNsczoidGFicyJ9KSxjRGEodCx7aWQ6InBhbmVsX3VwZGF0ZXMiLGNsczoicGFuZWxfcmlnaHRfc3R5bGUiLHN0OiJkaXNwbGF5OmZsZXg7IixmbjplPT57Y0RhKGUuaWQse3R5cGU6InAiLGlkOiJsYXN0X3VwZGF0ZSIsc3Q6InRleHQtYWxpZ246IGNlbnRlcjttYXJnaW4tdG9wOiAwcHg7In0pLGNEYShlLmlkLHt0eXBlOiJwIixpZDoiY2hhbmdlbG9ncyIsc3Q6InRleHQtYWxpZ246IGNlbnRlcjttYXJnaW4tdG9wOiAwcHg7In0pfX0pLGNEYSh0LHtpZDoicGFuZWxfdGlja2V0cyIsY2xzOiJwYW5lbF9yaWdodF9zdHlsZSIsc3Q6ImRpc3BsYXk6bm9uZTsifSksY0RhKHQse2lkOiJwYW5lbF9wcm9maWxlcyIsY2xzOiJwYW5lbF9yaWdodF9zdHlsZSIsc3Q6ImRpc3BsYXk6bm9uZTsifSl9fSksY0RhKGUuaWQse3R5cGU6ImF1ZGlvIixpZDoic25kMSIsZWw6e3NyYzoiaHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL0NvbGFDYXByaWNob3NhL0ZQV0xSL2J1YmJsZS53YXYiLGFsbG93OiJhdXRvcGxheSJ9fSl9fSksY0RhKCJib2R5Iix7aWQ6Im5vdGlmaWNhdGlvbi1jb250YWluZXIifSk7bGV0IHRoZW1lU2VsZWN0ZWQ9JExTLmdldCgidGhlbWVTZWxlY3QiKXx8MDskaWQoInRoZW1lU2VsZWN0IikudmFsdWU9dGhlbWVTZWxlY3RlZCwkaWQoInRoZW1lU2VsZWN0IikuZGlzcGF0Y2hFdmVudChuZXcgRXZlbnQoImNoYW5nZSIpKTtjb25zdCB0b29sdGlwPSRlbG0oImRpdiIpO2Z1bmN0aW9uIHNMb2FkaW5nKGUsdCl7Y0xvYWRpbmcoZSx0LHtkaXNwbGF5OiJibG9jayJ9KSxzZXRWaXModCwiYmxvY2siKX1hc3luYyBmdW5jdGlvbiBoTG9hZGluZyhlLHQ9MTAwKXtzZXRUaW1lb3V0KChhc3luYygpPT57c2V0VmlzKGUsIm5vbmUiKX0pLHQpfWZ1bmN0aW9uIGxpRWxtKGUsdCxpPW51bGwpe2NEYShlLHt0eXBlOiJsaSIsaWQ6dCxjbHM6ImhlYWRlci10aXRsZSIsc3Q6aX0pfWZ1bmN0aW9uIGRCYWxsKGUpe2NEYShlLHtpZDoiTiIsY2xzOiJiYWxsIn0pfXRvb2x0aXAuY2xhc3NMaXN0LmFkZCgidG9vbHRpcCIpLGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQodG9vbHRpcCksZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcigibW91c2VvdmVyIiwoZT0+e2NvbnN0IHQ9ZS50YXJnZXQ7aWYoIXQpcmV0dXJuO2NvbnN0IGk9dC5nZXRBdHRyaWJ1dGUoInR0aXAiKTtpZihpKXtsZXQgZT1udWxsO2ZvcihsZXQgdD0wO3Q8dURsZ3MubGVuZ3RoO3QrKylpZihkbGcuY2hlY2sodURsZ3NbdF0pKXtlPXVEbGdzW3RdO2JyZWFrfWlmKG51bGwhPWUpe2NvbnN0IG49JGlkKGUrIl90dGlwIiksbD1ufHwkZWxtKCJkaXYiKTtufHwobC5jbGFzc0xpc3QuYWRkKCJ0b29sdGlwIiksbC5pZD1lKyJfdHRpcCIsJGlkKGUpLmFwcGVuZENoaWxkKGwpKSxsLmlubmVyVGV4dD1pLGwuc3R5bGUudG9wPXQub2Zmc2V0VG9wLWwub2Zmc2V0SGVpZ2h0LTEwKyJweCIsbC5zdHlsZS5sZWZ0PXQub2Zmc2V0TGVmdCsodC5vZmZzZXRXaWR0aC1sLm9mZnNldFdpZHRoKS8yKyJweCIsbC5jbGFzc0xpc3QuYWRkKCJ0b29sdGlwLS12aXNpYmxlIil9ZWxzZSBpZih0b29sdGlwLmlubmVyVGV4dD1pLG51bGwhPXQub2Zmc2V0UGFyZW50KXtjb25zdCBlPXQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCksaT10b29sdGlwLm9mZnNldEhlaWdodCxuPWUudG9wK3dpbmRvdy5zY3JvbGxZLWktMTArInB4IixsPWUubGVmdCsoZS53aWR0aC10b29sdGlwLm9mZnNldFdpZHRoKS8yKyJweCI7dG9vbHRpcC5zdHlsZS50b3A9bix0b29sdGlwLnN0eWxlLmxlZnQ9bCx0b29sdGlwLmNsYXNzTGlzdC5hZGQoInRvb2x0aXAtLXZpc2libGUiKX19ZWxzZXtsZXQgZT10LnBhcmVudEVsZW1lbnQ7Zm9yKDtlOyl7Y29uc3QgdD1lLmdldEF0dHJpYnV0ZSgidHRpcCIpO2lmKHQpe2xldCBpPW51bGw7Zm9yKGxldCBlPTA7ZTx1RGxncy5sZW5ndGg7ZSsrKWlmKGRsZy5jaGVjayh1RGxnc1tlXSkpe2k9dURsZ3NbZV07YnJlYWt9aWYobnVsbCE9aSl7Y29uc3Qgbj0kaWQoaSsiX3R0aXAiKSxsPW58fCRlbG0oImRpdiIpO258fChsLmNsYXNzTGlzdC5hZGQoInRvb2x0aXAiKSxsLmlkPWkrIl90dGlwIiwkaWQoaSkuYXBwZW5kQ2hpbGQobCkpLGwuaW5uZXJUZXh0PXQsbC5zdHlsZS50b3A9ZS5vZmZzZXRUb3AtbC5vZmZzZXRIZWlnaHQtMTArInB4IixsLnN0eWxlLmxlZnQ9ZS5vZmZzZXRMZWZ0KyhlLm9mZnNldFdpZHRoLWwub2Zmc2V0V2lkdGgpLzIrInB4IixsLmNsYXNzTGlzdC5hZGQoInRvb2x0aXAtLXZpc2libGUiKX1lbHNlIGlmKHRvb2x0aXAuaW5uZXJUZXh0PXQsbnVsbCE9ZS5vZmZzZXRQYXJlbnQpe2NvbnN0IHQ9ZS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKSxpPXRvb2x0aXAub2Zmc2V0SGVpZ2h0LG49dC50b3Ard2luZG93LnNjcm9sbFktaS0xMCsicHgiLGw9dC5sZWZ0Kyh0LndpZHRoLXRvb2x0aXAub2Zmc2V0V2lkdGgpLzIrInB4Ijt0b29sdGlwLnN0eWxlLnRvcD1uLHRvb2x0aXAuc3R5bGUubGVmdD1sLHRvb2x0aXAuY2xhc3NMaXN0LmFkZCgidG9vbHRpcC0tdmlzaWJsZSIpfWJyZWFrfWU9ZS5wYXJlbnRFbGVtZW50fX19KSksZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcigibW91c2VvdXQiLChlPT57aWYoZS50YXJnZXQuZ2V0QXR0cmlidXRlKCJ0dGlwIikpe2xldCBlPW51bGw7Zm9yKGxldCB0PTA7dDx1RGxncy5sZW5ndGg7dCsrKWRsZy5jaGVjayh1RGxnc1t0XSkmJihlPXVEbGdzW3RdKTtpZihudWxsIT1lKXtjb25zdCB0PSRpZChlKyJfdHRpcCIpO3Q/KHQuaW5uZXJUZXh0PSItIi50cmltKCksdC5jbGFzc0xpc3QucmVtb3ZlKCJ0b29sdGlwLS12aXNpYmxlIikpOih0b29sdGlwLmlubmVyVGV4dD0iLSIudHJpbSgpLHRvb2x0aXAuY2xhc3NMaXN0LnJlbW92ZSgidG9vbHRpcC0tdmlzaWJsZSIpKX1lbHNlIHRvb2x0aXAuaW5uZXJUZXh0PSItIi50cmltKCksdG9vbHRpcC5jbGFzc0xpc3QucmVtb3ZlKCJ0b29sdGlwLS12aXNpYmxlIil9fSkpLHBJZD0iZ2xvYmFsQ2hhdCI7Y29uc3QgZGl2Q2VudGVyPShlLHQpPT57Y0RhKGUse2lkOiJSIixmbjplPT57dChlKX0sY2xzOiJjZW50ZXJlZERpdiJ9KX07ZnVuY3Rpb24gc2VuZENoYXQoKXtpZihjVXNlckFsaWFzKXtpZihpc1ZpcygibGVmdF9wYW5lbCIpJiZpc1ZpcygiZ2xvYmFsQ2hhdCIpKWlmKGNUeHRWYWxpZCgiY2hhdF90ZXh0Iikpe3puQnRuKCJzZW5kX2NoYXQiLCRpZCgiY2hhdF90ZXh0IikudmFsdWUpLnRoZW4oKGFzeW5jIGU9Pntub3RpZnkoZS5yZXBsYWNlKC9fL2csIiAiKSw3ZTMpLGUuaW5jbHVkZXMoImRvbmUiKSYmKGF3YWl0ICRtLnc4KDM1MCksdUNoYXQoKSwkaWQoImNoYXRfdGV4dCIpLnZhbHVlPSIiKX0pKS5jYXRjaCgoZT0+eyRsb2coZSksJGlkKCJjaGF0X3RleHQiKS52YWx1ZT0iIn0pKX1lbHNlIG5vdGlmeSgiTm8gc2UgYWNlcHRhbiBjYXJhY3RlcmVzIGVzcGVjaWFsZXMsIGRlIDEgYSA2NCBjYXJhY3RlcmVzIHNvbGFtZW50ZS4iLDVlMywiUkVEIil9ZWxzZSBub3RpZnkoImRpc2FibGVkIHRvIGRlZmF1bHQgdXNlcnMiLDdlMyl9ZnVuY3Rpb24gb25DbGlja0NoYXRMaXN0KGUsdD0hMCxpPW51bGwpe2xVc2VyU2VsZWN0ZWRDaGF0PWUsbFVTQ0NyZWF0ZWQ9dCxsVVNDRGF0ZT1pLHVQcml2Q2hhdCgpLCRjbGljaygiYnRuQ2hhdEN1cnJlbnRUYWIiKX1mdW5jdGlvbiBnT25saW5lcygpe2NVc2VyQWxpYXMmJmlzVmlzKCJsZWZ0X3BhbmVsIikmJmlzVmlzKCJnbG9iYWxDaGF0IikmJnpuR2V0KCJvbmxpbmVzIiwienoiKS50aGVuKChlPT57dHJ5e2NvbnN0IHQ9SlNPTi5wYXJzZShlKTskaWQoInVzZXJzb25saW5lIikuaW5uZXJIVE1MPSI8cCB0dGlwPSd0b3RhbDogIit0LmFsbF9vbmxpbmVzKyInIHN0eWxlPSdmb250LXdlaWdodDpib2xkO2ZvbnQtc2l6ZToxNHB4O21hcmdpbi1ib3R0b206MHB4O21hcmdpbi10b3A6MHB4Oyc+b25saW5lcyAoIit0LmxpdmUubGVuZ3RoKyIpPC9wPjxicj4iK3QubGl2ZS5qb2luKCIsICIpfWNhdGNoKHQpeyRsb2codCxlKX19KSkuY2F0Y2goKGU9PnskbG9nKGUpfSkpfWZ1bmN0aW9uIHBTbmQoZSl7aWYoMD09ZlNuZClmU25kKys7ZWxzZXtjb25zdCB0PSRpZChlKTt0LnZvbHVtZT0uMSx0LnBsYXkoKX19ZnVuY3Rpb24gaXNWaXMoZSl7cmV0dXJuICRpZChlKT8kaWQoZSkuc3R5bGUuZGlzcGxheSYmIm5vbmUiIT0kaWQoZSkuc3R5bGUuZGlzcGxheTooJGxvZyhlLCJkb2VzbnQgZXhpc3QiKSwhMSl9ZnVuY3Rpb24gc2V0VmlzKGUsdD0iYmxvY2siKXsoQXJyYXkuaXNBcnJheShlKT9lOltlXSkuZm9yRWFjaCgoZT0+e2NvbnN0IGk9JGlkKGUpO2kmJihpLnN0eWxlLmRpc3BsYXk9dCl9KSl9ZnVuY3Rpb24gc2Nyb2xsVG9Cb3R0b20oZSl7Y29uc3QgdD0kaWQoZSk7dC5zY3JvbGxUb3A9dC5zY3JvbGxIZWlnaHR9ZnVuY3Rpb24gdVByaXZDaGF0KCl7aWYoIWNVc2VyQWxpYXMpcmV0dXJuIHZvaWQgbm90aWZ5KCJwcml2YXRlIGNoYXQgZGlzYWJsZWQgdG8gZGVmYXVsdCB1c2VycyIsN2UzKTtpZighaXNWaXMoImxlZnRfcGFuZWwiKXx8IWlzVmlzKCJwcml2YXRlQ2hhdCIpfHwhaXNWaXMoImN1cnJlbnRDaGF0VGFiIikpcmV0dXJuO2lmKCFsVXNlclNlbGVjdGVkQ2hhdHx8IWxVU0NEYXRlKXJldHVybiB2b2lkICRsb2coImZhaWxlZCB0byBnZXQgY2hhdCIsbFVzZXJTZWxlY3RlZENoYXQsbFVTQ0RhdGUpO2xldCBlPSJwcml2Q2hhdENudHIiLHQ9bFVzZXJTZWxlY3RlZENoYXQ7dCs9bFVTQ0NyZWF0ZWQ/Ii0xIjoiLTAiLHQrPSItIitsVVNDRGF0ZSwkbG9nKCJ3b3JraW5nIiksem5HZXQoImNoYXRfZGF0YSIsdCkudGhlbigoaT0+e2xldCBuPUpTT04ucGFyc2UoaSksbD1bXTtuLlpJTkM9W3t0czoiMjE0NzExMzY0NyIsbXNnOndpbmRvdy5idG9hKCJDaGF0IHYwLjEsIHlvdSBtYXkgZXhjZXB0IGVycm9ycy4iKSxyOiJjaGFkIixwaW46ITF9XTtmb3IobGV0IGUgaW4gbilsPWwuY29uY2F0KG5bZV0ubWFwKCh0PT4oe3VzZXI6ZSwuLi50fSkpKSk7bC5zb3J0KCgoZSx0KT0+ZS50cy10LnRzKSksc2V0VmlzKFtlLCJjaGF0VXNlclRleHQiXSksc2V0VmlzKCJjaGF0VXNlckJ0bnMiLCJmbGV4IiksJGlkKCJjaGF0VXNlclRpdGxlIikuaW5uZXJIVE1MPXQuc3BsaXQoIi0iKVswXSsiJ3MgY2hhdCB8ICIrbFVTQ0RhdGUucmVwbGFjZSgvbi9nLCIgLSAiKTtjb25zdCBhPSRpZChlKTthLmlubmVySFRNTD0iIjtsZXQgcz0wO2wuZm9yRWFjaCgoYXN5bmMgdD0+e2lmKG51bGwhPXQudXNlcil7czx0LnRzJiZ0LnRzPCIyMTQ3MTEzNjQ2IiYmKHM9dC50cyk7Y29uc3QgaT0kZWxtKCJkaXYiKTtpLnN0eWxlLmZvbnRTaXplPSIxMnB4IjtsZXQgbj1sVXNlclNlbGVjdGVkQ2hhdCE9dC51c2VyP3JvbGVjbHJbdC5yXXx8T2JqZWN0LmVudHJpZXMocm9sZWNscilbNF1bMV06InZhcigtLWMtcHJpbWFyeSkiO2kuaW5uZXJIVE1MPWAoPHNwYW4gdHRpcD0nJHskdGltZS5zdHIodC50cywwKX0nIHN0eWxlPSJvcGFjaXR5OiAwLjU7Ij4keyR0aW1lLnN0cih0LnRzKX08L3NwYW4+KSA8c3BhbiBzdHlsZT0nY29sb3I6JHtufTsnPjxiPjx1PiR7dC51c2VyfTwvdT48L2I+PC9zcGFuPjxzcGFuIHN0eWxlPSdjb2xvcjp3aGl0ZTsnPjogJHt3aW5kb3cuYXRvYih0Lm1zZyl9PC9zcGFuPmAsYS5hcHBlbmRDaGlsZChpKSxjSHIoZSwhMSl9fSkpLGxNc2dQcml2IT1zJiYocFNuZCgic25kMSIpLGxNc2dQcml2PXMpLHNjcm9sbFRvQm90dG9tKGUpfSkpLmNhdGNoKChlPT57JGxvZyhlKX0pKX1mdW5jdGlvbiB1Q2hhdCgpe2lmKGlzVmlzKCJsZWZ0X3BhbmVsIikmJmlzVmlzKCJnbG9iYWxDaGF0Iikpe2lmKCFjVXNlckFsaWFzKXtjb25zdCBlPSRpZCgiY2hhdENvbnRhaW5lciIpO2UuaW5uZXJIVE1MPSIiO2NvbnN0IHQ9JGVsbSgiZGl2Iik7cmV0dXJuIHQuc3R5bGUuZm9udFNpemU9IjEycHgiLHQuaW5uZXJIVE1MPWAoPHNwYW4gdHRpcD0nJHskdGltZS5zdHIocGFyc2VJbnQoKG5ldyBEYXRlKS5nZXRUaW1lKCkvMWUzKSwwKX0nIHN0eWxlPSJvcGFjaXR5OiAwLjU7Ij4keyR0aW1lLnN0cihwYXJzZUludCgobmV3IERhdGUpLmdldFRpbWUoKS8xZTMpKX08L3NwYW4+KSA8c3BhbiBzdHlsZT0nJHsiY29sb3I6IitPYmplY3QuZW50cmllcyhyb2xlY2xyKVs0XVsxXSsiOyJ9Jz48Yj5aSU5DPC9iPjwvc3Bhbj46IGNoYXQgZGlzYWJsZWQgdG8gZGVmYXVsdCBhbGlhc2VzLCBjaGFuZ2UgeW91ciBhbGlhcyBpbiB0aGUgcmlnaHQgcGFuZWxgLHZvaWQgZS5hcHBlbmRDaGlsZCh0KX0kbG9nKCJ3b3JraW5nIiksem5HZXQoImdldF9jaGF0IiwieiIpLnRoZW4oKGU9Pntjb25zdCB0PUpTT04ucGFyc2UoZSksaT0kaWQoImNoYXRDb250YWluZXIiKTtpLmlubmVySFRNTD0iIjtsZXQgbj0wO3QuZm9yRWFjaCgoYXN5bmMgZT0+e2UubXNnLmluY2x1ZGVzKCJkaXNhYmxlZCIpfHxuPGUudHMmJihuPWUudHMpO2NvbnN0IHQ9JGVsbSgiZGl2Iik7dC5zdHlsZS5mb250U2l6ZT0iMTJweCIsZS5tc2cuaW5jbHVkZXMoImRpc2FibGVkIik/dC5pbm5lckhUTUw9YCg8c3BhbiB0dGlwPSckeyR0aW1lLnN0cihlLnRzLDApfScgc3R5bGU9Im9wYWNpdHk6IDAuNTsiPiR7JHRpbWUuc3RyKGUudHMpfTwvc3Bhbj4pIDxzcGFuIHN0eWxlPScke251bGwhPWUucj8iY29sb3I6IitPYmplY3QuZW50cmllcyhyb2xlY2xyKVtlLnJdWzFdKyI7IjoiIn0nPjxiPiR7ZS51fTwvYj48L3NwYW4+OiAke2UubXNnfWA6dC5pbm5lckhUTUw9YCg8c3BhbiB0dGlwPSckeyR0aW1lLnN0cihlLnRzLDApfScgc3R5bGU9Im9wYWNpdHk6IDAuNTsiPiR7JHRpbWUuc3RyKGUudHMpfTwvc3Bhbj4pIDxzcGFuIHN0eWxlPScke251bGwhPWUucj8iY29sb3I6IitPYmplY3QuZW50cmllcyhyb2xlY2xyKVtlLnJdWzFdKyI7IjoiIn0nPjxiPiR7ZS51fTwvYj48L3NwYW4+OiAke3dpbmRvdy5hdG9iKGUubXNnKX1gLGkuYXBwZW5kQ2hpbGQodCksY0hyKCJjaGF0Q29udGFpbmVyIiwhMSl9KSksbE1zZyE9biYmKHBTbmQoInNuZDEiKSxsTXNnPW4pfSkpLmNhdGNoKChlPT57JGxvZyhlKX0pKX19Y0RpdigibGVmdF9wYW5lbCIsImdsb2JhbENoYXQiLHtkaXNwbGF5OiJub25lIn0se2NsYXNzTmFtZToicGFuZWxfcmlnaHRfc3R5bGUifSksY0RpdigibGVmdF9wYW5lbCIsInNlYXJjaFVzZXIiLHtkaXNwbGF5OiJub25lIn0se2NsYXNzTmFtZToicGFuZWxfcmlnaHRfc3R5bGUifSwoZT0+e2NCdG4oZS5pZCwiciIsInNlYXJjaCIsKCgpPT57ZGxnLnNob3coImZpbmR1c2VyZGxnIil9KSwiQnVzY2EgdW4gdXN1YXJpby4iLHtqdXN0aWZ5U2VsZjoiY2VudGVyIn0pLGNCcihlLmlkKSxkbGcuY3JlYXRlKGUuaWQsImZpbmR1c2VyZGxnIix7Zm5jOmU9PntjVGV4dChlLmlkLCJyIiwic2VhcmNoZXJpbm8iLGNTdHlsZXMuZGxnVGl0bGVzKSxjQnIoZS5pZCksY1R4dGJveChlLmlkLCJmaW5kX3VzZXIiLCExLCIiLCIiLHt9LHtwYXR0ZXJuOiJeW2EtekEtWjAtOV0qJCIsbWluTGVuZ3RoOjMsbWF4TGVuZ3RoOjIwLHJlcXVpcmVkOiEwLHBsYWNlaG9sZGVyOiJhbGlhcyIsZXZlbnRMaXN0ZW5lcjp7a2V5ZG93bjooZSx0KT0+eyJFbnRlciI9PT10LmtleSYmJGNsaWNrKCJidG5fZmluZF91c2VyIil9fX0sITApLGNCdG4oZS5pZCwiYnRuX2ZpbmRfdXNlciIsIjxpIGNsYXNzPSdmYSBmYS1zZWFyY2gnIGFyaWEtaGlkZGVuPSd0cnVlJz48L2k+IGZpbmQiLCgoKT0+e2NUeHRWYWxpZCgiZmluZF91c2VyIiwhMCk/ZlVzZXJDZD4kdGltZS5pbnQoKT9ub3RpZnkoInJlY2VudGx5IHVzZWQsIHdhaXQgIisoZlVzZXJDZC0kdGltZS5pbnQoKSkrIiBzZWNvbmRzIiw3ZTMpOihzZXRWaXMoImxvYWRpbmdhdmF0YXIyIiksem5HZXQoImluZm9fYWxpYXMiLCRpZCgiZmluZF91c2VyIikudmFsdWUpLnRoZW4oKHQ9Pnt0cnl7bGV0IGk9SlNPTi5wYXJzZSh0KTtpLmF2YXRhciYmKCRpZCgidXNlcl9hdnRyIikuc3JjPXdpbmRvdy5hdG9iKGkuYXZhdGFyKSk7bGV0IG49IiI7bis9IjxwIHN0eWxlPSdtYXJnaW4tdG9wOjBweDttYXJnaW4tYm90dG9tOjBweDsnPjxiPkAiK2kuYWxpYXMsaS5yb2xlJiYobis9IjxzcGFuIHN0eWxlPSdkaXNwbGF5OmlubGluZTtmb250LXNpemU6MTBweDtjb2xvcjoiK3JvbGVjbHJbaS5yb2xlLnRvTG93ZXJDYXNlKCldKyI7Jz4gKCIraS5yb2xlKyIpPC9zcGFuPjxicj48L2I+PC9wPiIpLGkudXNlcl9pZD9uKz0iPHAgc3R5bGU9J2ZvbnQtc2l6ZToxMHB4O21hcmdpbi10b3A6MHB4Oyc+dWlkOiAiK2kudXNlcl9pZDpuKz0iPHAgc3R5bGU9J2ZvbnQtc2l6ZToxMHB4O21hcmdpbi10b3A6MHB4Oyc+YmV0YSIsaS5yZWdpc3Rlcl90aW1lP24rPSIgLSBqb2luZWQ6ICIrJHRpbWUuc3RyKGkucmVnaXN0ZXJfdGltZSwwKSsiPC9wPiI6bis9IjwvcD4iLGkuZGVzY3JpcHRpb24/bis9IjxwIHN0eWxlPSdmb250LXNpemU6MTJweDttYXJnaW4tdG9wOiAwcHg7Jz5pbmZvOiAiK3dpbmRvdy5hdG9iKGkuZGVzY3JpcHRpb24pKyI8L3A+IjpuKz0iPHAgc3R5bGU9J2ZvbnQtc2l6ZToxMnB4O21hcmdpbi10b3A6IDBweDsnPihubyBpbmZvIHlldCk8L3A+IiwkaWQoInVzZXJfaW5mIikuaW5uZXJIVE1MPW4saExvYWRpbmcoImxvYWRpbmdhdmF0YXIyIiksY0J0bigidXNlcl9pbmYiLCJidG5DaGF0U2VsVXNlciIsIjxpIGNsYXNzPSdmYSBmYS1lbnZlbG9wZScgYXJpYS1oaWRkZW49J3RydWUnPjwvaT4gPGI+UE08L2I+IiwoKCk9Pnt6bkdldCgiY3JlYXRlX2NoYXQiLCRpZCgiZmluZF91c2VyIikudmFsdWUpLnRoZW4oKHQ9PnskbG9nKHQpLG5vdGlmeSh0LnJlcGxhY2UoL18vZywiICIpLDdlMyksZGxnLmNsb3NlKGUuaWQpLCRjbGljaygiYnRuQ2hhdExpc3QiKSwkY2xpY2soInByaXZhdGVDaGF0QnRuIil9KSkuY2F0Y2goKGU9PiRsb2coZSkpKX0pLCIiLHt3aWR0aDoiODBweCJ9KX1jYXRjaChlKXtub3RpZnkodC5yZXBsYWNlKC9fL2csIiAiKSw3ZTMpLHQuaW5jbHVkZXMoInJlY2VudGx5IikmJmZVc2VyQ2Q8JHRpbWUuaW50KCkmJihmVXNlckNkPSR0aW1lLmludCgpKzMwKX19KSkuY2F0Y2goKGU9PnskbG9nKGUpfSkpKTpub3RpZnkoImludmFsaWQgaW5wdXQiKX0pLCIiLHttYXJnaW5MZWZ0OiIxMHB4IixtYXJnaW5SaWdodDoiMTBweCIsd2lkdGg6IjMwJSJ9KSxjSHIoZS5pZCwhMSx7d2lkdGg6IjIwMHB4In0pLGNEaXYoZS5pZCwidXNlcl9pbmZhbGlhcyIse2Rpc3BsYXk6ImlubGluZS1ncmlkIixncmlkVGVtcGxhdGVDb2x1bW5zOiJyZXBlYXQoMywgMTA1cHgpIixncmlkR2FwOiIxMHB4In0pLGNCcihlLmlkLDIpLGNMb2FkaW5nKCJ1c2VyX2luZmFsaWFzIiwibG9hZGluZ2F2YXRhcjIiLHtwb3NpdGlvbjoiYWJzb2x1dGUiLGRpc3BsYXk6Im5vbmUiLGxlZnQ6IjY0cHgiLHRvcDoiMTYxcHgifSksY0ltZygidXNlcl9pbmZhbGlhcyIsInVzZXJfYXZ0ciIsZEF2YXRhciw5MCw5MCx7bWFyZ2luTGVmdDoiMTBweCIsb2JqZWN0Rml0OiJjb3ZlciIsYm9yZGVyUmFkaXVzOiI1cHgiLHBsYWNlU2VsZjoibm9ybWFsIn0pLGNCcihlLmlkLDIpLGNUZXh0KCJ1c2VyX2luZmFsaWFzIiwidXNlcl9pbmYiLCJub25lIix7c3Q6e2Rpc3BsYXk6ImdyaWQiLGdyaWRUZW1wbGF0ZUNvbHVtbnM6IjE2MHB4IixtYXJnaW5Ub3A6IjBweCIsbWFyZ2luQm90dG9tOiIwcHgiLGNvbG9yOiJ3aGl0ZSJ9fSksZGxnLmNsb3NlQnRuKGUuaWQpfX0pfSkpLGNEaXYoImxlZnRfcGFuZWwiLCJwcml2YXRlQ2hhdCIse2Rpc3BsYXk6Im5vbmUifSx7Y2xhc3NOYW1lOiJwYW5lbF9yaWdodF9zdHlsZSJ9LChlPT57ZGl2Q2VudGVyKGUuaWQsKGU9PntjQnRuKGUuaWQsImJ0bkNoYXRDdXJyZW50VGFiIiwiY3VycmVudCBjaGF0IiwoKCk9PntzZXRWaXMoWyJjaGF0TGlzdFRhYiIsImN1cnJlbnRDaGF0VGFiIl0sIm5vbmUiKSxzZXRWaXMoImN1cnJlbnRDaGF0VGFiIiksdVByaXZDaGF0KCl9KSksY0J0bihlLmlkLCJidG5DaGF0VGFiTGlzdCIsImNoYXQgbGlzdCIsKCgpPT57c2V0VmlzKFsiY2hhdExpc3RUYWIiLCJjdXJyZW50Q2hhdFRhYiJdLCJub25lIiksc2V0VmlzKCJjaGF0TGlzdFRhYiIpLCRjbGljaygiYnRuQ2hhdExpc3QiKX0pLCIiLHttYXJnaW46IjVweCJ9KX0pKSxjSHIoZS5pZCwhMSx7d2lkdGg6IjIwMHB4In0pLGNEaXYoZS5pZCwiY2hhdExpc3RUYWIiLHtkaXNwbGF5OiJub25lIn0se30sKGU9PntjVGV4dChlLmlkLCJyIiwiJiM5Njc5OyBjaGF0IGxpc3QiLHtzdDpjU3R5bGVzLnN1YnRpdGxlcyxmbjplPT57Y1Rvb2x0aXAoZS5pZCwiLSBUbyBjcmVhdGUgYSBjaGF0LCB5b3UgbXVzdCBoYXZlIGVuYWJsZWQgeW91ciBDaGF0XG4tIEVuYWJsZSBhdCB5b3VyIHByb2ZpbGUgdGFiXG4tIFNlYXJjaCBhbiB1c2VyIGluIHRoZSAnc2VhcmNoIHVzZXInIHRhYiBhbmQgY3JlYXRlIGEgY2hhdFxuLSBJZiB0aGUgdXNlciBhbHNvIGhhcyBjaGF0cyBlbmFibGVkLCB0aGVyZSB3b3VsZCBiZSBubyBpc3N1ZXMuIil9fSksY0JyKGUuaWQpLGNCdG4oZS5pZCwiYnRuQ2hhdExpc3QiLCJ1cGRhdGUgbGlzdCIsKCgpPT57c0xvYWRpbmcoZS5pZCwibG9hZGluZ0NoYXRzIiksJGlkKCJ1Q2hhdExpc3QiKS5pbm5lckhUTUw9IiIsem5HZXQoImNoYXRfbGlzdCIpLnRoZW4oKGU9Pnt0cnl7bGV0IHQ9SlNPTi5wYXJzZShlKTtpZihPYmplY3Qua2V5cyh0KS5sZW5ndGg8MilyZXR1cm4gbm90aWZ5KCJ1c2VyIGhhcyBubyBjaGF0cyIsMTVlMyksdm9pZCBoTG9hZGluZygibG9hZGluZ0NoYXRzIik7bGV0IGk9IiI7Zm9yKGNvbnN0IGUgaW4gdClpZihPYmplY3QuaGFzT3duUHJvcGVydHkuY2FsbCh0LGUpKXtjb25zdCBuPXRbZV07aWYoIW4udHMpY29udGludWU7aSs9JHRibC5ib2R5KGBbvyBzdHlsZT0iY3Vyc29yOnBvaW50ZXI7IiBvbmNsaWNrPSdvbkNsaWNrQ2hhdExpc3QoIiR7ZS5zcGxpdCgiLyIpWzBdfSIsICR7bi5jcmVhdGVkfSwgIiR7bi5pZC5zcGxpdCgiLyIpWzFdfSIpOyc+ICR7ZS5zcGxpdCgiLyIpWzBdfSAgPGkgY2xhc3M9J2ZhIGZhLWNvbW1lbnRpbmcnIGFyaWEtaGlkZGVuPSd0cnVlJz48L2k+fXske2Uuc3BsaXQoIi8iKVsxXS5yZXBsYWNlKCJuIiwiIC8gIil9fV1gKX1oTG9hZGluZygibG9hZGluZ0NoYXRzIiksJGlkKCJ1Q2hhdExpc3QiKS5pbm5lckhUTUw9JHRibC5oZWFkKCc8YnI+W3tuYW1lfb8gc3R5bGU9ImN1cnNvcjpwb2ludGVyOyIgb25jbGljaz0iJHRibC5zb3J0KDEsIFwndUNoYXRMaXN0XCcpIj5kYXRlfV0nKStpfWNhdGNoKHQpe2lmKCRsb2codCksZS5pbmNsdWRlcygiXyIpKXJldHVybiB2b2lkIG5vdGlmeShlLnJlcGxhY2UoL18vZywiICIpLDdlMyl9fSkpLmNhdGNoKChlPT57JGxvZyhlKX0pKX0pLCIiLHtkaXNwbGF5OiJub25lIn0pLGNUeHRib3goZS5pZCwiZmluZEFsaWFzQ2hhdCIsITEsIiIsIiIse21hcmdpblJpZ2h0OiIxMHB4In0se3JlcXVpcmVkOiExLHBsYWNlaG9sZGVyOiJzZWFyY2ggY2hhdCIsZXZlbnRMaXN0ZW5lcjp7aW5wdXQ6KCk9PnskdGJsLnNlYXJjaCgiZmluZEFsaWFzQ2hhdCIsInVDaGF0TGlzdCIpfX19LCEwKSxjQnRuKGUuaWQsInIiLCJmYSBmYS1yZWZyZXNoIiwoKCk9PnskY2xpY2soImJ0bkNoYXRMaXN0Iil9KSksY1RhYmxlKGUuaWQsInVDaGF0TGlzdDIiLCIiLHtjb2xvcjoid2hpdGUiLHdpZHRoOiIxMDAlIixib3JkZXI6IjFweCBzb2xpZCAjZGRkZGRkMDAifSksY0RpdihlLmlkLCJ1Q2hhdExpc3REaXYiLHttYXhIZWlnaHQ6IjM1MHB4IixvdmVyZmxvdzoiYXV0byJ9LHt9LChlPT57Y1RhYmxlKGUuaWQsInVDaGF0TGlzdCIsIiIse2NvbG9yOiJ3aGl0ZSIsd2lkdGg6IjEwMCUiLGJvcmRlcjoiMXB4IHNvbGlkICNkZGRkZGQwMCJ9KX0pKX0pKSxjRGl2KGUuaWQsImN1cnJlbnRDaGF0VGFiIix7ZGlzcGxheToibm9uZSJ9LHt9LChlPT57Y1RleHQoZS5pZCwiY2hhdFVzZXJUaXRsZSIsIm5vIGNoYXQgc2VsZWN0ZWQiLGNTdHlsZXMuZGxnVGl0bGVzKSxjRGl2KGUuaWQsInByaXZDaGF0Q250ciIse3dpZHRoOiIyNTBweCIsaGVpZ2h0OiIzMTVweCIsbWF4SGVpZ2h0OiIyMDBweCIsb3ZlcmZsb3dZOiJhdXRvIixwYWRkaW5nOiIxMHB4IixiYWNrZ3JvdW5kQ29sb3I6InZhcigtLWMtc2Vjb25kYXJ5KSIsanVzdGlmeVNlbGY6ImNlbnRlciIsZGlzcGxheToibm9uZSJ9KSxjQnIoZS5pZCksY1R4dGJveChlLmlkLCJjaGF0VXNlclRleHQiLCExLCIiLCIiLHtkaXNwbGF5OiJub25lIix3aWR0aDoiMTAwJSJ9LHtwYXR0ZXJuOiJeW2EtekEtWjAtOSBdKiQiLG1pbkxlbmd0aDozLG1heExlbmd0aDozMCxyZXF1aXJlZDohMCxwbGFjZWhvbGRlcjoidGV4dCIsZXZlbnRMaXN0ZW5lcjp7a2V5ZG93bjooZSx0KT0+eyJFbnRlciI9PT10LmtleSYmJGNsaWNrKCJzZW5kQ2hhdE1zZyIpfX19LCEwKSxjRGl2KGUuaWQsImNoYXRVc2VyQnRucyIse2Rpc3BsYXk6Im5vbmUiLGp1c3RpZnlDb250ZW50OiJzcGFjZS1ldmVubHkifSx7fSwoZT0+e2NCdG4oZS5pZCwic2VuZENoYXRNc2ciLCJzZW5kIGNoYXQiLCgoKT0+e2lmKCFjVHh0VmFsaWQoImNoYXRVc2VyVGV4dCIsITApKXJldHVybiB2b2lkIG5vdGlmeSgiaW52YWxpZCBpbnB1dCIpO2lmKGxVU0NEYXRlIT0kdGltZS55ZWFyTk1vbnRoKCkpcmV0dXJuIHZvaWQgbm90aWZ5KCJ3cm9uZyBkYXRlLiB5b3UgY2Fubm90IHNlbmQgbWVzc2FnZXMgdG8gb2xkIGNoYXRzIik7bGV0IGU9IiI7ZT1sVVNDQ3JlYXRlZD8iLTEiOiItMCIsZSs9Ii0iK2xVU0NEYXRlLHpuR2V0KCJzZW5kX2NoYXRfbXNnIixsVXNlclNlbGVjdGVkQ2hhdCsiLSIrJGlkKCJjaGF0VXNlclRleHQiKS52YWx1ZStlKS50aGVuKChhc3luYyBlPT57bm90aWZ5KGUucmVwbGFjZSgvXy9nLCIgIiksN2UzKSwkaWQoImNoYXRVc2VyVGV4dCIpLnZhbHVlPSIiLGF3YWl0ICRtLnc4KDUwMCksdVByaXZDaGF0KCl9KSkuY2F0Y2goKGU9PiRsb2coZSkpKX0pLCIiKSxjQnRuKGUuaWQsInIiLCJmYSBmYS1yZWZyZXNoIiwoKCk9Pnt1UHJpdkNoYXQoKSwkaWQoImNoYXRVc2VyVGV4dCIpLnZhbHVlPSIifSkpfSkpfSkpLGNCcihlLmlkKSwkY2xpY2soImJ0bkNoYXRUYWJMaXN0Iil9KSksY1RleHQocElkLCJyIiwiY2hhdCIse3N0Ont0ZXh0QWxpZ246ImNlbnRlciIsdGV4dERlY29yYXRpb246InVuZGVybGluZSIsZm9udFNpemU6IjE4cHgiLG1hcmdpbkJvdHRvbToiMTBweCIsbWFyZ2luVG9wOiIwcHgifX0pLGNEaXYocElkLCJjaGF0Q29udGFpbmVyIix7d2lkdGg6IjIzMHB4IixoZWlnaHQ6IjMxNXB4IixtYXhIZWlnaHQ6IjMxNXB4IixvdmVyZmxvd1k6ImF1dG8iLHBhZGRpbmc6IjEwcHgiLGJhY2tncm91bmRDb2xvcjoidmFyKC0tYy1zZWNvbmRhcnkpIn0pLGNCcigpLGNUeHRib3gocElkLCJjaGF0X3RleHQiLCExLCIiLCIiLHt9LHtwYXR0ZXJuOiJeW2EtekEtWjAtOSBdKiQiLG1pbkxlbmd0aDoxLG1heExlbmd0aDo2NCxyZXF1aXJlZDohMCxwbGFjZWhvbGRlcjoid3JpdGUiLGV2ZW50TGlzdGVuZXI6e2tleWRvd246KGUsdCk9PnsiRW50ZXIiPT09dC5rZXkmJnNlbmRDaGF0KCl9fX0sITApLGRpdkNlbnRlcihwSWQsKGU9PntjQnRuKGUuaWQsImJ0bl9zZW5kX2NoYXQiLCJzZW5kIiwoKCk9PntzZW5kQ2hhdCgpfSksIkVudmlhIHVuIG1lbnNhamUgYWwgY2hhdCwgdGltZW91dCBkZSAzMCBzZWd1bmRvcy4iLHttYXJnaW5SaWdodDoiMTBweCJ9KSxjQnRuKGUuaWQsInIiLCJmYSBmYS1yZWZyZXNoIiwoKCk9Pnt1Q2hhdCgpfSkpfSkpLGNIcihwSWQsITEse3dpZHRoOiIyMDBweCJ9KSxjVGV4dChwSWQsInVzZXJzb25saW5lIiwiIix7c3Q6e3RleHRBbGlnbjoiY2VudGVyIix0ZXh0RGVjb3JhdGlvbjoidW5kZXJsaW5lIixmb250U2l6ZToiMTBweCIsbWFyZ2luQm90dG9tOiIxMHB4IixtYXJnaW5Ub3A6IjBweCJ9fSksY0JyKHBJZCkscElkPSJtYWluX2VsZW1lbnRzIiwkaWQoInRpdGxlSWQiKS5pbm5lclRleHQ9IlpJTkMiLGNUYWJCdG4oImVsZW1lbnRfbGVmdF9idXR0b25zIixbe2lkOiJnbG9iYWxDaGF0IixkaXNwbGF5OiJmbGV4Iix0eHQ6Imdsb2JhbCBjaGF0In0se2lkOiJwcml2YXRlQ2hhdCIsZGlzcGxheToiZmxleCIsdHh0OiI8Yj5QTTwvYj4ifSx7aWQ6InNlYXJjaFVzZXIiLGRpc3BsYXk6ImZsZXgiLHR4dDoic2VhcmNoIHVzZXIifV0sImwiKSxjVGFiQnRuKCJlbGVtZW50X3JpZ2h0X2J1dHRvbnMiLFt7aWQ6InBhbmVsX3VwZGF0ZXMiLGRpc3BsYXk6ImZsZXgiLHR4dDoibG9ncyJ9LHtpZDoicGFuZWxfdGlja2V0cyIsZGlzcGxheToiZmxleCIsdHh0OiJ0aWNrZXRzIn0se2lkOiJwYW5lbF9wcm9maWxlcyIsZGlzcGxheToiZ3JpZCIsdHh0OiJwcm9maWxlIn1dLCJyIiksJGlkKCJwcm9kdWN0SWQiKS5pbm5lclRleHQ9InNjcmlwdCIsY1RhYkJ0bigiZWxlbWVudF9idXR0b25zIixbe2lkOiJlbGVtZW50X21haW4iLHR4dDoibWFpbiJ9LHtpZDoiZWxlbWVudF9rZXlzIix0eHQ6ImtleXMifSx7aWQ6ImVsZW1lbnRfb3ZlcmxheSIsdHh0OiJvdmVybGF5In0se2lkOiJlbGVtZW50X3NldHRpbmciLHR4dDoibWlzYyJ9LHtpZDoiZWxlbWVudF9xcmNvZGUiLHR4dDoiUVIifV0pLGNDaGVja2JveChwSWQsImVuYWJsZV9yY3MiLCJlbmFibGUiLCJBY3RpdmEgZWwgZnVuY2lvbmFtaWVudG8gZGVsIHNjcmlwdC4iKSxjQ3VzdG9tcyhwSWQsInIiLCJleHRyYSBvcHRpb25zIiwoZT0+e2NUZXh0KGUuY2lkLCJyIiwiT3B0aW9ucyIsY1N0eWxlcy5kbGdUaXRsZXMpLGNTbHJJbnQoZS5jaWQsInJjc3Ntb290aCIsInNtb290aCIsNCwxNSwxLDUsIkFncmVnYSBzdWF2aWRhZCBhIGxvcyBtb3ZpbWllbnRvcywgaGFjaWVuZG9sb3MgbWFzICdodW1hbm9zJyAoU2UgZGVzYWN0aXZhIGVuIGZhc3QtbW9kZSkiLGNTdHlsZXMuc2xpZGVycyksY0hyKGUuY2lkLCExLHt3aWR0aDoiMjAwcHgifSksY1NsckZsb2F0KGUuY2lkLCJkZWZhdWx0X3giLCJkZWZhdWx0IHJjcyB4IiwuMDEsMS43LC4wMSwxLCJBZ3JlZ2EvcXVpdGEgdmFsb3IgYWwgRWplIFggZW4gY3VhbHF1aWVyIGVzdGFkbyIpLGNTbHJGbG9hdChlLmNpZCwiZGVmYXVsdF95IiwiZGVmYXVsdCByY3MgeSIsLjAxLDEuNywuMDEsMSwiQWdyZWdhL3F1aXRhIHZhbG9yIGFsIEVqZSBZIGVuIGN1YWxxdWllciBlc3RhZG8iKSxjSHIoZS5jaWQsITEse3dpZHRoOiIyMDBweCJ9KSxjU2xyRmxvYXQoZS5jaWQsIm1vdmluZ194IiwibW92aW5nIHJjcyB4IiwuMDEsMS43LC4wMSwxLCJBZ3JlZ2EvcXVpdGEgdmFsb3IgYWwgRWplIFggZW4gZXN0YWRvIE1PVklORyIpLGNTbHJGbG9hdChlLmNpZCwibW92aW5nX3kiLCJtb3ZpbmcgcmNzIHkiLC4wMSwxLjcsLjAxLDEsIkFncmVnYS9xdWl0YSB2YWxvciBhbCBFamUgWSBlbiBlc3RhZG8gTU9WSU5HIiksY0hyKGUuY2lkLCExLHt3aWR0aDoiMjAwcHgifSksY1NsckZsb2F0KGUuY2lkLCJjcm91Y2hfeCIsImNyb3VjaCByY3MgeCIsLjAxLDEuNywuMDEsMSwiQWdyZWdhL3F1aXRhIHZhbG9yIGFsIEVqZSBYIGVuIGVzdGFkbyBDUk9VQ0giKSxjU2xyRmxvYXQoZS5jaWQsImNyb3VjaF95IiwiY3JvdWNoIHJjcyB5IiwuMDEsMS43LC4wMSwxLCJBZ3JlZ2EvcXVpdGEgdmFsb3IgYWwgRWplIFkgZW4gZXN0YWRvIENST1VDSCIpLGNIcihlLmNpZCwhMSx7d2lkdGg6IjIwMHB4In0pLGNTbHJGbG9hdChlLmNpZCwic3RhbmRfeCIsInN0YW5kIHJjcyB4IiwuMDEsMS43LC4wMSwxLCJBZ3JlZ2EvcXVpdGEgdmFsb3IgYWwgRWplIFggZW4gZXN0YWRvIFNUQU5ESU5HIiksY1NsckZsb2F0KGUuY2lkLCJzdGFuZF95Iiwic3RhbmQgcmNzIHkiLC4wMSwxLjcsLjAxLDEsIkFncmVnYS9xdWl0YSB2YWxvciBhbCBFamUgWSBlbiBlc3RhZG8gU1RBTkRJTkciKSxkbGcuY2xvc2VCdG4oZS5jaWQpfSkse2NvbG9yOiJ3aGl0ZSIsd2lkdGg6IjM1MHB4In0pLGNDaGVja2JveChwSWQsImZhc3RfbW9kZSIsImZhc3QgbW9kZSAoSElHSCBDUFUpIiwiQWN0aXZhIGVsIG1vZG8gcmFwaWRvLCBmb3J6YW5kbyBhbCBwcm9ncmFtYSBhIGNvbnN1bWlyIG1hcyBDUFUuIiksY0NvbWJvQm94KHBJZCwid2VhcG9uX2NvbWJvIiwid2VhcG9uIiwwLDksITEsIkFybWEgcXVlIGVsIHNjcmlwdCBpbnRlbnRhcmEgY29tcGVuc2FyIiwoKCk9PntySW5mbygpfSkpLGNDb21ib0JveChwSWQsInNjb3BlX2NvbWJvIiwic2NvcGUiLDAsNCwhMSwiU2NvcGUgcXVlIGVsIHNjcmlwdCBpbnRlbnRhcmEgY29tcGVuc2FyIiksY0NvbWJvQm94KHBJZCwiYmFycmVsX2NvbWJvIiwiYmFycmVsIiwwLDMsITEsIkJhcnJlbCBxdWUgZWwgc2NyaXB0IGludGVudGFyYSBjb21wZW5zYXIiKSxjU2xyRmxvYXQocElkLCJzZW5zaW5nYW1lIiwic2Vuc2l0aXZpdHkiLC4wMSwzLC4wMSwxLCJEZWJlcyBwb25lciB0dSBTRU5TSUJJTElEQUQgZGVsIGp1ZWdvICggMC4wMSAtIDMuMDAgKSIpLGNTbHJGbG9hdChwSWQsImZvdmluZ2FtZSIsImZvdiIsNzAsOTAsMSw5MCwiRGViZXMgcG9uZXIgdHUgRk9WIGRlbCBqdWVnbyAoIDcwIC0gOTAgKSIpLHBJZD0ia2V5c19lbGVtZW50cyIsY0NvbWJvQm94KHBJZCwibWFpbl90b2dnbGUiLCJtYWluIHRvZ2dsZSIsLTFlNSwxZTUsITEsIkFjdGl2YS9EZXNhY3RpdmEgZWwgc2NyaXB0IiksY0NvbWJvQm94KHBJZCwiY3Jvc3NfdG9nZ2xlIiwiY3Jvc3NoYWlyIHRvZ2dsZSIsLTFlNSwxZTUsITEsIkFjdGl2YS9EZXNhY3RpdmEgZWwgY3Jvc3NoYWlyIiksY0NvbWJvQm94KHBJZCwid2VhcG9uX2N5Y2xlIiwid2VhcG9uIGN5Y2xlIiwtMWU1LDFlNSwhMSwiQ2FtYmlhIGEgbGEgc2lndWllbnRlIGFybWEgZW4gbGEgbGlzdGEiKSxjQ29tYm9Cb3gocElkLCJzY29wZV9jeWNsZSIsInNjb3BlIGN5Y2xlIiwtMWU1LDFlNSwhMSwiQ2FtYmlhIGFsIHNpZ3VpZW50ZSBzY29wZSBlbiBsYSBsaXN0YSIpLGNDb21ib0JveChwSWQsImJhcnJlbF9jeWNsZSIsImJhcnJlbCBjeWNsZSIsLTFlNSwxZTUsITEsIkNhbWJpYSBhbCBzaWd1aWVudGUgYmFycmVsIGVuIGxhIGxpc3RhIikscElkPSJvdmVybGF5X2VsZW1lbnRzIixjQ2hlY2tib3gocElkLCJvdmVybGF5eiIsIm92ZXJsYXkiLCJBY3RpdmEgZWwgb3ZlcmxheSAoZGViZXMgdGVuZXIgZWwgb3ZlcmxheSBkZWwganVlZ28gYWN0aXZhZG8pLiIpLGNDdXN0b21zKHBJZCwiciIsImV4dHJhIG9wdGlvbnMiLChlPT57Y1RleHQoZS5jaWQsInIiLCJPcHRpb25zIixjU3R5bGVzLmRsZ1RpdGxlcyksY1NsckludChlLmNpZCwib3ZlcmxheV9wb3NfeCIsIm92ZXJsYXkgcG9zaXRpb24geCIsMSwyNDQwLDUsMTUsIiIsY1N0eWxlcy5zbGlkZXJzKSxjU2xySW50KGUuY2lkLCJvdmVybGF5X3Bvc195Iiwib3ZlcmxheSBwb3NpdGlvbiB5IiwxLDE0NDAsNSwxNSxjU3R5bGVzLnNsaWRlcnMpLGRsZy5jbG9zZUJ0bihlLmNpZCl9KSx7Y29sb3I6IndoaXRlIix3aWR0aDoiMzUwcHgifSksY0NoZWNrYm94KHBJZCwid2F0ZXJtYXJrIiwiaW5mbyB3ZWFwb24gYXR0YWNobWVudHMiLCJNdWVzdHJhIHR1IGFybWEtc2NvcGUtYmFycmVsIGFjdHVhbCBkZWwgc2NyaXB0IiksY0NoZWNrYm94KHBJZCwiY3Jvc3NoYWlyIiwiY3Jvc3NoYWlyIiwiTXVlc3RyYSB1biBjcm9zc2hhaXIgKGRvdCkgZW4gbWVkaW8gZGUgbGEgcGFudGFsbGEiKSxjQ3VzdG9tcyhwSWQsInIiLCJleHRyYSBvcHRpb25zIiwoZT0+e2NUZXh0KGUuY2lkLCJyIiwiT3B0aW9ucyIsY1N0eWxlcy5kbGdUaXRsZXMpLGNDaGVja2JveChlLmNpZCwiZGlzYWJsZWNyb3NzIiwiZGlzYWJsZSBjcm9zc2hhaXIgb24gYWltIiwiRGVzaGFiaWxpdGEgdHUgY3Jvc3NoYWlyIGFsIGFwdW50YXIgY29uIFItQ2xpY2suIiksZGxnLmNsb3NlQnRuKGUuY2lkKX0pLHtjb2xvcjoid2hpdGUiLHdpZHRoOiIzNTBweCJ9KSxwSWQ9ImVsZW1lbnRzX2NmZ2IiLGNDaGVja2JveChwSWQsInNvdW5kX29uX2NoYW5nZSIsInNvdW5kcyBvbiB3ZWFwb24gY2hhbmdlIiksY0NoZWNrYm94KHBJZCwic291bmRfb25fZW5kaXMiLCJzb3VuZHMgb24gZW5hYmxlL2Rpc2FibGUiKSxjQ2hlY2tib3gocElkLCJzb3VuZHNvbnN0YXJ0Iiwic291bmRzIG9uIHN0YXJ0IiksZkNvbWJvKCJ3ZWFwb25fY29tYm8iLCJ3ZWFwb25zIiksZkNvbWJvKCJzY29wZV9jb21ibyIsInNjb3BlcyIpLGZDb21ibygiYmFycmVsX2NvbWJvIiwiYmFycmVscyIpO2NvbnN0IGJpbmRFbGVtZW50cz1be2lkOiJtYWluX3RvZ2dsZSIsdGFyZ2V0OiJtYWluX3RvZ2dsZSJ9LHtpZDoid2VhcG9uX2N5Y2xlIix0YXJnZXQ6IndlYXBvbl9jeWNsZSJ9LHtpZDoic2NvcGVfY3ljbGUiLHRhcmdldDoic2NvcGVfY3ljbGUifSx7aWQ6ImJhcnJlbF9jeWNsZSIsdGFyZ2V0OiJiYXJyZWxfY3ljbGUifSx7aWQ6ImNyb3NzX3RvZ2dsZSIsdGFyZ2V0OiJjcm9zc190b2dnbGUifV07ZkNvbWJvKCJhbGxfcHJvZmlsZXMiLCJhbGxfcHJvZmlsZXMiKSxwSWQ9ImVsZW1lbnRzX2NmZ2IiLGNUZXh0KHBJZCwiciIsIiYjOTY3OTsgY2xvdWQgcHJvZmlsZXMiLHtzdDpjU3R5bGVzLnN1YnRpdGxlcyxmbjplPT57Y1Rvb2x0aXAoZS5pZCwicGVyZmlsZXMgY2xvdWQsIHNlIGd1YXJkYW4gZGUgZm9ybWEgc2VndXJhIGVuIGVsIHNlcnZpZG9yIGRlIHppbmMuIiksY0JyKCl9fSksY0J0bihwSWQsImJ0bl9zdl9wcm9maWxlIiwiY3JlYXRlIHByb2ZpbGUiLCgoKT0+e2RsZy5zaG93KCJkbGdfY3JlYXRlX3Byb2YiKX0pLCJHdWFyZGEgdHUgcGVyZmlsIGFjdHVhbCBlbiBlbCBzZXJ2aWRvciwgZWwgY3VhbCBwdWVkZXMgY2FyZ2FyIix7bWFyZ2luUmlnaHQ6IjVweCJ9KSxkbGcuY3JlYXRlKCJlbGVtZW50X2NvbmZpZyIsImRsZ19jcmVhdGVfcHJvZiIse2ZuYzplPT57Y1RleHQoZS5pZCwiciIsIkNsb3VkIHByb2ZpbGUgY3JlYXRvci4iLGNTdHlsZXMuZGxnVGl0bGVzKSxjVHh0Ym94KGUuaWQsImNwcm9maWxlbmFtZSIsITEsInByb2ZpbGUgbmFtZSAiLCIiLHtyZXNpemU6Im5vbmUiLG92ZXJmbG93OiJoaWRkZW4iLHdoaXRlU3BhY2U6InByZS13cmFwIixtYXJnaW5Ub3A6IjVweCIsY29sb3I6IndoaXRlIixsYWJlbHo6e2NvbG9yOiJ3aGl0ZSJ9fSx7cGF0dGVybjoiXlthLXpBLVowLTldKiQiLG1pbkxlbmd0aDoxLG1heExlbmd0aDoxNixwbGFjZWhvbGRlcjoibmFtZSIscmVxdWlyZWQ6ITB9KSxjQnRuKGUuaWQsInIiLCJjcmVhdGUiLCgoKT0+e2lmKGNUeHRWYWxpZCgiY3Byb2ZpbGVuYW1lIikpe2xldCBlPSRpZCgiY3Byb2ZpbGVuYW1lIikudmFsdWU7em5CdG4oInNhdmVfcHJvZmlsZSIsZSsiLSIrZSkudGhlbigoZT0+e25vdGlmeShlLnJlcGxhY2UoL18vZywiICIpLDdlMyl9KSkuY2F0Y2goKGU9PnskbG9nKGUpfSkpfWVsc2Ugbm90aWZ5KCJObyBzZSBhY2VwdGFuIGNhcmFjdGVyZXMgZXNwZWNpYWxlcywgZGUgMSBhIDE2IGNhcmFjdGVyZXMgc29sYW1lbnRlLiIsNWUzLCJSRUQiKX0pLCIiLHt3aWR0aDoiMTAwJSJ9KSxkbGcuY2xvc2VCdG4oZS5pZCl9fSksY0J0bihwSWQsImJ0bl9wcm9maWxlX2xpc3QiLCJwcm9maWxlIGxpc3QiLCgoKT0+e2RsZy5zaG93KCJkbGdfcHJvZl9saXN0Iiksem5CdG4oInByb2ZpbGVfbGlzdCIpLnRoZW4oKGU9Pnt0cnl7bGV0IHQ9SlNPTi5wYXJzZShlKTtpZigwPT10Lmxlbmd0aClyZXR1cm4gJGlkKCJ1X3Byb2ZpbGVfbGlzdGR2IikuaW5uZXJIVE1MPSJubyBwcm9maWxlcyIsdm9pZCBub3RpZnkoInVzZXIgaGFzIG5vIHByb2ZpbGVzIiw3ZTMpO2xldCBpPSIiO2Zvcihjb25zdCBlIGluIHQpaWYoT2JqZWN0Lmhhc093blByb3BlcnR5LmNhbGwodCxlKSl7Y29uc3Qgbj10W2VdO2krPSI8L3RyPiIsaSs9Ijx0ZD4iK2UrIjwvdGQ+IixpKz0iPHRkPiIrJHRpbWUuc3RyKG4udGltZXN0YW1wLDIpKyI8L3RkPiIsaSs9Ijx0ZD4iLGkrPSI8YnV0dG9uIGNsYXNzPSduZXdidXR0b24nIHRpdGxlPSdsb2FkIHByb2ZpbGUnIHN0eWxlPSdoZWlnaHQ6MzBweDt3aWR0aDphdXRvO2Rpc3BsYXk6aW5saW5lLWJsb2NrOycgb25jbGljaz1cInpuQnRuKCdnZXRfcHJvZmlsZScsICciK2UrIicpLnRoZW4oYXN5bmMgKHJUeHQpPT4geyBub3RpZnkoclR4dC5yZXBsYWNlKC9fL2csICcgJyksIDcwMDApO2F3YWl0IGxTZXJ2ZXIoKTtmQ29tYm8oJ2FsbF9wcm9maWxlcycsICdhbGxfcHJvZmlsZXMnKTt9KS5jYXRjaCgoZXJyKT0+IHskbG9nKGVycik7fSk7XCI+PGkgY2xhc3M9J2ZhIGZhLXBsYXknIGFyaWEtaGlkZGVuPSd0cnVlJz48L2k+PC9idXR0b24+IixpKz0iPGJ1dHRvbiBjbGFzcz0nbmV3YnV0dG9uJyB0aXRsZT0nc2F2ZS9vdmVycmlkZSBwcm9maWxlJyBzdHlsZT0nbWFyZ2luLWxlZnQ6MnB4O2hlaWdodDozMHB4O3dpZHRoOmF1dG87ZGlzcGxheTppbmxpbmUtYmxvY2s7JyBvbmNsaWNrPVwiaWYoIWNvbmZpcm0oJ0FyZSB5b3Ugc3VyZSB5b3Ugd2FudCB0byBvdmVycmlkZSB0aGlzIGNsb3VkIHByb2ZpbGUgd2l0aCB5b3VyIGN1cnJlbnQgcHJvZmlsZT8nKSkgcmV0dXJuOyB6bkJ0bignc2F2ZV9wcm9maWxlJywgJyIrZSsiJykudGhlbihhc3luYyAgKHJUeHQpPT4geyBub3RpZnkoclR4dC5yZXBsYWNlKC9fL2csICcgJyksIDcwMDApO30pLmNhdGNoKChlcnIpID0+eyRsb2coZXJyKX0pXCI+PGkgY2xhc3M9J2ZhIGZhLWZsb3BweS1vJyBhcmlhLWhpZGRlbj0ndHJ1ZSc+PC9pPjwvYnV0dG9uPiIsaSs9IjwvdGQ+IixpKz0iPC90cj4ifSRpZCgidV9wcm9maWxlX2xpc3QiKS5pbm5lckhUTUw9Ijxicj5cblx0XHRcdFx0PHRyPlxuXHRcdFx0XHQ8dGg+PC90aD5cblx0XHRcdFx0PHRoPjwvdGg+XG5cdFx0XHRcdDx0aD48L3RoPlxuXHRcdFx0XHQ8L3RyPlxuXHRcdFx0XHQiLCRpZCgidV9wcm9maWxlX2xpc3QyIikuaW5uZXJIVE1MPSc8YnI+XG5cdFx0XHRcdDx0cj5cblx0XHRcdFx0PHRoPm5hbWU8L3RoPlxuXHRcdFx0XHQ8dGggc3R5bGU9ImN1cnNvcjpwb2ludGVyOyIgb25jbGljaz0iJHRibC5zb3J0KDEsIFwndV9wcm9maWxlX2xpc3RcJykiPmxhc3Qgc2F2ZWQ8L3RoPlxuXHRcdFx0XHRceDNjIS0tPHRoPnN0YXR1czwvdGg+LS1ceDNlXG5cdFx0XHRcdDx0aD5vcHRpb25zPC90aD5cblx0XHRcdFx0PC90cj5cblx0XHRcdFx0JywkaWQoInVfcHJvZmlsZV9saXN0IikuaW5uZXJIVE1MKz1pfWNhdGNoKHQpe2lmKCRsb2codCksZS5pbmNsdWRlcygiXyIpKXJldHVybiB2b2lkIG5vdGlmeShlLnJlcGxhY2UoL18vZywiICIpLDdlMyl9fSkpLmNhdGNoKChlPT57JGxvZyhlKX0pKX0pLCJNdWVzdHJhIHR1cyBwZXJmaWxlcyBjcmVhZG9zIiksZGxnLmNyZWF0ZSgiZWxlbWVudF9jb25maWciLCJkbGdfcHJvZl9saXN0Iix7Zm5jOmU9PntjVGV4dChlLmlkLCJyIiwiQ2xvdWQgcHJvZmlsZXMuIixjU3R5bGVzLmRsZ1RpdGxlcyksY1R4dGJveChlLmlkLCJmaW5kX3ByX3RibGlzdCIsITEsIiIsIiIse30se3JlcXVpcmVkOiExLHBsYWNlaG9sZGVyOiJzZWFyY2ggcHJvZmlsZSIsZXZlbnRMaXN0ZW5lcjp7aW5wdXQ6KCk9PnskdGJsLnNlYXJjaCgiZmluZF9wcl90Ymxpc3QiLCJ1X3Byb2ZpbGVfbGlzdCIpfX19LCEwKSxjVGFibGUoZS5pZCwidV9wcm9maWxlX2xpc3QyIiwiIix7Y29sb3I6IndoaXRlIix3aWR0aDoiMTAwJSJ9KSxjRGl2KGUuaWQsInVfcHJvZmlsZV9saXN0ZHYiLHttYXhIZWlnaHQ6IjM1MHB4IixvdmVyZmxvdzoiYXV0byJ9LHt9LChlPT57Y1RhYmxlKGUuaWQsInVfcHJvZmlsZV9saXN0IiwiIix7Y29sb3I6IndoaXRlIix3aWR0aDoiMTAwJSJ9KX0pKSxkbGcuY2xvc2VCdG4oZS5pZCl9fSksY0hyKCksY1RleHQocElkLCJyIiwiJiM5Njc5OyBsb2NhbCBwcm9maWxlcyIse3N0OmNTdHlsZXMuc3VidGl0bGVzLGZuOmU9PntjVG9vbHRpcChlLmlkLCJwZXJmaWxlcyBsb2NhbGVzLCBzZSBndWFyZGFuIGVuIGxhIGNmZyBsb2NhbCwgc2UgcHVlZGVuIGJvcnJhci9wZXJkZXIgZW4gY2FzbyBkZSBsaW1waWFyIFRFTVAuIiksY0JyKCl9fSksY0NvbWJvQm94KHBJZCwiYWxsX3Byb2ZpbGVzIiwicHJvZmlsZSIsMCwyMCwhMSwiIiwoYXN5bmMgZT0+e2F3YWl0IGxTZXJ2ZXIoKX0pLHttaW5XaWR0aDoiMTgwcHgifSksY1R4dGJveChwSWQsInByb2ZpbGVfbmFtZV9jIiwhMSwiIiwiNC05IGNoYXJhY3RlcnMuIix7bWFyZ2luTGVmdDoiNXB4Iix3aWR0aDoiMTUwcHgifSx7cGF0dGVybjoiXlthLXpBLVowLTldKiQiLG1pbkxlbmd0aDozLG1heExlbmd0aDo5LHJlcXVpcmVkOiExfSwhMCksY0J0bihwSWQsImJ0bl9wcm9maWxlX2NoYW5nZSIsImNoYW5nZSBuYW1lIiwoYXN5bmMoKT0+e2lmKGNUeHRWYWxpZCgicHJvZmlsZV9uYW1lX2MiKSl7em5TSW5mbygicHJvZmlsZV9uYW1lIiwkaWQoInByb2ZpbGVfbmFtZV9jIikudmFsdWUpLCRpZCgicHJvZmlsZV9uYW1lX2MiKS52YWx1ZT0iIixhd2FpdCBsU2VydmVyKCksZkNvbWJvKCJhbGxfcHJvZmlsZXMiLCJhbGxfcHJvZmlsZXMiKX1lbHNlIG5vdGlmeSgiTm8gc2UgYWNlcHRhbiBlc3BhY2lvcyBvIGNhcmFjdGVyZXMgZXNwZWNpYWxlcywgezMtOSBjaGFyc30uIiw1ZTMsIlJFRCIpfSksIkNhbWJpYSBlbCBub21icmUgZGVsIHByb2ZpbGUiLHttYXJnaW5SaWdodDoiMTBweCJ9KSxjQnRuKHBJZCwiYnRuX3Byb2ZpbGVfZXhwb3J0IiwiZXhwb3J0IHByb2ZpbGUiLCgoKT0+e2RsZy5zaG93KCJjb25maXJtX2V4cF9wciIpfSksIkV4cG9ydGEgZWwgcGVyZmlsIGFjdHVhbCBhbCBDTElQQk9BUkQuIix7bWFyZ2luUmlnaHQ6IjEwcHgifSksZGxnLmNyZWF0ZSgiZWxlbWVudF9jb25maWciLCJjb25maXJtX2V4cF9wciIse2ZuYzplPT57Y1RleHQoZS5pZCwiciIsIllvdSBhcmUgYWJvdXQgdG8gPHU+RVhQT1JUPC91PiB5b3VyIGN1cnJlbnQgcHJvZmlsZS4iLGNTdHlsZXMuZGxnVGl0bGVzKSxjQnRuKGUuaWQsInIiLCJDT05GSVJNIiwoYXN5bmMoKT0+e3puQnRuKCJleHBvcnRfcHJvZmlsZSIpLGRsZy5jbG9zZShlLmlkKX0pLCIiLHt3aWR0aDoiMTAwJSIsZm9udFdlaWdodDoiYm9sZCJ9KSxkbGcuY2xvc2VCdG4oZS5pZCl9fSksY0J0bihwSWQsInIiLCJpbXBvcnQgcHJvZmlsZSIsKGFzeW5jKCk9PntkbGcuc2hvdygiY29uZmlybV9pbXBfcHIiKX0pKSxkbGcuY3JlYXRlKCJlbGVtZW50X2NvbmZpZyIsImNvbmZpcm1faW1wX3ByIix7Zm5jOmU9PntjVGV4dChlLmlkLCJyIiwiWW91IGFyZSBhYm91dCB0byBpbXBvcnQgYW4gPHU+VU5LTk9XTiBQUk9GSUxFPC91Pjxicj5UaGlzIHdpbGwgPHU+b3ZlcnJpZGU8L3U+IHlvdXIgY3VycmVudCBwcm9maWxlLiIsY1N0eWxlcy5kbGdUaXRsZXMpLGNCdG4oZS5pZCwiciIsIkNPTkZJUk0iLChhc3luYygpPT57em5CdG4oImltcG9ydF9wcm9maWxlIiksYXdhaXQgbFNlcnZlcigpLGZDb21ibygiYWxsX3Byb2ZpbGVzIiwiYWxsX3Byb2ZpbGVzIiksZGxnLmNsb3NlKGUuaWQpfSksIiIse3dpZHRoOiIxMDAlIixmb250V2VpZ2h0OiJib2xkIn0pLGRsZy5jbG9zZUJ0bihlLmlkKX19KSxjQnRuKHBJZCwiciIsInNldCBkZWZhdWx0IiwoKCk9PntkbGcuc2hvdygiY2ZyX3NldGRlZmF1bHQiKX0pLCJEZXZ1ZWx2ZSBlbCBwZXJmaWwgYSB2YWxvcmVzIGRlZmF1bHQsIHRhbWJpZW4gZWwgbm9tYnJlLiIpLGRsZy5jcmVhdGUocElkLCJjZnJfc2V0ZGVmYXVsdCIse2ZuYzplPT57Y1RleHQoZS5pZCwiciIsIllvdSBhcmUgYWJvdXQgdG8gc2V0IHRoZSBjdXJyZW50PGJyPnByb2ZpbGUgdG8gZGVmYXVsdCBWQUxVRVMiLGNTdHlsZXMuZGxnVGl0bGVzKSxjQnRuKGUuaWQsInIiLCJDT05GSVJNIiwoYXN5bmMoKT0+e3puQnRuKCJkZWZhdWx0X3Byb2ZpbGUiKSxhd2FpdCBsU2VydmVyKCksZkNvbWJvKCJhbGxfcHJvZmlsZXMiLCJhbGxfcHJvZmlsZXMiKSxkbGcuY2xvc2UoZS5pZCl9KSwiIix7d2lkdGg6IjEwMCUiLGZvbnRXZWlnaHQ6ImJvbGQifSksZGxnLmNsb3NlQnRuKGUuaWQpfX0pLGNIcigpLGNUZXh0KHBJZCwiciIsIiYjOTY3OTsgbG9jYWwgY29uZmlnIix7c3Q6Y1N0eWxlcy5zdWJ0aXRsZXMsZm46ZT0+e2NUb29sdGlwKGUuaWQsImNvbmZpZyBsb2NhbCBxdWUgY29udGllbmUgdG9kb3MgbG9zIHBlcmZpbGVzIGNyZWFkb3MsIHNlIHB1ZWRlbiBib3JyYXIvcGVyZGVyIGVuIGNhc28gZGUgbGltcGlhciBURU1QLiIpLGNCcigpfX0pLGRsZy5jcmVhdGUoImVsZW1lbnRfY29uZmlnIiwiY29uZmlybV9sb2FkY2ZnIix7Zm5jOmU9PntjVGV4dChlLmlkLCJyIiwiWW91IGFyZSBhYm91dCB0byBsb2FkIHlvdXIgPHU+bG9jYWw8L3U+IENGRyIsY1N0eWxlcy5kbGdUaXRsZXMpLGNCdG4oZS5pZCwiciIsIkNPTkZJUk0iLChhc3luYygpPT57em5CdG4oImxvYWRfYyIpLGF3YWl0IGxTZXJ2ZXIoKSxmQ29tYm8oImFsbF9wcm9maWxlcyIsImFsbF9wcm9maWxlcyIpLGRsZy5jbG9zZShlLmlkKX0pLCIiLHt3aWR0aDoiMTAwJSIsZm9udFdlaWdodDoiYm9sZCJ9KSxkbGcuY2xvc2VCdG4oZS5pZCl9fSksZGxnLmNyZWF0ZSgiZWxlbWVudF9jb25maWciLCJjb25maXJtX3NhdmVjZmciLHtmbmM6ZT0+e2NUZXh0KGUuaWQsInIiLCJZb3UgYXJlIGFib3V0IHRvIHNhdmUgeW91ciBsb2NhbCBDRkciLGNTdHlsZXMuZGxnVGl0bGVzKSxjQnRuKGUuaWQsInIiLCJDT05GSVJNIiwoKCk9Pnt6bkJ0bigic2F2ZV9jIiksZGxnLmNsb3NlKGUuaWQpfSksIiIse3dpZHRoOiIxMDAlIixmb250V2VpZ2h0OiJib2xkIn0pLGRsZy5jbG9zZUJ0bihlLmlkKX19KSxkbGcuY3JlYXRlKCJlbGVtZW50X2NvbmZpZyIsImNvbmZpcm1faW1wb3J0Y2ZnIix7Zm5jOmU9PntjVGV4dChlLmlkLCJyIiwiWW91IGFyZSBhYm91dCB0byBJTVBPUlQgYW5vdGhlciBDRkciLGNTdHlsZXMuZGxnVGl0bGVzKSxjQnRuKGUuaWQsInIiLCJDT05GSVJNIiwoKCk9Pnt6bkJ0bigiaW1wb3J0X2MiKSxkbGcuY2xvc2UoZS5pZCl9KSwiIix7d2lkdGg6IjEwMCUiLGZvbnRXZWlnaHQ6ImJvbGQifSksZGxnLmNsb3NlQnRuKGUuaWQpfX0pLGRsZy5jcmVhdGUoImVsZW1lbnRfY29uZmlnIiwiY29uZmlybV9leHBvcnRjZmciLHtmbmM6ZT0+e2NUZXh0KGUuaWQsInIiLCJZb3UgYXJlIGFib3V0IHRvIEVYUE9SVCB0aGUgZW50aXJlIGxvY2FsIENGRyw8YnI+IHdoaWNoIGluY2x1ZGUgYWxsIHlvdXIgcHJvZmlsZXMiLGNTdHlsZXMuZGxnVGl0bGVzKSxjQnRuKGUuaWQsInIiLCJDT05GSVJNIiwoKCk9Pnt6bkJ0bigiZXhwb3J0X2MiKSxkbGcuY2xvc2UoZS5pZCl9KSwiIix7d2lkdGg6IjEwMCUiLGZvbnRXZWlnaHQ6ImJvbGQifSksZGxnLmNsb3NlQnRuKGUuaWQpfX0pLGRsZy5jcmVhdGUoImVsZW1lbnRfY29uZmlnIiwiY29uZmlybV9leGl0Iix7Zm5jOmU9PntjVGV4dChlLmlkLCJyIiwiWW91IGFyZSBhYm91dCB0byBleGl0IixjU3R5bGVzLmRsZ1RpdGxlcyksY0J0bihlLmlkLCJyIiwiQ09ORklSTSIsKCgpPT57Y0V4aXQoKSxkbGcuY2xvc2UoZS5pZCl9KSwiIix7d2lkdGg6IjEwMCUiLGZvbnRXZWlnaHQ6ImJvbGQifSksZGxnLmNsb3NlQnRuKGUuaWQpfX0pLHBJZD0icGFuZWxfdGlja2V0cyIsY1RleHQocElkLCJ0aWNrZXRjZW50ZXIiLCJUaWNrZXQgQ2VudGVyIix7c3Q6e3RleHRBbGlnbjoiY2VudGVyIix0ZXh0RGVjb3JhdGlvbjoidW5kZXJsaW5lIixmb250U2l6ZToiMThweCIsbWFyZ2luQm90dG9tOiIxMHB4IixtYXJnaW5Ub3A6IjBweCJ9fSk7bGV0IHN0VGlja2V0c0ZhcT17dGV4dEFsaWduOiJjZW50ZXIiLGZvbnRTaXplOiIxNHB4IixtYXJnaW5Cb3R0b206IjEwcHgifTtjVGV4dChwSWQsInIiLCItIERvIG5vdCBzcGFtIHRoZSB0aWNrZXQgc3lzdGVtLjxicj4tIE9ubHkgY3JlYXRlIHRpY2tldHMgaWYgeW91IGhhdmUgYW4gaXNzdWUuPGJyPi0gT25seSBjcmVhdGUgdGlja2V0cyBpZiB5b3UgaGF2ZSBhIGZlYXR1cmUgcmVxdWVzdC48YnI+Iix7c3Q6c3RUaWNrZXRzRmFxfSksY1RleHQocElkLCJyIiwiLSBPbmx5IGNyZWF0ZSB0aWNrZXRzIGlmIHlvdSBuZWVkIDx1PmhlbHA8L3U+Ljxicj4tIEFsbCB0aWNrZXRzIGFyZSA8dT5wcml2YXRlPC91Pi48YnI+LSBEbyBub3QgcG9zdCBpcnJlbGV2YW50IGNvbW1lbnRzIGluIHRpY2tldHMgb3IgeW91IG1heSBiZSA8dT5iYW5uZWQ8L3U+LiIse3N0OnN0VGlja2V0c0ZhcX0pLGNDb21ib0JveDIocElkLCJ0aWNrZXRfYmVoYXZpb3IiLFsiQnVnIiwiRmVhdHVyZSIsIk90aGVyIl0sITAsIlNlbGVjY2lvbmEgdW5hIHJhem9uIGRlbCB0aWNrZXQuIiksY1RleHRBcmVhKHBJZCwidGlja2V0X2NvbnRlbnQiLCEwLCIiLHtoZWlnaHQ6IjEwMHB4IixyZXNpemU6Im5vbmUiLG92ZXJmbG93OiJoaWRkZW4iLHdoaXRlU3BhY2U6InByZS13cmFwIixtYXJnaW5Ub3A6IjVweCJ9LHtwYXR0ZXJuOiJeW2EtekEtWjAtOTotKy8gXSokezV9IixtaW5MZW5ndGg6NSxtYXhMZW5ndGg6MjU2LHBsYWNlaG9sZGVyOiJpbmZvIixyZXF1aXJlZDohMH0pO2xldCBzaG93X3RpY2tldF9jPSExO2Z1bmN0aW9uIG93bkluZm8oKXt6bkdldCgiZ2V0X3VzZXJfaW5mbyIsInoiKS50aGVuKChlPT57bGV0IHQ9SlNPTi5wYXJzZShlKTt0LmF2YXRhciYmKCRpZCgidXNlcl9hdmF0YXIiKS5zcmM9d2luZG93LmF0b2IodC5hdmF0YXIpLCRpZCgiYXZ0cl9wcmV2aWV3Iikuc3JjPXdpbmRvdy5hdG9iKHQuYXZhdGFyKSk7bGV0IGk9IiI7aSs9IjxwIHN0eWxlPSdtYXJnaW4tdG9wOjBweDttYXJnaW4tYm90dG9tOjBweDsnPjxiPkAiK3QuYWxpYXMsdC5hbGlhcy5pbmNsdWRlcygiWlVzZXIiKXx8KGNVc2VyQWxpYXM9ITApLHQucm9sZSYmKGkrPSI8c3BhbiBzdHlsZT0nZGlzcGxheTppbmxpbmU7Zm9udC1zaXplOjEwcHg7Y29sb3I6Iityb2xlY2xyW3Qucm9sZS50b0xvd2VyQ2FzZSgpXSsiOyc+ICgiK3Qucm9sZSsiKTwvc3Bhbj48YnI+PC9iPjwvcD4iLGNVc2VyUm9sZT10LnJvbGUudG9Mb3dlckNhc2UoKSksdC51c2VyX2lkP2krPSI8cCBzdHlsZT0nZm9udC1zaXplOjEwcHg7bWFyZ2luLXRvcDowcHg7Jz51aWQ6ICIrdC51c2VyX2lkOmkrPSI8cCBzdHlsZT0nZm9udC1zaXplOjEwcHg7bWFyZ2luLXRvcDowcHg7Jz51aWQ6IE5PIix0LnJlZ2lzdGVyX3RpbWU/aSs9IiAtIGpvaW5lZDogIiskdGltZS5zdHIodC5yZWdpc3Rlcl90aW1lLDApKyI8L3A+IjppKz0iPC9wPiIsdC5kZXNjcmlwdGlvbj9pKz0iPHAgc3R5bGU9J2ZvbnQtc2l6ZToxMnB4O21hcmdpbi10b3A6IDBweDsnPmluZm86ICIrd2luZG93LmF0b2IodC5kZXNjcmlwdGlvbikrIjwvcD4iOmkrPSI8cD4obm8gaW5mbyB5ZXQpPC9wPiIsJGlkKCJ1c2VyX2luZm8iKS5pbm5lckhUTUw9aSxoTG9hZGluZygibG9hZGluZ2F2YXRhciIpfSkpLmNhdGNoKChlPT57JGxvZyhlKX0pKX1jQnRuKHBJZCwiciIsImNyZWF0ZSB0aWNrZXQiLCgoKT0+e2lmKCFzaG93X3RpY2tldF9jKXJldHVybiBzZXRWaXMoWyJ0aWNrZXRfY29udGVudCIsInRpY2tldF9iZWhhdmlvciJdLCJpbmxpbmUtYmxvY2siKSx2b2lkKHNob3dfdGlja2V0X2M9ITApO2lmKGNUeHRWYWxpZCgidGlja2V0X2NvbnRlbnQiKSl7bGV0IGU9JGlkKCJ0aWNrZXRfY29udGVudCIpLnZhbHVlO3puQnRuKCJjcmVhdGVfdGlja2V0IiwkaWQoInRpY2tldF9iZWhhdmlvciIpLnZhbHVlKyItIitlKS50aGVuKChlPT57bm90aWZ5KGUucmVwbGFjZSgvXy9nLCIgIiksN2UzKX0pKS5jYXRjaCgoZT0+eyRsb2coZSl9KSl9ZWxzZSBub3RpZnkoIk5vIHNlIGFjZXB0YW4gY2FyYWN0ZXJlcyBlc3BlY2lhbGVzLCBkZSA1IGEgMjU2IGNhcmFjdGVyZXMgc29sYW1lbnRlLiIsNWUzLCJSRUQiKX0pLCJDcmVhIHVuIHRpY2tldCBlbCBjdWFsIHNlcmEgYXRlbmRpZG8vdmlzdG8gcG9yIGxvcyBhZG1pbmlzdHJhZG9yZXMuIiksY0hyKHBJZCwhMSx7d2lkdGg6IjIwMHB4In0pLGNCdG4ocElkLCJyIiwidmlldyB0aWNrZXRzIiwoKCk9PntzaG93X3RpY2tldF9jJiYoc2V0VmlzKFsidGlja2V0X2NvbnRlbnQiLCJ0aWNrZXRfYmVoYXZpb3IiXSwibm9uZSIpLHNob3dfdGlja2V0X2M9ITEpLHpuQnRuKCJnZXRfdGlja2V0cyIpLnRoZW4oKGU9PntpZihlLnNwbGl0KCJfIikubGVuZ3RoLTE+MilyZXR1cm4gdm9pZCBub3RpZnkoZS5yZXBsYWNlKC9fL2csIiAiKSw3ZTMpO2xldCB0PUpTT04ucGFyc2UoZSk7aWYoMD09dC5sZW5ndGgpcmV0dXJuICRpZCgidXNlcl90aWNrZXRzIikuaW5uZXJIVE1MPSJubyB0aWNrZXRzIix2b2lkIG5vdGlmeSgidXNlciBoYXMgbm8gdGlja2V0cyIsN2UzKTskaWQoInVzZXJfdGlja2V0cyIpLmlubmVySFRNTD0ibm8gdGlja2V0cyI7bGV0IGk9IiI7Zm9yKGNvbnN0IGUgaW4gdClpZihPYmplY3QuaGFzT3duUHJvcGVydHkuY2FsbCh0LGUpKXtjb25zdCBuPXRbZV07aSs9IjxiPjx1PiIrbi5yZWFzb24rIiBbIituLmlkKyJdPC91PjwvYj4gfCA8YnV0dG9uIGNsYXNzPSduZXdidXR0b24nIHR0aXA9J0RlbGV0ZSB0aWNrZXQnIHN0eWxlPSdkaXNwbGF5OmlubGluZS1ibG9jaztjb2xvcjpyZWQ7aGVpZ2h0OjMwcHg7JyBvbmNsaWNrPVwiaWYoIWNvbmZpcm0oJ0FyZSB5b3Ugc3VyZSB5b3Ugd2FudCB0byBkZWxldGUgdGhpcyB0aWNrZXQ/JykpIHJldHVybjsgem5CdG4oJ2RlbGV0ZV90aWNrZXQnLCAnIituLmlkKydcJykudGhlbiggKHJUeHQpID0+eyBub3RpZnkoclR4dC5yZXBsYWNlKC9fL2csIFwnIFwnKSwgNzAwMCk7fSkuY2F0Y2goIChlcnIpID0+eyRsb2coZXJyKTt9KTsiPjxpIGNsYXNzPSJmYSBmYS10aW1lcy1jaXJjbGUiIGFyaWEtaGlkZGVuPSJ0cnVlIj48L2k+PC9idXR0b24+PGJyPicsaSs9IjxwPiIrd2luZG93LmF0b2Iobi5jb250ZW50KSsiPC9wPiIsaSs9IjxociBjbGFzcz0naHJDbGFzcyc+In0kaWQoInVzZXJfdGlja2V0cyIpLmlubmVySFRNTD1pfSkpLmNhdGNoKChlPT57JGxvZyhlKX0pKX0pLCJNdWVzdHJhIHR1cyB0aWNrZXRzIGNyZWFkb3MiKSxjVGV4dChwSWQsInVzZXJfdGlja2V0cyIsIiIse3N0Ont0ZXh0QWxpZ246ImNlbnRlciJ9fSksY0JyKHBJZCkscElkPSJwYW5lbF9wcm9maWxlcyIsY1RleHQocElkLCJyIiwiUHJvZmlsZSIse3N0Ont0ZXh0QWxpZ246ImNlbnRlciIsZm9udFdlaWdodDoiYm9sZCIsdGV4dERlY29yYXRpb246InVuZGVybGluZSIsZm9udFNpemU6IjIwcHgiLG1hcmdpbkJvdHRvbToiMTBweCIsbWFyZ2luVG9wOiIwcHgifX0pLGNEaXYocElkLCJ1c2VyaW5mbyIse2Rpc3BsYXk6ImlubGluZS1ncmlkIixncmlkVGVtcGxhdGVDb2x1bW5zOiJyZXBlYXQoMywgMWZyKSIsZ3JpZEdhcDoiMTBweCJ9KSxjTG9hZGluZyhwSWQsImxvYWRpbmdhdmF0YXIiLHtwb3NpdGlvbjoicmVsYXRpdmUiLGRpc3BsYXk6ImJsb2NrIixsZWZ0OiI0OHB4Iix0b3A6Ii01OXB4In0pLHBJZD0idXNlcmluZm8iLGNJbWcocElkLCJ1c2VyX2F2YXRhciIsZEF2YXRhciw5MCw5MCx7anVzdGlmeVNlbGY6InN0YXJ0IixtYXJnaW5MZWZ0OiIxMHB4IixvYmplY3RGaXQ6ImNvdmVyIixib3JkZXJSYWRpdXM6IjVweCJ9KSxjVGV4dChwSWQsInVzZXJfaW5mbyIsIm5vbmUiLHtzdDp7ZGlzcGxheToiZ3JpZCIsZ3JpZFRlbXBsYXRlQ29sdW1uczoiMTYwcHgiLG1hcmdpblRvcDoiMHB4In19KSxwSWQ9InBhbmVsX3Byb2ZpbGVzIixjSHIocElkLCExLHt3aWR0aDoiMjAwcHgifSksY0J0bihwSWQsInIiLCJjcmVhdGUgcGFzc3dvcmQiLCgoKT0+e2RsZy5zaG93KCJwYXNzd29yZF9kbGciKX0pLCJQZXJtaXRlIGNyZWFyIHVuYSBwYXNzd29yZCB1bmljYSBwYXJhIHR1IHVzdWFyaW8sIHRlIHNlcnZpcmEgcGFyYSBsb2d1ZWFydGUgZW4gbGEgcGFnaW5hIHdlYi4iLHtqdXN0aWZ5U2VsZjoiY2VudGVyIn0pLGRsZy5jcmVhdGUocElkLCJwYXNzd29yZF9kbGciLHtmbmM6ZT0+e2NUZXh0KGUuaWQsInIiLCJDcmVhdGUgUGFzc3dvcmQiLGNTdHlsZXMuZGxnVGl0bGVzKSxjVHh0Ym94KGUuaWQsInBmX3Bhc3N3b3JkX3RleHRib3giLCExLCIiLCI0LTIwIGNoYXJhY3RlcnMsIG5vIHN5bWJvbHMhIix7bWFyZ2luVG9wOiI1cHgiLHdpZHRoOiI5NyUifSx7cGF0dGVybjoiXlthLXpBLVowLTldKiQiLG1pbkxlbmd0aDo0LG1heExlbmd0aDoyMCxyZXF1aXJlZDohMH0pLGNCcihlLmlkKSxjQnRuKGUuaWQsInIiLCJjcmVhdGUiLCgoKT0+e2NvbnN0IHQ9JGlkKCJwZl9wYXNzd29yZF90ZXh0Ym94Iik7aWYoY1R4dFZhbGlkKHQuaWQpKXt6bkJ0bigiY3JlYXRlX3Bhc3N3b3JkIix0LnZhbHVlKS50aGVuKCh0PT57bm90aWZ5KHQucmVwbGFjZSgvXy9nLCIgIiksN2UzKSx0LmluY2x1ZGVzKCJjcmVhdGVkIikmJmRsZy5jbG9zZShlLmlkKX0pKS5jYXRjaCgoZT0+eyRsb2coZSl9KSl9ZWxzZSBub3RpZnkodC5taW5MZW5ndGgrIiBhICIrdC5tYXhMZW5ndGgrIiBjYXJhY3RlcmVzLiBTaW4gY2FyYWN0ZXJlcy9zaW1ib2xvcyBlc3BlY2lhbGVzLiIsNWUzLCJSRUQiKX0pLCIiLHt3aWR0aDoiMTAwJSJ9KSxkbGcuY2xvc2VCdG4oZS5pZCl9fSksY0J0bihwSWQsInIiLCJjaGFuZ2UgYWxpYXMiLCgoKT0+e2RsZy5zaG93KCJhbGlhc19kbGciKX0pLCJQZXJtaXRlIGNhbWJpYXIgZWwgYWxpYXMgMSB2ZXogY2FkYSAzMCBkaWFzLiIse2p1c3RpZnlTZWxmOiJjZW50ZXIifSksZGxnLmNyZWF0ZShwSWQsImFsaWFzX2RsZyIse2ZuYzplPT57Y1RleHQoZS5pZCwiciIsIkNoYW5nZSBhbGlhcyIsY1N0eWxlcy5kbGdUaXRsZXMpLGNUeHRib3goZS5pZCwicGZfYWxpYXNfdGV4dGJveCIsITEsIiIsIiIse21hcmdpblRvcDoiNXB4Iix3aWR0aDoiOTclIn0se3BhdHRlcm46Il5bYS16QS1aMC05XSokIixtaW5MZW5ndGg6MyxtYXhMZW5ndGg6MjAscmVxdWlyZWQ6ITB9KSxjQnIoZS5pZCksY0J0bihlLmlkLCJyIiwiY2hhbmdlIiwoKCk9Pntjb25zdCB0PSRpZCgicGZfYWxpYXNfdGV4dGJveCIpO2lmKGNUeHRWYWxpZCh0LmlkKSl7em5CdG4oImNoYW5nZV9hbGlhcyIsdC52YWx1ZSkudGhlbigodD0+e25vdGlmeSh0LnJlcGxhY2UoL18vZywiICIpLDdlMyksdC5pbmNsdWRlcygiY2hhbmdlZCIpJiYhdC5pbmNsdWRlcygid2FpdCIpJiYob3duSW5mbygpLGNVc2VyQWxpYXM9ITAsZGxnLmNsb3NlKGUuaWQpKX0pKS5jYXRjaCgoZT0+eyRsb2coZSl9KSl9ZWxzZSBub3RpZnkodC5taW5MZW5ndGgrIiBhICIrdC5tYXhMZW5ndGgrIiBjYXJhY3RlcmVzLiBTaW4gY2FyYWN0ZXJlcy9zaW1ib2xvcyBlc3BlY2lhbGVzLiIsNWUzLCJSRUQiKX0pLCIiLHt3aWR0aDoiMTAwJSJ9KSxkbGcuY2xvc2VCdG4oZS5pZCl9fSkscElkPSJwYW5lbF9wcm9maWxlcyIsY0J0bihwSWQsInIiLCJ0b2dnbGUgY2hhdCIsKCgpPT57ZGxnLnNob3coImVuZGlzY2hhdERsZyIpfSksIkhhYmlsaXRhL0Rlc2hhYmlsaXRhIGVsIGNoYXQsIHRlIHBvZHJhbiBsbGVnYXIgbWVuc2FqZXMuIix7anVzdGlmeVNlbGY6ImNlbnRlciJ9KSxkbGcuY3JlYXRlKHBJZCwiZW5kaXNjaGF0RGxnIix7Zm5jOmU9PntjVGV4dChlLmlkLCJyIiwiVG9nZ2xlIGNoYXQiLGNTdHlsZXMuZGxnVGl0bGVzKSxjSHIoZS5pZCwhMSksY1RleHQoZS5pZCwiciIsIk9uY2UgZW5hYmxlZCwgYW55b25lIGNhbjxicj5jcmVhdGUgY2hhdHMgd2l0aCB5b3UgYW5kIHZpY2UtdmVyc2EuIix7c3Q6e3RleHRBbGlnbjoiY2VudGVyIixjb2xvcjoid2hpdGUifX0pLGNCdG4oZS5pZCwiciIsInRvZ2dsZSIsKCgpPT57em5CdG4oImNoYXRfdG9nZ2xlIikudGhlbigodD0+e25vdGlmeSh0LnJlcGxhY2UoL18vZywiICIpLDE3ZTMpLGRsZy5jbG9zZShlLmlkKX0pKS5jYXRjaCgoZT0+eyRsb2coZSl9KSl9KSwiIix7d2lkdGg6IjEwMCUifSksZGxnLmNsb3NlQnRuKGUuaWQpfX0pLGNCdG4ocElkLCJyIiwiY2hhbmdlIGF2YXRhciIsKCgpPT57ZGxnLnNob3coImF2dHJfZGxnIil9KSwiQ2FtYmlhIGVsIGF2YXRhciBhIHVuYSBpbWFnZW4sIHNvbG8gVVJMUy4iLHtqdXN0aWZ5U2VsZjoiY2VudGVyIn0pLGRsZy5jcmVhdGUocElkLCJhdnRyX2RsZyIse2ZuYzplPT57Y1RleHQoZS5pZCwiciIsIkNoYW5nZSBhdmF0YXIiLGNTdHlsZXMuZGxnVGl0bGVzKSxjSW1nKGUuaWQsImF2dHJfcHJldmlldyIsZEF2YXRhciw5MCw5MCx7ZGlzcGxheToiYmxvY2siLG1hcmdpbjoiMCBhdXRvIixvYmplY3RGaXQ6ImNvdmVyIn0pLGNCcihlLmlkKSxjVGV4dChlLmlkLCJyIiwiSW1ndXIgVVJMIG9ubHksIGV4YW1wbGUuIix7c3Q6e3RleHRBbGlnbjoiY2VudGVyIixjb2xvcjoid2hpdGUifX0pLGNUZXh0KGUuaWQsInIiLCJodHRwczovL2kuaW1ndXIuY29tL0duSmFFWkwucG5nIix7c3Q6e3RleHRBbGlnbjoiY2VudGVyIixjb2xvcjoid2hpdGUifX0pLGNUeHRib3goZS5pZCwicGZfYXZhdGFyX3RleHRib3giLCExLCIiLCIxMCBhIDEzMCBjYXJhY3RlcmVzLiBFdml0YXIgdXNhciBVUkwncyBkZSBnaWZzL3ZpZGVvcy4iLHttYXJnaW5Ub3A6IjVweCIsd2lkdGg6Ijk3JSJ9LHtwYXR0ZXJuOiJeKGh0dHBzPzovLyk/KGkuaW1ndXIuY29tLykoW2EtekEtWjAtOV0rKSguanBnfC5qcGVnfC5wbmcpJCIsbWluTGVuZ3RoOjIwLG1heExlbmd0aDo0MCxyZXF1aXJlZDohMH0pLGNCcihlLmlkKSxjQnRuKGUuaWQsInIiLCJwcmV2aWV3IiwoKCk9Pntjb25zdCBlPSRpZCgicGZfYXZhdGFyX3RleHRib3giKTtjVHh0VmFsaWQoZS5pZCk/JGlkKCJhdnRyX3ByZXZpZXciKS5zcmM9ZS52YWx1ZTpub3RpZnkoZS5taW5MZW5ndGgrIiBhICIrZS5tYXhMZW5ndGgrIiBjYXJhY3RlcmVzLiBTaW4gY2FyYWN0ZXJlcy9zaW1ib2xvcyBlc3BlY2lhbGVzLiIsNWUzLCJSRUQiKX0pLCIiLHt3aWR0aDoiMTAwJSJ9KSxjQnIoZS5pZCksY0hyKGUuaWQsITEpLGNCdG4oZS5pZCwiciIsImNoYW5nZSIsKCgpPT57Y29uc3QgdD0kaWQoInBmX2F2YXRhcl90ZXh0Ym94Iik7aWYoY1R4dFZhbGlkKHQuaWQpKXtsZXQgaT10LnZhbHVlO3puQnRuKCJjaGFuZ2VfYXZhdGFyIixpKS50aGVuKCh0PT57bm90aWZ5KHQucmVwbGFjZSgvXy9nLCIgIiksN2UzKSx0LmluY2x1ZGVzKCJjaGFuZ2VkIikmJiF0LmluY2x1ZGVzKCJ3YWl0IikmJigkaWQoImF2dHJfcHJldmlldyIpLnNyYz1pLCRpZCgidXNlcl9hdmF0YXIiKS5zcmM9aSxkbGcuY2xvc2UoZS5pZCkpfSkpLmNhdGNoKChlPT57JGxvZyhlKX0pKX1lbHNlIG5vdGlmeSh0Lm1pbkxlbmd0aCsiIGEgIit0Lm1heExlbmd0aCsiIGNhcmFjdGVyZXMuIFNpbiBjYXJhY3RlcmVzL3NpbWJvbG9zIGVzcGVjaWFsZXMuIiw1ZTMsIlJFRCIpfSksIiIse3dpZHRoOiIxMDAlIn0pLGNCcihlLmlkKSxkbGcuY2xvc2VCdG4oZS5pZCl9fSkscElkPSJwYW5lbF9wcm9maWxlcyIsY0J0bihwSWQsIm9wZW5kbGdkZXNjIiwiY2hhbmdlIGRlc2NyaXB0aW9uIiwoKCk9PntkbGcuc2hvdygiZGVzY19kbGciKX0pLCJDYW1iaWEgbGEgZGVzY3JpcGNpb24gZGUgdHUgcGVyZmlsLiIse2p1c3RpZnlTZWxmOiJjZW50ZXIifSksZGxnLmNyZWF0ZShwSWQsImRlc2NfZGxnIix7Zm5jOmU9PntjVGV4dChlLmlkLCJyIiwiQ2hhbmdlIGRlc2NyaXB0aW9uIixjU3R5bGVzLmRsZ1RpdGxlcyksY1RleHRBcmVhKGUuaWQsImRlc2NyaXB0aW9uX2NvbnRlbnQiLCExLCIiLHtoZWlnaHQ6IjEwMHB4IixyZXNpemU6Im5vbmUiLG92ZXJmbG93OiJoaWRkZW4iLHdoaXRlU3BhY2U6InByZS13cmFwIixtYXJnaW5Ub3A6IjVweCIsanVzdGlmeVNlbGY6ImNlbnRlciIsd2lkdGg6IjEwMCUiLHRleHRib3g6e2Rpc3BsYXk6ImluaGVyaXQifX0se3BhdHRlcm46Il5bYS16QS1aMC05IF0qJCIsbWluTGVuZ3RoOjQsbWF4TGVuZ3RoOjI1NixwbGFjZWhvbGRlcjoiZGVzY3JpcHRpb24iLHJlcXVpcmVkOiEwfSksY0JyKGUuaWQpLGNCdG4oZS5pZCwiciIsImNoYW5nZSIsKCgpPT57Y29uc3QgdD0kaWQoImRlc2NyaXB0aW9uX2NvbnRlbnQiKTtpZihjVHh0VmFsaWQodC5pZCkpe3puQnRuKCJjaGFuZ2VfZGVzY3JpcHRpb24iLHQudmFsdWUpLnRoZW4oKHQ9Pntub3RpZnkodC5yZXBsYWNlKC9fL2csIiAiKSw3ZTMpLHQuaW5jbHVkZXMoImNoYW5nZWQiKSYmIXQuaW5jbHVkZXMoIndhaXQiKSYmKG93bkluZm8oKSxkbGcuY2xvc2UoZS5pZCkpfSkpLmNhdGNoKChlPT57JGxvZyhlKX0pKX1lbHNlIG5vdGlmeSh0Lm1pbkxlbmd0aCsiIGEgIit0Lm1heExlbmd0aCsiIGNhcmFjdGVyZXMuIFNpbiBjYXJhY3RlcmVzL3NpbWJvbG9zIGVzcGVjaWFsZXMuIiw1ZTMsIlJFRCIpfSksIiIse3dpZHRoOiIxMDAlIn0pLGRsZy5jbG9zZUJ0bihlLmlkKX19KSxjQnRuKHBJZCwiciIsIm9wdGlvbnMiLCgoKT0+e2RsZy5zaG93KCJvcHRpb25zRGxnIil9KSwiT3BjaW9uZXMgYWRpY2lvbmFsZXMiLHtqdXN0aWZ5U2VsZjoiY2VudGVyIn0pLGRsZy5jcmVhdGUocElkLCJvcHRpb25zRGxnIix7c3R5bGV6Ontjb2xvcjoid2hpdGUiLHdpZHRoOiIyMjBweCJ9LGZuYzplPT57Y1RleHQoZS5pZCwiciIsIkV4dHJhLW9wdGlvbnMiLGNTdHlsZXMuZGxnVGl0bGVzKSxjQ2hlY2tib3gyKGUuaWQsIkFVT25saW5lcyIsImF1dG8gdXBkYXRlIG9ubGluZXMiLHt0aXA6IlVwZGF0ZSB0aGUgb25saW5lIGNvdW50IGFmdGVyIDVzZWNzIixub3JtYWxUaXA6ITAsbm9DbGllbnQ6ITAsZGVsYXlTcGF3bjohMCxmblNwYXduOmU9PntlLmNoZWNrZWQ9c3RyVG9Cb29sKCRMUy5nZXQyKGUuaWQpKX0sZm5DbGljazplPT57JExTLnNldChlLmlkLGUuY2hlY2tlZCl9fSksY0NoZWNrYm94MihlLmlkLCJBVUNoYXRHbG9iYWwiLCJhdXRvIHVwZGF0ZSBjaGF0Iix7dGlwOiJVcGRhdGUgdGhlIGdsb2JhbCBjaGF0IGFmdGVyIDVzZWNzIixub3JtYWxUaXA6ITAsbm9DbGllbnQ6ITAsZGVsYXlTcGF3bjohMCxmblNwYXduOmU9PntlLmNoZWNrZWQ9c3RyVG9Cb29sKCRMUy5nZXQyKGUuaWQpKX0sZm5DbGljazplPT57JExTLnNldChlLmlkLGUuY2hlY2tlZCl9fSksY0NoZWNrYm94MihlLmlkLCJBVUNoYXRQTVMiLCJhdXRvIHVwZGF0ZSA8Yj5QTTwvYj4iLHt0aXA6IlVwZGF0ZSB0aGUgY3VycmVudCBQTSBhZnRlciA1c2VjcyIsbm9ybWFsVGlwOiEwLG5vQ2xpZW50OiEwLGRlbGF5U3Bhd246ITAsZm5TcGF3bjplPT57ZS5jaGVja2VkPXN0clRvQm9vbCgkTFMuZ2V0MihlLmlkKSl9LGZuQ2xpY2s6ZT0+eyRMUy5zZXQoZS5pZCxlLmNoZWNrZWQpfX0pLGNDaGVja2JveDIoZS5pZCwiQVVNZW51IiwiYXV0byB1cGRhdGUgPGI+TUVOVTwvYj4iLHt0aXA6IlVwZGF0ZSB0aGUgTUVOVSBhZnRlciA1c2VjcyBpbiBjYXNlIHRoZXJlJ3MgYW55IGNoYW5nZXMgaW4gb3RoZXIgdGFiIixub3JtYWxUaXA6ITAsbm9DbGllbnQ6ITAsZGVsYXlTcGF3bjohMCxmblNwYXduOmU9PntlLmNoZWNrZWQ9c3RyVG9Cb29sKCRMUy5nZXQyKGUuaWQpKX0sZm5DbGljazplPT57JExTLnNldChlLmlkLGUuY2hlY2tlZCl9fSksZGxnLmNsb3NlQnRuKGUuaWQpfX0pLGNCcigpO2NvbnN0IHZLZXlzPVtdO2ZvcihsZXQgZT02NTtlPD05MDtlKyspdktleXMucHVzaCh7Y29kZTplLG5hbWU6U3RyaW5nLmZyb21DaGFyQ29kZShlKX0pO2ZvcihsZXQgZT00ODtlPD01NztlKyspdktleXMucHVzaCh7Y29kZTplLG5hbWU6U3RyaW5nLmZyb21DaGFyQ29kZShlKX0pO2NvbnN0IHN2S2V5cz1be2NvZGU6MCxuYW1lOiJOT05FIn0se2NvZGU6OCxuYW1lOiJCYWNrc3BhY2UifSx7Y29kZTo5LG5hbWU6IlRhYiJ9LHtjb2RlOjEzLG5hbWU6IkVudGVyIn0se2NvZGU6MTYsbmFtZToiU2hpZnQifSx7Y29kZToxNyxuYW1lOiJDdHJsIn0se2NvZGU6MTgsbmFtZToiQWx0In0se2NvZGU6MTY0LG5hbWU6IkxlZnQgQWx0In0se2NvZGU6MTY1LG5hbWU6IlJpZ2h0IEFsdCJ9LHtjb2RlOjE5LG5hbWU6IlBhdXNlL0JyZWFrIn0se2NvZGU6OTEsbmFtZToiTGVmdCBXaW5kb3dzIn0se2NvZGU6OTIsbmFtZToiUmlnaHQgV2luZG93cyJ9LHtjb2RlOjkzLG5hbWU6IkFwcGxpY2F0aW9ucyJ9LHtjb2RlOjk2LG5hbWU6Ik51bVBhZCAwIn0se2NvZGU6OTcsbmFtZToiTnVtUGFkIDEifSx7Y29kZTo5OCxuYW1lOiJOdW1QYWQgMiJ9LHtjb2RlOjk5LG5hbWU6Ik51bVBhZCAzIn0se2NvZGU6MTAwLG5hbWU6Ik51bVBhZCA0In0se2NvZGU6MTAxLG5hbWU6Ik51bVBhZCA1In0se2NvZGU6MTAyLG5hbWU6Ik51bVBhZCA2In0se2NvZGU6MTAzLG5hbWU6Ik51bVBhZCA3In0se2NvZGU6MTA0LG5hbWU6Ik51bVBhZCA4In0se2NvZGU6MTA1LG5hbWU6Ik51bVBhZCA5In0se2NvZGU6MTEyLG5hbWU6IkYxIn0se2NvZGU6MTEzLG5hbWU6IkYyIn0se2NvZGU6MTE0LG5hbWU6IkYzIn0se2NvZGU6MTE1LG5hbWU6IkY0In0se2NvZGU6MTE2LG5hbWU6IkY1In0se2NvZGU6MTE3LG5hbWU6IkY2In0se2NvZGU6MTE4LG5hbWU6IkY3In0se2NvZGU6MTE5LG5hbWU6IkY4In0se2NvZGU6MTIwLG5hbWU6IkY5In0se2NvZGU6MTIxLG5hbWU6IkYxMCJ9LHtjb2RlOjEyMixuYW1lOiJGMTEifSx7Y29kZToxMjMsbmFtZToiRjEyIn0se2NvZGU6MSxuYW1lOiJMQlVUVE9OIn0se2NvZGU6MixuYW1lOiJSQlVUVE9OIn0se2NvZGU6NCxuYW1lOiJNQlVUVE9OIn0se2NvZGU6NSxuYW1lOiJYQlVUVE9OMSJ9LHtjb2RlOjYsbmFtZToiWEJVVFRPTjIifSx7Y29kZToxODcsbmFtZToiPSJ9LHtjb2RlOjE4OCxuYW1lOiIsIn0se2NvZGU6MTg5LG5hbWU6Ii0ifSx7Y29kZToxOTAsbmFtZToiLiJ9XTtmdW5jdGlvbiBjQmluZEVsbShlLHQpe2NvbnN0IGk9JGVsbSgib3B0aW9uIik7cmV0dXJuIGkudmFsdWU9ZS5jb2RlLGkudGV4dD1lLm5hbWUsaS5pZD10KyJfb3B0IixpfWZ1bmN0aW9uIHJJbmZvKCl7Zm9yKGNvbnN0IGUgaW4gdUJvb2wpem5Cb29sKHVCb29sW2VdKTtmb3IoY29uc3QgZSBpbiB1Rmx0KXpuRmxvYXQodUZsdFtlXSk7Zm9yKGNvbnN0IGUgaW4gdUludCl6bkludCh1SW50W2VdKTtmb3IoY29uc3QgZSBpbiB1SW50Mil6bkludCh1SW50MltlXSwhMSl9ZnVuY3Rpb24gdVNlcnZlcigpe2Zvcihjb25zdCBlIGluIHVCb29sKXpuU0Jvb2wodUJvb2xbZV0pO2Zvcihjb25zdCBlIGluIHVGbHQpem5TRmxvYXQodUZsdFtlXSl9ZnVuY3Rpb24gdGFiU3dpdGNoKGUsdD0iYyIsaT0iaW5saW5lLWJsb2NrIil7ZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgiW2MtdGFiLSIrdCsiLWJ0bl0iKS5mb3JFYWNoKCh0PT57dC5pZD09PWUrIkJ0biI/dC5jbGFzc0xpc3QuYWRkKCJhY3RpdmUiKTp0LmNsYXNzTGlzdC5yZW1vdmUoImFjdGl2ZSIpfSkpLHNldFZpcyhlLGl8fCJpbmxpbmUtYmxvY2siKSxzZXRWaXModVRhYnNbdF0sIm5vbmUiKSxzZXRWaXMoZSxpfHwiaW5saW5lLWJsb2NrIil9dktleXMucHVzaCguLi5zdktleXMpLHZLZXlzLnNvcnQoKChlLHQpPT5lLmNvZGUtdC5jb2RlKSksYmluZEVsZW1lbnRzLmZvckVhY2goKGU9Pntjb25zdCB0PSRpZChlLnRhcmdldCk7dktleXMuZm9yRWFjaCgoaT0+e3QuYXBwZW5kQ2hpbGQoY0JpbmRFbG0oaSxlLmlkKSl9KSl9KSksdGFiU3dpdGNoKCJtYWluX3RhYiIsImMiLCJub25lIiksZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcigibW91c2VlbnRlciIsKCgpPT57aXNNb3VzZUluc2lkZT0hMH0pKSxkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCJtb3VzZWxlYXZlIiwoKCk9Pntpc01vdXNlSW5zaWRlPSExfSkpLGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoInZpc2liaWxpdHljaGFuZ2UiLCgoKT0+e2lzV2luZG93VmlzPSJ2aXNpYmxlIj09ZG9jdW1lbnQudmlzaWJpbGl0eVN0YXRlfSkpO2xldCBtb3VzZUNoZWNrZXI9c2V0SW50ZXJ2YWwoKCgpPT57aXNNb3VzZVZpcz0ibm9uZSIhPWRvY3VtZW50LmJvZHkuc3R5bGUuY3Vyc29yJiZpc01vdXNlSW5zaWRlfSksMzAwKSxzdlVwZGF0ZXI9c2V0SW50ZXJ2YWwoKGFzeW5jKCk9Pntpc1dpbmRvd1ZpcyYmaXNNb3VzZVZpcyYmJExTLmdldDIoIkFVTWVudSIpJiZhd2FpdCBsU2VydmVyKCl9KSw1ZTMpLGNoYXRVcGRhdGVyPXNldEludGVydmFsKCgoKT0+e2lzTW91c2VWaXMmJigkTFMuZ2V0MigiQVVDaGF0R2xvYmFsIikmJnVDaGF0KCksJExTLmdldDIoIkFVQ2hhdFBNUyIpJiZ1UHJpdkNoYXQoKSwkTFMuZ2V0MigiQVVPbmxpbmVzIikmJmdPbmxpbmVzKCkpfSksNWUzKSx3YWl0aW5nPXNldEludGVydmFsKCgoKT0+eyQuZ2V0KCIvZ19pbmZvP2luZm89Z2FtZWZvdW5kIiwoZT0+e3dHYW1lRm91bmQ9cGFyc2VJbnQoZSksd0dhbWVGb3VuZD8oaXRlckZvdW5kKyssaXRlckZvdW5kPjUmJih6bkluZm8oInVzZXJfZGF5cyIsImRheXMgbGVmdDogIiwidXNlckRheXMiKSx6bkluZm8oImxhc3RfdXBkYXRlIiwiPGI+VXBkYXRlZDwvYj46ICIpLHpuSW5mbygiY2hhbmdlbG9ncyIsIjxiPkNoYW5nZWxvZ3M8L2I+OiAiKSxzZXRWaXMoIndhaXRpbmdfZ2FtZSIsIm5vbmUiKSxzZXRWaXMoImVsZW1lbnRfYnV0dG9ucyIsImZsZXgiKSx0YWJTd2l0Y2goImVsZW1lbnRfbWFpbiIpLHRhYlN3aXRjaCgicGFuZWxfdXBkYXRlcyIsInIiKSx0YWJTd2l0Y2goImdsb2JhbENoYXQiLCJsIiwiZmxleCIpLGNsZWFySW50ZXJ2YWwod2FpdGluZykpKTooem5JbmZvKCJ3YWl0aW5nX2dhbWUiLCJpbnRpYWxpemluZzxicj5jbG9zaW5nIGluOiAiKSxzZXRWaXMoWyJlbGVtZW50X21haW4iLCJlbGVtZW50X2J1dHRvbnMiLCJ1c2VyRGF5cyJdLCJub25lIiksdGFiU3dpdGNoKCJlbGVtZW50X21haW4iLCJjIiwibm9uZSIpKX0pKX0pLDI1MCkscnVubmluZz1zZXRJbnRlcnZhbCgoKCk9Pnt0cnl7JC5nZXQoIi9nX2luZm8/aW5mbz1ydW5uaW5nIiwoZT0+e30pKS5mYWlsKChlPT57Y0V4aXQoKX0pKX1jYXRjaChlKXskbG9nKGUpLGFsZXJ0KGUpLGNFeGl0KCl9fSksM2UzKTtmdW5jdGlvbiBjVG9vbHRpcChlLHQpe2lmKGNoZWNrRWxtbnQoZSkpcmV0dXJuO2lmKCF0KXJldHVybjtjb25zdCBpPSRpZChlKSxuPSRlbG0oImkiKTtuLmNsYXNzTmFtZT0iZmEgZmEtcXVlc3Rpb24tY2lyY2xlIGZhLTIiLG4uc2V0QXR0cmlidXRlKCJhcmlhLWhpZGRlbiIsInRydWUiKSxuLnN0eWxlLmNzc1RleHQ9ImRpc3BsYXk6aW5saW5lLWJsb2NrO2ZvbnQtd2VpZ2h0OjkwMDtmb250LXNpemU6MTVweDtvcGFjaXR5OjAuNTttYXJnaW4tbGVmdDo4cHg7IixuLnNldEF0dHJpYnV0ZSgidHRpcCIsdCksaS5hcHBlbmRDaGlsZChuKX1mdW5jdGlvbiBjRGEoZSx0PXt0eXBlOm51bGwsaWQ6bnVsbCxjbHM6bnVsbCxzdDpudWxsLGVsOm51bGwsZm46bnVsbCxkZWxheUZuOm51bGwsdGlwOm51bGx9KXtpZih0LmlkPSJSIj09dC5pZHx8InIiPT10LmlkPyRybmQoKTp0LmlkLG51bGwhPXQuaWQmJiJOIiE9dC5pZCl7aWYoY2hlY2tFbG1udChlLHQuaWQpKXJldHVybn1lbHNlIGlmKGNoZWNrRWxtbnQoZSkpcmV0dXJuO2NvbnN0IGk9JGVsbSh0LnR5cGV8fCJkaXYiKTtpZih0LmNscyYmKHQuY2xzPUFycmF5LmlzQXJyYXkodC5jbHMpP3QuY2xzOlt0LmNsc10sdC5jbHMuZm9yRWFjaCgoZT0+e2UmJmkuY2xhc3NMaXN0LmFkZChlKX0pKSksbnVsbCE9dC5pZCYmIk4iIT10LmlkJiYoaS5pZD10LmlkKSx0LmVsKXtpZih0LmVsLmV2ZW50cylmb3IobGV0IGUgaW4gdC5lbC5ldmVudHMpaS5hZGRFdmVudExpc3RlbmVyKGUsKGk9Pnt0LmVsLmV2ZW50c1tlXSh0aGlzLGkpfSkpO09iamVjdC5hc3NpZ24oaSx0LmVsKX1pZih0LnN0JiYoInN0cmluZyI9PXR5cGVvZiB0LnN0P2kuc3R5bGUuY3NzVGV4dD10LnN0Ok9iamVjdC5hc3NpZ24oaS5zdHlsZSx0LnN0KSksdC50aXAmJiIiIT10LnRpcCYmaS5zZXRBdHRyaWJ1dGUoInR0aXAiLHQudGlwKSwiYm9keSI9PWUpZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChpKTtlbHNleyRpZChlKS5hcHBlbmRDaGlsZChpKX10LmZuJiYodC5kZWxheUZuP3VGdW5jcy5wdXNoKCgoKT0+dC5mbihpKSkpOnQuZm4oaSkpfWZ1bmN0aW9uIGNEaXYoZSx0LGk9e30sbj17fSxsPShlPT57fSkpe2lmKCJyIj09dCYmKHQ9JHJuZCgpKSxjaGVja0VsbW50KGUsdCkpcmV0dXJuO2NvbnN0IGE9JGVsbSgiZGl2Iik7aWYoYS5pZD10LG4mJihPYmplY3QuYXNzaWduKGEsbiksbi5ldmVudExpc3RlbmVyKSlmb3IobGV0IGUgaW4gbi5ldmVudExpc3RlbmVyKWEuYWRkRXZlbnRMaXN0ZW5lcihlLCgoKT0+e24uZXZlbnRMaXN0ZW5lcltlXSh0aGlzKX0pKTtpJiZPYmplY3QuYXNzaWduKGEuc3R5bGUsaSk7JGlkKGUpLmFwcGVuZENoaWxkKGEpLGwoYSl9ZnVuY3Rpb24gY1RhYkJ0bihlLHQsaT0iYyIpe2NvbnN0IG49JGlkKGUpO3QuZm9yRWFjaCgoYXN5bmMoZSxsKT0+e2xldCBhPSRlbG0oImJ1dHRvbiIpO2EuY2xhc3NOYW1lPSJ0YWItYnV0dG9uIixhLnNldEF0dHJpYnV0ZSgiYy10YWItIitpKyItYnRuIiwiIiksYS5pZD1lLmlkKyJCdG4iLGEuaW5uZXJIVE1MPWUudHh0LDA9PT1sP2Euc3R5bGUuYm9yZGVyVG9wUmlnaHRSYWRpdXM9IjBweCI6KGw9PT10Lmxlbmd0aC0xfHwoYS5zdHlsZS5ib3JkZXJUb3BSaWdodFJhZGl1cz0iMHB4IiksYS5zdHlsZS5ib3JkZXJUb3BMZWZ0UmFkaXVzPSIwcHgiKSx1VGFic1tpXXx8KHVUYWJzW2ldPVtdKSx1VGFic1tpXS5wdXNoKGUuaWQpLGEub25jbGljaz0oKT0+e3RhYlN3aXRjaChlLmlkLGksZS5kaXNwbGF5fHwiaW5saW5lLWJsb2NrIil9LG4uYXBwZW5kQ2hpbGQoYSl9KSl9ZnVuY3Rpb24gY0J0bihlLHQsaSxuPShlPT57fSksbD0iIixhPXt9LHM9e30pe2lmKCJyIj09dCYmKHQ9JHJuZCgpKSxjaGVja0VsbW50KGUsdCkpcmV0dXJuO2NvbnN0IG89JGVsbSgiYnV0dG9uIik7aWYoby50eXBlPSJidXR0b24iLG8uY2xhc3NMaXN0LmFkZCgibmV3YnV0dG9uIiksby5pZD10LGkuaW5jbHVkZXMoImZhIGZhIikmJiFpLmluY2x1ZGVzKCI8aSBjbGFzcz0iKSYmKGk9JzxpIGNsYXNzPSInK2krJyIgYXJpYS1oaWRkZW49InRydWUiPjwvaT4nKSxvLmlubmVySFRNTD1pLHMmJihPYmplY3QuYXNzaWduKG8scykscy5ldmVudExpc3RlbmVyKSlmb3IobGV0IGUgaW4gcy5ldmVudExpc3RlbmVyKW8uYWRkRXZlbnRMaXN0ZW5lcihlLCgoKT0+e3MuZXZlbnRMaXN0ZW5lcltlXSh0aGlzKX0pKTthJiZPYmplY3QuYXNzaWduKG8uc3R5bGUsYSksby5vbmNsaWNrPSgpPT57bihvKX0sIiIhPWwmJm8uc2V0QXR0cmlidXRlKCJ0dGlwIixsKTskaWQoZSkuYXBwZW5kQ2hpbGQobyl9ZnVuY3Rpb24gY0hyKGU9cElkLHQ9ITAsaT17fSl7Y29uc3Qgbj0kaWQoZSk7bGV0IGw9JGVsbSgiaHIiKTt0JiYobC5zdHlsZS5tYXJnaW5MZWZ0PSItMjBweCIpLGwuY2xhc3NMaXN0LmFkZCgiaHJDbGFzcyIpLGkmJk9iamVjdC5hc3NpZ24obC5zdHlsZSxpKSxuLmFwcGVuZENoaWxkKGwpfWZ1bmN0aW9uIGNCcihlPXBJZCx0PTEpe2NvbnN0IGk9JGlkKGUpO2ZvcihsZXQgZT0wO2U8dDtlKyspaS5hcHBlbmRDaGlsZCgkZWxtKCJiciIpKX1mdW5jdGlvbiBjQ2hlY2tib3gyKGUsdCxpLG49e3RpcDoiIixjbGFzczpudWxsLGZuQ2xpY2s6bnVsbCxmblNwYXduOm51bGwsbm9DbGllbnQ6ITEsc3R5bGU6bnVsbH0pe2lmKCJyIj09dCYmKHQ9JHJuZCgpKSxjaGVja0VsbW50KGUsdCkpcmV0dXJuO2NvbnN0IGw9JGVsbSgiZGl2Iik7bC5jbGFzc0xpc3QuYWRkKCJlbGVtaXRlbXNfYmciKSxuLmNsYXNzJiZuLmNsYXNzLmZvckVhY2goKGU9PntlJiZsLmNsYXNzTGlzdC5hZGQoZSl9KSksbC5odG1sRm9yPXQsbC5zdHlsZS5kaXNwbGF5PSJpbmxpbmUtZmxleCI7Y29uc3QgYT0kZWxtKCJpbnB1dCIpO2EudHlwZT0iY2hlY2tib3giLGEuaWQ9dCxhLm9uY2hhbmdlPSgpPT57bi5ub0NsaWVudHx8dVNlcnZlcigpLG4uZm5DbGljayYmbi5mbkNsaWNrKGEpfTtjb25zdCBzPSRlbG0oImxhYmVsIik7cy5odG1sRm9yPXQscy5pbm5lckhUTUw9aSxzLmlkPXQrIkxCTCI7Y29uc3Qgbz0kaWQoZSk7bC5hcHBlbmRDaGlsZChhKSxsLmFwcGVuZENoaWxkKHMpO2NvbnN0IHI9JGVsbSgiaSIpO24ubm9ybWFsVGlwfHxudWxsPT1uLnRpcHx8IiI9PW4udGlwfHwoci5jbGFzc05hbWU9ImZhIGZhLXF1ZXN0aW9uLWNpcmNsZSBmYS0yIixyLnNldEF0dHJpYnV0ZSgiYXJpYS1oaWRkZW4iLCJ0cnVlIiksci5zdHlsZS5kaXNwbGF5PSJpbmxpbmUtYmxvY2siLHIuc3R5bGUuZm9udFdlaWdodD0iOTAwIixyLnN0eWxlLmZvbnRTaXplPSIxNXB4IixyLnN0eWxlLm9wYWNpdHk9IjAuNSIsci5zdHlsZS5tYXJnaW5MZWZ0PSI4cHgiLHIuc2V0QXR0cmlidXRlKCJ0dGlwIixuLnRpcCkpLG4uc3R5bGUmJk9iamVjdC5hc3NpZ24obC5zdHlsZSxuLnN0eWxlKSxuLm5vcm1hbFRpcCYmbnVsbCE9bi50aXAmJiIiIT1uLnRpcCYmbC5zZXRBdHRyaWJ1dGUoInR0aXAiLG4udGlwKSxvLmFwcGVuZENoaWxkKGwpLG4ubm9ybWFsVGlwfHxudWxsPT1uLnRpcHx8IiI9PW4udGlwfHxvLmFwcGVuZENoaWxkKHIpLG4ubm9DbGllbnR8fHVCb29sLnB1c2godCksbi5mblNwYXduJiYobi5kZWxheVNwYXduP3VGdW5jcy5wdXNoKCgoKT0+bi5mblNwYXduKGEpKSk6KCRsb2coImluc3RhbnQgZnVuYzoiLHQpLG4uZm5TcGF3bihhKSkpfWZ1bmN0aW9uIGNDaGVja2JveChlLHQsaSxuPSIiLGw9KGU9Pnt9KSxhPSExLHM9e30pe2lmKCJyIj09dCYmKHQ9JHJuZCgpKSxjaGVja0VsbW50KGUsdCkpcmV0dXJuO2NvbnN0IG89JGVsbSgiZGl2Iik7by5jbGFzc0xpc3QuYWRkKCJlbGVtaXRlbXNfYmciKSxvLmh0bWxGb3I9dCxvLnN0eWxlLmRpc3BsYXk9ImlubGluZS1mbGV4Ijtjb25zdCByPSRlbG0oImlucHV0Iik7ci50eXBlPSJjaGVja2JveCIsci5pZD10LHIub25jaGFuZ2U9KCk9PnthfHx1U2VydmVyKCksbChyKX07Y29uc3QgYz0kZWxtKCJsYWJlbCIpO2MuaHRtbEZvcj10LGMuaW5uZXJIVE1MPWksYy5pZD10KyJMQkwiO2NvbnN0IGQ9JGlkKGUpO28uYXBwZW5kQ2hpbGQociksby5hcHBlbmRDaGlsZChjKTtjb25zdCBwPSRlbG0oImkiKTsiIiE9biYmKHAuY2xhc3NOYW1lPSJmYSBmYS1xdWVzdGlvbi1jaXJjbGUgZmEtMiIscC5zZXRBdHRyaWJ1dGUoImFyaWEtaGlkZGVuIiwidHJ1ZSIpLHAuc3R5bGUuZGlzcGxheT0iaW5saW5lLWJsb2NrIixwLnN0eWxlLmZvbnRXZWlnaHQ9IjkwMCIscC5zdHlsZS5mb250U2l6ZT0iMTVweCIscC5zdHlsZS5vcGFjaXR5PSIwLjUiLHAuc3R5bGUubWFyZ2luTGVmdD0iOHB4IixwLnNldEF0dHJpYnV0ZSgidHRpcCIsbikpLHMmJk9iamVjdC5hc3NpZ24oby5zdHlsZSxzKSxkLmFwcGVuZENoaWxkKG8pLCIiIT1uJiZkLmFwcGVuZENoaWxkKHApLGF8fHVCb29sLnB1c2godCl9ZnVuY3Rpb24gY0N1c3RvbXMoZSx0LGk9IiIsbj0oZT0+e30pLGw9e30pe2lmKCJyIj09dCYmKHQ9JHJuZCgpKSxjaGVja0VsbW50KGUsdCkpcmV0dXJuO2NvbnN0IGE9JGlkKGUpLHM9JGVsbSgiaSIpO3MuY2xhc3NOYW1lPSJmYSBmYS1jb2ciLHMuc2V0QXR0cmlidXRlKCJhcmlhLWhpZGRlbiIsInRydWUiKSxzLnN0eWxlLmRpc3BsYXk9ImlubGluZS1ibG9jayIscy5zdHlsZS5mb250V2VpZ2h0PSI5MDAiLHMuc3R5bGUuZm9udFNpemU9IjE1cHgiLHMuc3R5bGUub3BhY2l0eT0iMC41IixzLnN0eWxlLm1hcmdpbkxlZnQ9IjhweCIscy5zdHlsZS5jdXJzb3I9InBvaW50ZXIiLHMuY2lkPXQrIl9kbGciLCIiIT1pJiZzLnNldEF0dHJpYnV0ZSgidHRpcCIsaSkscy5vbmNsaWNrPWFzeW5jKCk9PntkbGcuc2hvdyhzLmNpZCl9LGRsZy5jcmVhdGUoZSxzLmNpZCx7c3R5bGV6Omx9KSxuKHMpLGEuYXBwZW5kQ2hpbGQocyl9ZnVuY3Rpb24gY1NsckZsb2F0KGUsdCxpLG4sbCxhLHMsbz17dGlwOiIiLGZuSW5wdXQ6bnVsbCxmbjpudWxsLGRlbGF5Rm46ITF9KXtpZigiciI9PXQmJih0PSRybmQoKSksY2hlY2tFbG1udChlLHQpKXJldHVybjtsZXQgcj1TdHJpbmcoYSkuc3BsaXQoIi4iKVsxXXx8IiI7cj1yLmxlbmd0aDtjb25zdCBjPSRlbG0oImRpdiIpO2MuY2xhc3NMaXN0LmFkZCgibGVuZ3RoIiwiZl9zbGlkZXJfYmciKSxjLnNldEF0dHJpYnV0ZSgiZGF0YS1taW4iLG4pLGMuc2V0QXR0cmlidXRlKCJkYXRhLW1heCIsbCksYy5zdHlsZS5kaXNwbGF5PSJpbmxpbmUtZmxleCI7Y29uc3QgZD0kZWxtKCJkaXYiKTtkLmNsYXNzTGlzdC5hZGQoImxfdGl0bGUiLCJmX3RpdGxlIiksZC5zZXRBdHRyaWJ1dGUoImRhdGEtbGVuZ3RoIixzKSxkLnRleHRDb250ZW50PWkrIjogIjtjb25zdCBwPSRlbG0oImlucHV0Iik7cC5jbGFzc0xpc3QuYWRkKCJudW1iZXJzbGlkZXIiKSxwLnR5cGU9Im51bWJlciIscC5wYXR0ZXJuPSJbMC05XSoiLHAuaW5wdXRNb2RlPSJudW1lcmljIixwLmlkPXQscC5taW49bixwLm1heD1sLHAuc3RlcD1hLHAudmFsdWU9cyxwLm9uaW5wdXQ9KCk9PntvLmZufHx1U2VydmVyKCksby5mbklucHV0JiZvLmZuSW5wdXQocCksYXBwbHlGaWxsKHAsITAscixwLnZhbHVlKX07Y29uc3QgdT0kZWxtKCJidXR0b24iKTt1LmNsYXNzTGlzdC5hZGQoImNvbnRyb2xzLW51bWJlciIpLHUuc3R5bGUuZGlzcGxheT0iaW5saW5lIix1LnN0eWxlLm1hcmdpbkxlZnQ9IjhweCIsdS5zdHlsZS5tYXJnaW5SaWdodD0iOHB4Iix1LmlubmVySFRNTD0iJiM4NzIyOyIudHJpbSgpLHUub25jbGljaz0oKT0+e3N1bVJlc3RCdG4odCwwLG4sbCwxLHIpLG8uZm58fHVTZXJ2ZXIoKSxvLmZuSW5wdXQmJm8uZm5JbnB1dChwKSxhcHBseUZpbGwocCwhMCxyLHAudmFsdWUpfTtjb25zdCBnPSRlbG0oImJ1dHRvbiIpO2cuY2xhc3NMaXN0LmFkZCgiY29udHJvbHMtbnVtYmVyIiksZy5zdHlsZS5kaXNwbGF5PSJpbmxpbmUiLGcuc3R5bGUubWFyZ2luTGVmdD0iOHB4IixnLnN0eWxlLm1hcmdpblJpZ2h0PSI4cHgiLGcuaW5uZXJIVE1MPSImIzQzOyIudHJpbSgpLGcub25jbGljaz0oKT0+e3N1bVJlc3RCdG4odCwxLG4sbCwxLHIpLG8uZm58fHVTZXJ2ZXIoKSxvLmZuSW5wdXQmJm8uZm5JbnB1dChwKSxhcHBseUZpbGwocCwhMCxyLHAudmFsdWUpfTtjb25zdCBmPSRpZChlKTtjLmFwcGVuZENoaWxkKGQpLGMuYXBwZW5kQ2hpbGQodSksYy5hcHBlbmRDaGlsZChwKSxjLmFwcGVuZENoaWxkKGcpO2NvbnN0IGg9JGVsbSgiaSIpOyhvLnRpcCYmIiIhPW8udGlwfHwic3RyaW5nIj09dHlwZW9mIG8mJiIiIT1vKSYmKGguY2xhc3NOYW1lPSJmYSBmYS1xdWVzdGlvbi1jaXJjbGUgZmEtMiIsaC5zZXRBdHRyaWJ1dGUoImFyaWEtaGlkZGVuIiwidHJ1ZSIpLGguc3R5bGUuZGlzcGxheT0iaW5saW5lLWJsb2NrIixoLnN0eWxlLmZvbnRXZWlnaHQ9IjkwMCIsaC5zdHlsZS5mb250U2l6ZT0iMTVweCIsaC5zdHlsZS5vcGFjaXR5PSIwLjUiLGguc3R5bGUubWFyZ2luTGVmdD0iOHB4Iiwic3RyaW5nIj09dHlwZW9mIG8/aC5zZXRBdHRyaWJ1dGUoInR0aXAiLG8pOmguc2V0QXR0cmlidXRlKCJ0dGlwIixvLnRpcCkpLGYuYXBwZW5kQ2hpbGQoYyksKG8udGlwJiYiIiE9by50aXB8fCJzdHJpbmciPT10eXBlb2YgbyYmIiIhPW8pJiZmLmFwcGVuZENoaWxkKGgpLG8uZm4/by5kZWxheUZuP3VGdW5jcy5wdXNoKCgoKT0+by5mbihwKSkpOigkbG9nKCJzbGlkZXJmbG9hdC0+aW5zdGFudCBmdW5jOiIsdCksby5mbihwKSk6dUZsdC5wdXNoKHQpfWZ1bmN0aW9uIGNJbWcoZSx0LGksbixsLGE9e30scz17fSl7aWYoInIiPT10JiYodD0kcm5kKCkpLGNoZWNrRWxtbnQoZSx0KSlyZXR1cm47Y29uc3Qgbz0kaWQoZSkscj0kZWxtKCJpbWciKTtpZihyLnNldEF0dHJpYnV0ZSgiaWQiLHQpLHIuc2V0QXR0cmlidXRlKCJzcmMiLGkpLHIuc2V0QXR0cmlidXRlKCJhbHQiLCJ1X2F2YXRhciIpLHIuc2V0QXR0cmlidXRlKCJ3aWR0aCIsbiksci5zZXRBdHRyaWJ1dGUoImhlaWdodCIsbCkscyYmKE9iamVjdC5hc3NpZ24ocixzKSxzLmV2ZW50TGlzdGVuZXIpKWZvcihsZXQgZSBpbiBzLmV2ZW50TGlzdGVuZXIpci5hZGRFdmVudExpc3RlbmVyKGUsKHQ9PntzLmV2ZW50TGlzdGVuZXJbZV0odGhpcyx0KX0pKTthJiZPYmplY3QuYXNzaWduKHIuc3R5bGUsYSksby5hcHBlbmRDaGlsZChyKX1mdW5jdGlvbiBjVGV4dEFyZWEoZSx0LGk9ITEsbj0iIixsPXt9LGE9e30pe2lmKCJyIj09dCYmKHQ9JHJuZCgpKSxjaGVja0VsbW50KGUsdCkpcmV0dXJuO2NvbnN0IHM9JGVsbSgiZGl2Iik7aWYoIiIhPT1uKXtzLmNsYXNzTGlzdC5hZGQoInRleHRib3giKTtjb25zdCBlPSRlbG0oImxhYmVsIik7ZS50ZXh0Q29udGVudD1uLnRyaW0oKSxlLmlkPXQrImxibCIsZS5zdHlsZS5kaXNwbGF5PWk/Im5vbmUiOiJpbmxpbmUtYmxvY2siLGUuc2V0QXR0cmlidXRlKCJmb3IiLHQpLGwmJmwubGFiZWx6JiZPYmplY3QuYXNzaWduKHMuc3R5bGUsbC5sYWJlbHopLHMuYXBwZW5kQ2hpbGQoZSl9Y29uc3Qgbz0kZWxtKCJ0ZXh0YXJlYSIpO2lmKG8uaWQ9dCxhJiYoT2JqZWN0LmFzc2lnbihvLGEpLGEuZXZlbnRMaXN0ZW5lcikpZm9yKGxldCBlIGluIGEuZXZlbnRMaXN0ZW5lcilvLmFkZEV2ZW50TGlzdGVuZXIoZSwoKCk9PnthLmV2ZW50TGlzdGVuZXJbZV0odGhpcyl9KSk7aWYoby5zdHlsZS5kaXNwbGF5PWk/Im5vbmUiOiJpbmxpbmUtYmxvY2siLGwmJihPYmplY3QuYXNzaWduKG8uc3R5bGUsbCksbC50ZXh0Ym94JiZPYmplY3QuYXNzaWduKHMuc3R5bGUsbC50ZXh0Ym94KSksIiIhPT1uKXMuYXBwZW5kQ2hpbGQobyk7ZWxzZXskaWQoZSkuYXBwZW5kQ2hpbGQobyl9Y29uc3Qgcj0kaWQoZSk7IiI9PT1uJiZyP3IuYXBwZW5kQ2hpbGQobyk6ciYmci5hcHBlbmRDaGlsZChzKX1mdW5jdGlvbiBjVHh0Ym94KGUsdCxpPSExLG49IiIsbD0iIixhPXt9LHM9e30sbz0hMSl7aWYoInIiPT10JiYodD0kcm5kKCkpLGNoZWNrRWxtbnQoZSx0KSlyZXR1cm47Y29uc3Qgcj0kZWxtKCJkaXYiKTtpZigiIiE9PW4pe3IuY2xhc3NMaXN0LmFkZCgidGV4dGJveCIpO2NvbnN0IGU9JGVsbSgibGFiZWwiKTtlLnRleHRDb250ZW50PW4udHJpbSgpLGUuaWQ9dCsibGJsIixlLnN0eWxlLmRpc3BsYXk9aT8ibm9uZSI6ImlubGluZS1ibG9jayIsZS5zZXRBdHRyaWJ1dGUoImZvciIsdCksYSYmYS5sYWJlbHomJk9iamVjdC5hc3NpZ24oci5zdHlsZSxhLmxhYmVseiksci5hcHBlbmRDaGlsZChlKX1jb25zdCBjPSRlbG0oImlucHV0Iik7aWYoYy5zZXRBdHRyaWJ1dGUoInR5cGUiLCJ0ZXh0IiksYy5zZXRBdHRyaWJ1dGUoImlkIix0KSxvJiZjLnNldEF0dHJpYnV0ZSgibm9jaGVjayIsIiIpLCIiIT1sJiZjLnNldEF0dHJpYnV0ZSgidHRpcCIsbCkscyYmKE9iamVjdC5hc3NpZ24oYyxzKSxzLmV2ZW50TGlzdGVuZXIpKWZvcihsZXQgZSBpbiBzLmV2ZW50TGlzdGVuZXIpYy5hZGRFdmVudExpc3RlbmVyKGUsKHQ9PntzLmV2ZW50TGlzdGVuZXJbZV0oYyx0KX0pKTtpZihjLnN0eWxlLmRpc3BsYXk9aT8ibm9uZSI6ImlubGluZS1ibG9jayIsYSYmKE9iamVjdC5hc3NpZ24oYy5zdHlsZSxhKSxhLnRleHRib3gmJk9iamVjdC5hc3NpZ24oci5zdHlsZSxhLnRleHRib3gpKSwiIiE9PW4pci5hcHBlbmRDaGlsZChjKTtlbHNleyRpZChlKS5hcHBlbmRDaGlsZChjKX1jb25zdCBkPSRpZChlKTsiIj09PW4mJmQ/ZC5hcHBlbmRDaGlsZChjKTpkJiZkLmFwcGVuZENoaWxkKHIpfWZ1bmN0aW9uIGNUYWJsZShlLHQsaSxuPXt9LGw9e30pe2lmKCJyIj09dCYmKHQ9JHJuZCgpKSxjaGVja0VsbW50KGUsdCkpcmV0dXJuO2NvbnN0IGE9JGVsbSgidGFibGUiKTtpZigiIiE9aSYmKGEuaW5uZXJIVE1MPWkudHJpbSgpKSxhLmlkPXQsbCYmKE9iamVjdC5hc3NpZ24oYSxsKSxsLmV2ZW50TGlzdGVuZXIpKWZvcihsZXQgZSBpbiBsLmV2ZW50TGlzdGVuZXIpYS5hZGRFdmVudExpc3RlbmVyKGUsKCgpPT57bC5ldmVudExpc3RlbmVyW2VdKHRoaXMpfSkpO24mJk9iamVjdC5hc3NpZ24oYS5zdHlsZSxuKTskaWQoZSkuYXBwZW5kQ2hpbGQoYSl9ZnVuY3Rpb24gY1RleHQoZSx0LGksbj17ZWw6bnVsbCxzdDpudWxsLHN0MjpudWxsfSl7aWYoInIiPT10JiYodD0kcm5kKCkpLGNoZWNrRWxtbnQoZSx0KSlyZXR1cm47Y29uc3QgbD0kZWxtKCJwIik7aWYobC5jbGFzc0xpc3QuYWRkKCJ0ZXh0IiksaSYmKGwuaW5uZXJIVE1MPWkudHJpbSgpKSxsLmlkPXQsbi5ldmVudHMpZm9yKGxldCBlIGluIG4uZXZlbnRzKWwuYWRkRXZlbnRMaXN0ZW5lcihlLCh0PT57bi5ldmVudHNbZV0obCx0KX0pKTtuLmVsJiZPYmplY3QuYXNzaWduKGwsbi5lbCksbi5zdCYmT2JqZWN0LmFzc2lnbihsLnN0eWxlLG4uc3QpLG4uc3QyJiZPYmplY3QuYXNzaWduKGwuc3R5bGUsbi5zdDIpOyRpZChlKS5hcHBlbmRDaGlsZChsKSxudWxsIT1uLmZuJiZuLmZuKGwpfWZ1bmN0aW9uIGNDb21ib0JveDQoZSx0LGk9e3N0Om51bGwsb3B0czpudWxsLG9wdHNFbnVtOiExLGZuU3Bhd246bnVsbCxkZWxheVNwYXduOm51bGx9KXtjRGEoZSx7dHlwZToic2VsZWN0IixpZDp0LGNsczoic2VsZWN0LWRyb3Bkb3duIixzdDppLnN0LGZuOmU9PntpLm9wdHMmJmkub3B0cy5mb3JFYWNoKCgodCxuKT0+e2NvbnN0IGw9JGVsbSgib3B0aW9uIik7aS5vcHRzRW51bT9sLnZhbHVlPW46bC52YWx1ZT10LGwudGV4dD10LCRpZChlLmlkKS5hZGQobCl9KSksbnVsbCE9aS5mblNwYXduJiYiZnVuY3Rpb24iPT10eXBlb2YgaS5mblNwYXduJiZpLmZuU3Bhd24oZSl9LGRlbGF5Rm46aS5kZWxheVNwYXdufSl9ZnVuY3Rpb24gY0NvbWJvQm94MihlLHQsaSxuPSExLGw9IiIsYT17fSl7aWYoInIiPT10JiYodD0kcm5kKCkpLGNoZWNrRWxtbnQoZSx0KSlyZXR1cm47Y29uc3Qgcz0kZWxtKCJzZWxlY3QiKTtzLmNsYXNzTGlzdC5hZGQoInNlbGVjdC1kcm9wZG93biIpLHMuaWQ9dCwiIiE9bCYmcy5zZXRBdHRyaWJ1dGUoInR0aXAiLGwpLGkuZm9yRWFjaCgoKGUsdCk9Pntjb25zdCBpPSRlbG0oIm9wdGlvbiIpO2kudmFsdWU9dCxpLnRleHQ9ZSxzLmFkZChpKX0pKSxzLnN0eWxlLmRpc3BsYXk9MT09bj8ibm9uZSI6ImlubGluZS1ibG9jayIsYSYmT2JqZWN0LmFzc2lnbihzLnN0eWxlLGEpOyRpZChlKS5hcHBlbmRDaGlsZChzKX1mdW5jdGlvbiBjQ29tYm9Cb3goZSx0LGksbixsLGE9ITEscz0iIixvPShlPT57fSkscj17fSl7aWYoInIiPT10JiYodD0kcm5kKCkpLGNoZWNrRWxtbnQoZSx0KSlyZXR1cm47Y29uc3QgYz0kZWxtKCJkaXYiKTsiIiE9aSYmKGMuY2xhc3NMaXN0LmFkZCgidGV4dCIpLGMudGV4dENvbnRlbnQ9aS50cmltKCkpO2NvbnN0IGQ9JGVsbSgic2VsZWN0Iik7ZC5jbGFzc0xpc3QuYWRkKCJzZWxlY3QtZHJvcGRvd24iKSxkLmlkPXQsZC5zdHlsZS5oZWlnaHQ9IjQycHgiLGEmJihkLnN0eWxlLm1hcmdpblJpZ2h0PSIxMHB4IiksZC5vbmNoYW5nZT0oKT0+e3puU0ludCh0LG4sbCksbyhkKX0sciYmKE9iamVjdC5hc3NpZ24oZC5zdHlsZSxyKSxyLnRleHRfZGl2JiZPYmplY3QuYXNzaWduKGMuc3R5bGUsci50ZXh0X2RpdikpO2NvbnN0IHA9JGlkKGUpOyIiIT1pJiZwLmFwcGVuZENoaWxkKGMpLHAuYXBwZW5kQ2hpbGQoZCk7Y29uc3QgdT0kZWxtKCJpIik7IiIhPXMmJih1LmNsYXNzTmFtZT0iZmEgZmEtcXVlc3Rpb24tY2lyY2xlIGZhLTIiLHUuc2V0QXR0cmlidXRlKCJhcmlhLWhpZGRlbiIsInRydWUiKSx1LnN0eWxlLmRpc3BsYXk9ImlubGluZSIsdS5zdHlsZS5wb3NpdGlvbj0icmVsYXRpdmUiLHUuc3R5bGUubWFyZ2luTGVmdD0iOHB4Iix1LnN0eWxlLmZvbnRXZWlnaHQ9IjkwMCIsdS5zdHlsZS5mb250U2l6ZT0iMTVweCIsdS5zdHlsZS5vcGFjaXR5PSIwLjUiLHUuc2V0QXR0cmlidXRlKCJ0dGlwIixzKSxwLmFwcGVuZENoaWxkKHUpKSx1SW50Mi5wdXNoKHQpfWZ1bmN0aW9uIGNMb2FkaW5nKGU9cElkLHQsaT17fSl7aWYoY2hlY2tFbG1udChlLHQpKXJldHVybjtjb25zdCBuPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImRpdiIpO24uY2xhc3NMaXN0LmFkZCgibG9hZGVyIiwibG9hZGVyLS1zdHlsZTgiKSxuLmlkPXQ7Y29uc3QgbD1kb2N1bWVudC5jcmVhdGVFbGVtZW50TlMoImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiwic3ZnIik7bC5zZXRBdHRyaWJ1dGUoInZlcnNpb24iLCIxLjEiKSxsLnNldEF0dHJpYnV0ZSgid2lkdGgiLCIyNHB4IiksbC5zZXRBdHRyaWJ1dGUoImhlaWdodCIsIjMwcHgiKSxsLnNldEF0dHJpYnV0ZSgidmlld0JveCIsIjAgMCAyNCAzMCIpLGwuc3R5bGUuY3NzVGV4dD0iZW5hYmxlLWJhY2tncm91bmQ6bmV3IDAgMCA1MCA1MDsiO2ZvcihsZXQgZT0wO2U8MztlKyspe2NvbnN0IHQ9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudE5TKCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIsInJlY3QiKTt0LnNldEF0dHJpYnV0ZSgieCIsIiIrOCplKSx0LnNldEF0dHJpYnV0ZSgieSIsIjEwIiksdC5zZXRBdHRyaWJ1dGUoIndpZHRoIiwiNCIpLHQuc2V0QXR0cmlidXRlKCJoZWlnaHQiLCIxMCIpLHQuc2V0QXR0cmlidXRlKCJmaWxsIiwidmFyKC0tYy1wcmltYXJ5KSIpLHQuc2V0QXR0cmlidXRlKCJvcGFjaXR5IiwiMC4yIik7Y29uc3QgaT1kb2N1bWVudC5jcmVhdGVFbGVtZW50TlMoImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiwiYW5pbWF0ZSIpO2kuc2V0QXR0cmlidXRlKCJhdHRyaWJ1dGVOYW1lIiwib3BhY2l0eSIpLGkuc2V0QXR0cmlidXRlKCJhdHRyaWJ1dGVUeXBlIiwiWE1MIiksaS5zZXRBdHRyaWJ1dGUoInZhbHVlcyIsIjAuMjsgMTsgLjIiKSxpLnNldEF0dHJpYnV0ZSgiYmVnaW4iLC4xNSplKyJzIiksaS5zZXRBdHRyaWJ1dGUoImR1ciIsIjAuNnMiKSxpLnNldEF0dHJpYnV0ZSgicmVwZWF0Q291bnQiLCJpbmRlZmluaXRlIik7Y29uc3Qgbj1kb2N1bWVudC5jcmVhdGVFbGVtZW50TlMoImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiwiYW5pbWF0ZSIpO24uc2V0QXR0cmlidXRlKCJhdHRyaWJ1dGVOYW1lIiwiaGVpZ2h0Iiksbi5zZXRBdHRyaWJ1dGUoImF0dHJpYnV0ZVR5cGUiLCJYTUwiKSxuLnNldEF0dHJpYnV0ZSgidmFsdWVzIiwiMTA7IDIwOyAxMCIpLG4uc2V0QXR0cmlidXRlKCJiZWdpbiIsLjE1KmUrInMiKSxuLnNldEF0dHJpYnV0ZSgiZHVyIiwiMC42cyIpLG4uc2V0QXR0cmlidXRlKCJyZXBlYXRDb3VudCIsImluZGVmaW5pdGUiKTtjb25zdCBhPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnROUygiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciLCJhbmltYXRlIik7YS5zZXRBdHRyaWJ1dGUoImF0dHJpYnV0ZU5hbWUiLCJ5IiksYS5zZXRBdHRyaWJ1dGUoImF0dHJpYnV0ZVR5cGUiLCJYTUwiKSxhLnNldEF0dHJpYnV0ZSgidmFsdWVzIiwiMTA7IDU7IDEwIiksYS5zZXRBdHRyaWJ1dGUoImJlZ2luIiwuMTUqZSsicyIpLGEuc2V0QXR0cmlidXRlKCJkdXIiLCIwLjZzIiksYS5zZXRBdHRyaWJ1dGUoInJlcGVhdENvdW50IiwiaW5kZWZpbml0ZSIpLHQuYXBwZW5kQ2hpbGQoaSksdC5hcHBlbmRDaGlsZChuKSx0LmFwcGVuZENoaWxkKGEpLGwuYXBwZW5kQ2hpbGQodCl9bi5hcHBlbmRDaGlsZChsKSxpJiZPYmplY3QuYXNzaWduKG4uc3R5bGUsaSk7KCRpZChlKXx8ZG9jdW1lbnQuYm9keSkuYXBwZW5kQ2hpbGQobil9ZnVuY3Rpb24gY1NsckludChlLHQsaSxuLGwsYSxzLG89IiIscj17fSl7aWYoInIiPT10JiYodD0kcm5kKCkpLGNoZWNrRWxtbnQoZSx0KSlyZXR1cm47Y29uc3QgYz0kaWQoZSksZD0kZWxtKCJkaXYiKTtkLmNsYXNzTGlzdC5hZGQoImxlbmd0aCIsInJfc2xpZGVyX2JnIiksZC5zZXRBdHRyaWJ1dGUoImRhdGEtbWluIixuKSxkLnNldEF0dHJpYnV0ZSgiZGF0YS1tYXgiLGwpLGQuc3R5bGUuZGlzcGxheT0iaW5saW5lLWZsZXgiLHImJnIuYmd6JiZPYmplY3QuYXNzaWduKGQuc3R5bGUsci5iZ3opO2NvbnN0IHA9JGVsbSgiZGl2Iik7cC5jbGFzc0xpc3QuYWRkKCJsX3RpdGxlIiwiZl90aXRsZSIpLHAuc2V0QXR0cmlidXRlKCJkYXRhLWxlbmd0aCIscykscC50ZXh0Q29udGVudD1pKyI6ICIsciYmci50aXRsZXomJk9iamVjdC5hc3NpZ24ocC5zdHlsZSxyLnRpdGxleik7Y29uc3QgdT0kZWxtKCJpbnB1dCIpLGc9JGVsbSgiYnV0dG9uIik7Zy5jbGFzc05hbWU9ImNvbnRyb2xzLW51bWJlciIsZy5zdHlsZS5kaXNwbGF5PSJpbmxpbmUiLGcuc3R5bGUubWFyZ2luTGVmdD0iOHB4IixnLnN0eWxlLm1hcmdpblJpZ2h0PSI4cHgiLGcuaW5uZXJIVE1MPSImIzg3MjI7Ii50cmltKCksZy5vbmNsaWNrPSgpPT57c3VtUmVzdEJ0bih0LDAsbixsKSx6blNJbnQodCxuLGwpLGFwcGx5RmlsbCh1KX07Y29uc3QgZj0kZWxtKCJidXR0b24iKTtmLmNsYXNzTmFtZT0iY29udHJvbHMtbnVtYmVyIixmLnN0eWxlLmRpc3BsYXk9ImlubGluZSIsZi5zdHlsZS5tYXJnaW5MZWZ0PSI4cHgiLGYuc3R5bGUubWFyZ2luUmlnaHQ9IjhweCIsZi5pbm5lckhUTUw9IiYjNDM7Ii50cmltKCksZi5vbmNsaWNrPSgpPT57c3VtUmVzdEJ0bih0LDEsbixsKSx6blNJbnQodCxuLGwpLGFwcGx5RmlsbCh1KX0sdS5jbGFzc0xpc3QuYWRkKCJzbGlkZXIiKSx1LnNldEF0dHJpYnV0ZSgiaWQiLHQpLHUuc2V0QXR0cmlidXRlKCJ0eXBlIiwicmFuZ2UiKSx1LnNldEF0dHJpYnV0ZSgibWluIixuKSx1LnNldEF0dHJpYnV0ZSgibWF4IixsKSx1LnNldEF0dHJpYnV0ZSgic3RlcCIsYSksdS5zZXRBdHRyaWJ1dGUoInZhbHVlIixzKSx1Lm9uY2hhbmdlPSgpPT57em5TSW50KHQsbixsKSxhcHBseUZpbGwodSl9LGQuYXBwZW5kQ2hpbGQocCksZC5hcHBlbmRDaGlsZChnKSxkLmFwcGVuZENoaWxkKHUpLGQuYXBwZW5kQ2hpbGQoZiksYy5hcHBlbmRDaGlsZChkKTtjb25zdCBoPSRlbG0oImkiKTsiIiE9byYmKGguY2xhc3NOYW1lPSJmYSBmYS1xdWVzdGlvbi1jaXJjbGUgZmEtMiIsaC5zZXRBdHRyaWJ1dGUoImFyaWEtaGlkZGVuIiwidHJ1ZSIpLGguc3R5bGUuZGlzcGxheT0iaW5saW5lIixoLnN0eWxlLnBvc2l0aW9uPSJyZWxhdGl2ZSIsaC5zdHlsZS5tYXJnaW5MZWZ0PSI4cHgiLGguc3R5bGUuZm9udFdlaWdodD0iOTAwIixoLnN0eWxlLmZvbnRTaXplPSIxNXB4IixoLnN0eWxlLm9wYWNpdHk9IjAuNSIsciYmci50dGlwcyYmT2JqZWN0LmFzc2lnbihoLnN0eWxlLHIudHRpcHMpLGguc2V0QXR0cmlidXRlKCJ0dGlwIixvKSxjLmFwcGVuZENoaWxkKGgpKSx1SW50LnB1c2godCl9ZnVuY3Rpb24gdVNsaWRlcnMoKXtkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCIucl9zbGlkZXJfYmciKS5mb3JFYWNoKChlPT57Y29uc3QgdD1lLnF1ZXJ5U2VsZWN0b3IoIi5zbGlkZXIiKSxpPWUucXVlcnlTZWxlY3RvcigiLmxfdGl0bGUiKTt0LmFkZEV2ZW50TGlzdGVuZXIoImlucHV0IiwoZT0+e2kuc2V0QXR0cmlidXRlKCJkYXRhLWxlbmd0aCIsZS50YXJnZXQudmFsdWUpLGFwcGx5RmlsbChlLnRhcmdldCl9KSksYXBwbHlGaWxsKHQpfSkpO2RvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoIi5mX3NsaWRlcl9iZyIpLmZvckVhY2goKGFzeW5jIGU9Pntjb25zdCB0PWUucXVlcnlTZWxlY3RvcigiLm51bWJlcnNsaWRlciIpO2lmKHQpe2FwcGx5RmlsbCh0LCEwLChTdHJpbmcodC5zdGVwKS5zcGxpdCgiLiIpWzFdfHwiIikubGVuZ3RoLHQudmFsdWUpfX0pKX1mdW5jdGlvbiBhcHBseUZpbGwoZSx0PSExLGk9MSxuKXtpZih0KXJldHVybiBlLnBhcmVudE5vZGUucXVlcnlTZWxlY3RvcigiLmxfdGl0bGUiKS5zZXRBdHRyaWJ1dGUoImRhdGEtbGVuZ3RoIixwYXJzZUZsb2F0KG4pLnRvRml4ZWQoaSkpLGUuc3R5bGUuYmFja2dyb3VuZD1jU3R5bGVzLmJnU2xpZGVycyxlLnN0eWxlLmNvbG9yPSJ2YXIoLS1jLXRleHQpIixlLnN0eWxlLmJvcmRlclJhZGl1cz0iNXB4Iix2b2lkKGUuc3R5bGUuYm9yZGVyPSIxcHggc29saWQgdmFyKC0tYy1jb250b3Jub3MpIik7Y29uc3QgbD0oMTAwKihlLnZhbHVlLWUubWluKS8oZS5tYXgtZS5taW4pKS50b0ZpeGVkKDEpLGE9YGxpbmVhci1ncmFkaWVudCg5MGRlZywgdmFyKC0tYy1wcmltYXJ5KSAwJSwgdmFyKC0tYy1zZWNvbmRhcnkpICR7bH0lLCAke2NTdHlsZXMuYmdTbGlkZXJzfSAke2x9JSwgJHtjU3R5bGVzLmJnU2xpZGVyc30gMTAwJSlgO2Uuc3R5bGUuYmFja2dyb3VuZD1hLGUucGFyZW50Tm9kZS5xdWVyeVNlbGVjdG9yKCIubF90aXRsZSIpLnNldEF0dHJpYnV0ZSgiZGF0YS1sZW5ndGgiLGUudmFsdWUpfWZ1bmN0aW9uIHN1bVJlc3RCdG4oZSx0LGksbixsPTAsYT0xKXtudWxsIT0kaWQoZSk/bD90PyRpZChlKS52YWx1ZT5uPyRpZChlKS52YWx1ZT1wYXJzZUZsb2F0KG4pOiRpZChlKS52YWx1ZT0ocGFyc2VGbG9hdCgkaWQoZSkudmFsdWUpK3BhcnNlRmxvYXQoJGlkKGUpLnN0ZXApKS50b0ZpeGVkKGEpOiRpZChlKS52YWx1ZTxpPyRpZChlKS52YWx1ZT1wYXJzZUZsb2F0KG4pOiRpZChlKS52YWx1ZT0ocGFyc2VGbG9hdCgkaWQoZSkudmFsdWUpLXBhcnNlRmxvYXQoJGlkKGUpLnN0ZXApKS50b0ZpeGVkKGEpOnQ/JGlkKGUpLnZhbHVlPm4/JGlkKGUpLnZhbHVlPXBhcnNlSW50KG4pOiRpZChlKS52YWx1ZT1wYXJzZUZsb2F0KCRpZChlKS52YWx1ZSkrcGFyc2VGbG9hdCgkaWQoZSkuc3RlcCk6JGlkKGUpLnZhbHVlPGk/JGlkKGUpLnZhbHVlPXBhcnNlSW50KG4pOiRpZChlKS52YWx1ZT1wYXJzZUZsb2F0KCRpZChlKS52YWx1ZSktcGFyc2VGbG9hdCgkaWQoZSkuc3RlcCk6JGxvZyhlLCJkb2VzbnQgZXhpc3QiKX1mdW5jdGlvbiBzdHJUb0Jvb2woZSl7aWYoInN0cmluZyIhPXR5cGVvZiBlKXJldHVybiBCb29sZWFuKGUpO3N3aXRjaChlLnRvTG93ZXJDYXNlKCkudHJpbSgpKXtjYXNlInRydWUiOmNhc2UieWVzIjpjYXNlIjEiOnJldHVybiEwO2Nhc2UiZmFsc2UiOmNhc2Uibm8iOmNhc2UiMCI6Y2FzZSBudWxsOnJldHVybiExO2RlZmF1bHQ6cmV0dXJuIEJvb2xlYW4oZSl9fWZ1bmN0aW9uIHpuQm9vbChlKXskLmdldCgiL2dfYm9vbD9mZWF0dXJlPSIrZSwodD0+e251bGwhPSRpZChlKT8kaWQoZSkuY2hlY2tlZD1zdHJUb0Jvb2wodCk6JGxvZyhlLCJkb2VzbnQgZXhpc3QiKX0pKX1mdW5jdGlvbiB6bkludChlLHQ9ITApeyQuZ2V0KCIvZ19pbnQ/ZmVhdHVyZT0iK2UsKGk9PntudWxsIT0kaWQoZSk/KCRpZChlKS52YWx1ZT1pLGUuaW5jbHVkZXMoInRoZW1lU2VsZWN0IikmJiRpZChlKS5kaXNwYXRjaEV2ZW50KG5ldyBFdmVudCgiY2hhbmdlIikpLHQmJm51bGwhPSRpZChlKyJ6IikmJigkaWQoZSsieiIpLmlubmVySFRNTD0kaWQoZSkudmFsdWUpKTokbG9nKGUsImRvZXNudCBleGlzdCIpfSkpfWZ1bmN0aW9uIHpuRmxvYXQoZSl7JC5nZXQoIi9nX2Zsb2F0P2ZlYXR1cmU9IitlLCh0PT57aWYobnVsbD09JGlkKGUpKXJldHVybiB2b2lkICRsb2coZSwiZG9lc250IGV4aXN0Iik7bGV0IGk9U3RyaW5nKCRpZChlKS5zdGVwKS5zcGxpdCgiLiIpWzFdfHwiIjskaWQoZSkudmFsdWU9cGFyc2VGbG9hdCh0KS50b0ZpeGVkKGkubGVuZ3RoKSxudWxsIT0kaWQoZSsieiIpJiYoJGlkKGUrInoiKS5pbm5lckhUTUw9JGlkKGUpLnZhbHVlKX0pKX1mdW5jdGlvbiB6blNCb29sKGUpe2xldCB0PSRpZChlKTtpZihudWxsPT10KXJldHVybiB2b2lkICRsb2coZSwiZG9lc250IGV4aXN0Iik7bGV0IGk9dC5jaGVja2VkOyQuZ2V0KCIvc19ib29sP2ZlYXR1cmU9IitlKyImdmFsPSIraSwoZT0+e30pKX1mdW5jdGlvbiB6blNJbnQoZSx0PTAsaT0wKXtsZXQgbj0kaWQoZSk7aWYobnVsbD09bilyZXR1cm4gdm9pZCAkbG9nKGUrIiBub3QgZm91bmQiKTtsZXQgbD1uLnZhbHVlOzA9PXQmJjA9PWk/JC5nZXQoIi9zX2ludD9mZWF0dXJlPSIrZSsiJnZhbD0iK2wsKHQ9PntsZXQgaT0kaWQoZSsieiIpO251bGw9PWkmJm51bGw9PWl8fChpLmlubmVySFRNTD10KX0pKTpwYXJzZUludChsKT49cGFyc2VJbnQodCkmJnBhcnNlSW50KGwpPD1wYXJzZUludChpKT8kLmdldCgiL3NfaW50P2ZlYXR1cmU9IitlKyImdmFsPSIrbCwodD0+e2xldCBpPSRpZChlKyJ6Iik7bnVsbD09aSYmbnVsbD09aXx8KGkuaW5uZXJIVE1MPXQpfSkpOiRsb2coIm1pbm1heCBvdmVycGFzc2VkIHwgIixsLHQsaSl9ZnVuY3Rpb24gem5TRmxvYXQoZSl7bGV0IHQ9JGlkKGUpO2lmKG51bGw9PXQpcmV0dXJuIHZvaWQgJGxvZyhlLCJkb2VzbnQgZXhpc3QiKTtsZXQgaT1wYXJzZUZsb2F0KHQudmFsdWUpLG49cGFyc2VGbG9hdCh0Lm1pbiksbD1wYXJzZUZsb2F0KHQubWF4KTtpPj1uJiZpPD1sJiYkLmdldCgiL3NfZmxvYXQ/ZmVhdHVyZT0iK2UrIiZ2YWw9IitpLCh0PT57bnVsbCE9JGlkKGUrInoiKSYmKCRpZChlKyJ6IikuaW5uZXJIVE1MPXQpfSkpfWZ1bmN0aW9uIHpuU0luZm8oZSx0LGk9KCgpPT57fSkpeyQuZ2V0KCIvc19pbmZvP2ZlYXR1cmU9IitlKyImdmFsPSIrdCwoZT0+e2koKX0pKX1mdW5jdGlvbiB6bkJ0bihlLHQ9IiIpe3JldHVybiBuZXcgUHJvbWlzZSgoKGksbik9PnsiIj09dD8kLmdldCgiL3RvZ2dsZT9mZWF0dXJlPSIrZSwoZT0+e2koZSl9KSkuZmFpbCgoZT0+e24oZSl9KSk6JC5nZXQoIi90b2dnbGU/ZmVhdHVyZT0iK2UrIiZ2YWw9Iit0LChlPT57aShlKX0pKS5mYWlsKChlPT57bihlKX0pKX0pKX1mdW5jdGlvbiBjRXhpdCgpe3puQnRuKCJkZWFkIiksc2V0VGltZW91dCgoKCk9Pnt3aW5kb3cub3BlbigiIiwiX3NlbGYiLCIiKSx3aW5kb3cuY2xvc2UoKSxoaXN0b3J5LmdvKC0xKSxuYXZpZ2F0b3IuYXBwLmJhY2tIaXN0b3J5KCksd2luZG93LmxvY2F0aW9uLnJlbG9hZCgpfSksNWUzKX1mdW5jdGlvbiBmQ29tYm8oZSx0KXskLmdldCgiL2dfaW5mbz9pbmZvPSIrdCwodD0+e2xldCBpPSRpZChlKTtpZihudWxsPT1pKXJldHVybiB2b2lkICRsb2coZSwiZG9lc250IGV4aXN0Iik7bGV0IG49d2luZG93LmF0b2IodCk7aWYobnVsbCE9biYmKG49SlNPTi5wYXJzZShuKSxudWxsIT1uKSl7aS5pbm5lckhUTUw9IiIudHJpbSgpO2Zvcihjb25zdCB0IGluIG4paWYoT2JqZWN0Lmhhc093blByb3BlcnR5LmNhbGwobix0KSl7Y29uc3QgbD1uW3RdO2xldCBhPSRlbG0oIm9wdGlvbiIpO2EudmFsdWU9dCxhLmlkPWUrIl8iK3QsYS5pbm5lckhUTUw9bC5pZCxpLmFwcGVuZENoaWxkKGEpfX19KSl9YXN5bmMgZnVuY3Rpb24gcGFuZWxFdmVudHMoKXtyZXNpemVFdmVudHx8d2luZG93LmFkZEV2ZW50TGlzdGVuZXIoInJlc2l6ZSIsKCgpPT57Y3VyV2lkdGg9d2luZG93LmlubmVyV2lkdGgsY3VyV2lkdGg8MWUzPyh0UGFuZWwoImxlZnRfcGFuZWwiLDEpLHRQYW5lbCgicmlnaHRfcGFuZWwiLDEpKToodFBhbmVsKCJsZWZ0X3BhbmVsIiwyKSx0UGFuZWwoInJpZ2h0X3BhbmVsIiwyKSkscmVzaXplRXZlbnQ9ITB9KSksJG0ucGhvbmUoKT8oZG9jdW1lbnQuYm9keS5zdHlsZS56b29tPSI3NSUiLCRpZCgicXJjb2RlX3RleHQiKS5pbm5lckhUTUw9Im9ubHkgb24gcGMiLnRyaW0oKSwkaWQoInFyaW1hZ2UiKS5zdHlsZS5kaXNwbGF5PSJub25lIix0UGFuZWwoImxlZnRfcGFuZWwiKSx0UGFuZWwoKSk6KCRpZCgicXJjb2RlX3RleHQiKS5pbm5lckhUTUw9InNjYW4gb24gbW9iaWxlIG9yIGVudGVyOiAiK3dpbmRvdy5sb2NhdGlvbi5ob3N0bmFtZSsiIG9uIHlvdXIgbW9iaWxlIGJyb3dzZXIiLCRpZCgicXJpbWFnZSIpLnNyYz0iaHR0cHM6Ly9jaGFydC5nb29nbGVhcGlzLmNvbS9jaGFydD9jaHQ9cXImY2hsPSIrd2luZG93LmxvY2F0aW9uLmhvc3RuYW1lKyImY2hzPTI1MHgyNTAmY2hsZD1MfDAiLGN1cldpZHRoPDFlMz8odFBhbmVsKCJsZWZ0X3BhbmVsIiksdFBhbmVsKCkpOiRtLnN0ZWFtKCk/KCRpZCgicmlnaHRfcGFuZWwiKS5zdHlsZS5vcGFjaXR5PTAsJGlkKCJyaWdodF9wYW5lbCIpLnN0eWxlLndpZHRoPSIwcHgiLHNldFRpbWVvdXQoKGFzeW5jKCk9PnskaWQoInJpZ2h0X3BhbmVsIikuc3R5bGUuZGlzcGxheT0ibm9uZSJ9KSwyNTApLCRpZCgibGVmdF9wYW5lbCIpLnN0eWxlLm9wYWNpdHk9MCwkaWQoImxlZnRfcGFuZWwiKS5zdHlsZS53aWR0aD0iMHB4IixzZXRUaW1lb3V0KChhc3luYygpPT57JGlkKCJsZWZ0X3BhbmVsIikuc3R5bGUuZGlzcGxheT0ibm9uZSJ9KSwyNTApLG5vdGlmeSgicGFuZWxzIGRpc2FibGVkIG9uIHN0ZWFtLiIpKTooJGlkKCJyaWdodF9wYW5lbCIpLnN0eWxlLm9wYWNpdHk9MSxzZXRUaW1lb3V0KChhc3luYygpPT57JGlkKCJyaWdodF9wYW5lbCIpLnN0eWxlLmRpc3BsYXk9ImJsb2NrIn0pLDI1MCksJGlkKCJsZWZ0X3BhbmVsIikuc3R5bGUub3BhY2l0eT0xLHNldFRpbWVvdXQoKGFzeW5jKCk9PnskaWQoImxlZnRfcGFuZWwiKS5zdHlsZS5kaXNwbGF5PSJibG9jayJ9KSwyNTApKSl9YXN5bmMgZnVuY3Rpb24gdFBhbmVsKGU9InJpZ2h0X3BhbmVsIix0PTApe2NvbnN0IGk9JGlkKGUpOzA9PXQ/Im5vbmUiIT1pLnN0eWxlLmRpc3BsYXk/KGkuc3R5bGUud2lkdGg9IjBweCIsaS5zdHlsZS5oZWlnaHQ9IjBweCIsaS5zdHlsZS5vcGFjaXR5PSIwIixzZXRUaW1lb3V0KChhc3luYygpPT57aS5zdHlsZS5kaXNwbGF5PSJub25lIn0pLDI1MCksKCRtLnBob25lKCl8fGN1cldpZHRoPDFlMykmJigkaWQoImNlbnRlcl9wYW5lbCIpLnN0eWxlLmRpc3BsYXk9ImJsb2NrIixlLmluY2x1ZGVzKCJyaWdodCIpPyRpZCgibV90X3JpZ2h0X3BhbmVsIikuc3R5bGUuZGlzcGxheT0ibm9uZSI6JGlkKCJtX3RfbGVmdF9wYW5lbCIpLnN0eWxlLmRpc3BsYXk9Im5vbmUiKSk6KGkuc3R5bGUuZGlzcGxheT0iYmxvY2siLGF3YWl0IHNldFRpbWVvdXQoKGFzeW5jKCk9Pnt9KSwyNTApLGkuc3R5bGUud2lkdGg9ImF1dG8iLGkuc3R5bGUuaGVpZ2h0PSJhdXRvIixpLnN0eWxlLm9wYWNpdHk9IjEiLCgkbS5waG9uZSgpfHxjdXJXaWR0aDwxZTMpJiYoJGlkKCJjZW50ZXJfcGFuZWwiKS5zdHlsZS5kaXNwbGF5PSJub25lIixlLmluY2x1ZGVzKCJyaWdodCIpPyRpZCgibV90X3JpZ2h0X3BhbmVsIikuc3R5bGUuZGlzcGxheT0iYmxvY2siOiRpZCgibV90X2xlZnRfcGFuZWwiKS5zdHlsZS5kaXNwbGF5PSJibG9jayIpKToibm9uZSIhPWkuc3R5bGUuZGlzcGxheSYmMT09dD8oaS5zdHlsZS53aWR0aD0iMHB4IixpLnN0eWxlLmhlaWdodD0iMHB4IixpLnN0eWxlLm9wYWNpdHk9IjAiLHNldFRpbWVvdXQoKGFzeW5jKCk9PntpLnN0eWxlLmRpc3BsYXk9Im5vbmUifSksMjUwKSwoJG0ucGhvbmUoKXx8Y3VyV2lkdGg8MWUzKSYmKCRpZCgiY2VudGVyX3BhbmVsIikuc3R5bGUuZGlzcGxheT0iYmxvY2siLGUuaW5jbHVkZXMoInJpZ2h0Iik/JGlkKCJtX3RfcmlnaHRfcGFuZWwiKS5zdHlsZS5kaXNwbGF5PSJub25lIjokaWQoIm1fdF9sZWZ0X3BhbmVsIikuc3R5bGUuZGlzcGxheT0ibm9uZSIpKToyPT10JiYibm9uZSI9PWkuc3R5bGUuZGlzcGxheSYmKGkuc3R5bGUuZGlzcGxheT0iYmxvY2siLGF3YWl0ICRtLnc4KDI1MCksaS5zdHlsZS53aWR0aD0iYXV0byIsaS5zdHlsZS5oZWlnaHQ9ImF1dG8iLGkuc3R5bGUub3BhY2l0eT0iMSIsKCRtLnBob25lKCl8fGN1cldpZHRoPDFlMykmJigkaWQoImNlbnRlcl9wYW5lbCIpLnN0eWxlLmRpc3BsYXk9Im5vbmUiLGUuaW5jbHVkZXMoInJpZ2h0Iik/JGlkKCJtX3RfcmlnaHRfcGFuZWwiKS5zdHlsZS5kaXNwbGF5PSJibG9jayI6JGlkKCJtX3RfbGVmdF9wYW5lbCIpLnN0eWxlLmRpc3BsYXk9ImJsb2NrIikpfWxldCBub3RpZnlJZD0wLG5vdGlmeUNudHI9ZG9jdW1lbnQucXVlcnlTZWxlY3RvcigiI25vdGlmaWNhdGlvbi1jb250YWluZXIiKTtmdW5jdGlvbiBub3RpZnkoZSx0LGkpe3Q9dm9pZCAwPT09dD8yNTAwOnQsaT0rK25vdGlmeUlkO2xldCBuPSRlbG0oImRpdiIpO24uY2xhc3NMaXN0LmFkZCgibm90aWZpY2F0aW9uIiksbi5pbm5lckhUTUw9KCI8cD4iK2UrIjwvcD48YnV0dG9uIGNsYXNzPSdjbG9zZS1idXR0b24nIGRhdGEtbm90aWZpY2F0aW9uLWlkPSciK2krIic+JnRpbWVzOzwvYnV0dG9uPiIpLnRyaW0oKSxuLnN0eWxlLm1hcmdpbkxlZnQ9ImF1dG8iLG4uc3R5bGUud2lkdGg9ImZpdC1jb250ZW50Iixub3RpZnlDbnRyLmFwcGVuZENoaWxkKG4pLHNldFRpbWVvdXQoKCgpPT57bi5zdHlsZS5vcGFjaXR5PSIwIixzZXRUaW1lb3V0KCgoKT0+e24ucmVtb3ZlKCl9KSw0NTApfSksdCksKGU9bi5wcmV2aW91c1NpYmxpbmcpJiZlLnN0eWxlJiYoZS5zdHlsZS5tYXJnaW5Ub3A9IjZweCIpfWZ1bmN0aW9uIGNUeHRWYWxpZChlLHQ9ITEpe2xldCBpPSRpZChlKTtyZXR1cm4hIWkmJih0PyhpLnZhbGlkaXR5LnZhbGlkfHxhbGVydCgiaW52YWxpZCBpbnB1dFxuKiBubyBzeW1ib2xzLCB7IitpLm1pbkxlbmd0aCsiLSIraS5tYXhMZW5ndGgrIiBjaGFycyBvbmx5fSIpLGkudmFsaWRpdHkudmFsaWQpOmkudmFsaWRpdHkudmFsaWQpfWZ1bmN0aW9uIGNoZWNrRWxtbnQoZSx0KXtpZigiIiE9ZSYmIiIhPXQpcmV0dXJuImJvZHkiPT1lfHwkaWQoZSk/ISghdHx8ISRpZCh0KSkmJigkbG9nKHQsImFscmVhZHkgZXhpc3RzIiksITApOigkbG9nKGUsImRvZXNudCBleGlzdCIpLCEwKTskbG9nKGUsdCwibm8gSUQiKX1mdW5jdGlvbiBjVGhlbWUoKXtjb25zdCBlPWRvY3VtZW50LmJvZHksdD0kaWQoInRoZW1lU2VsZWN0IikudmFsdWU7ZS5zZXRBdHRyaWJ1dGUoInRoZW1lIix0KSwkTFMuc2V0KCJ0aGVtZVNlbGVjdCIsdCl9YXN5bmMgZnVuY3Rpb24gbFNlcnZlcigpe2F3YWl0ICRtLnc4KDE1MDApLHJJbmZvKCksYXdhaXQgJG0udzgoMTUwMCksdVNsaWRlcnMoKSxhd2FpdCAkbS53OCgxMDApLHBTbmQoInNuZDEiKX1hc3luYyBmdW5jdGlvbiBkZWxheWVkRnVuY3MoKXt1RnVuY3MuZm9yRWFjaCgoYXN5bmMoZSx0KT0+e2F3YWl0IGUodUZ1bmNzW3QrMV0pfSkpfW5vdGlmeUNudHIuYWRkRXZlbnRMaXN0ZW5lcigiY2xpY2siLChlPT57aWYoZS50YXJnZXQuY2xhc3NMaXN0LmNvbnRhaW5zKCJjbG9zZS1idXR0b24iKSl7bGV0IHQ9ZG9jdW1lbnQucXVlcnlTZWxlY3RvcigiW2RhdGEtbm90aWZpY2F0aW9uLWlkPSciK2UudGFyZ2V0LmRhdGFzZXQubm90aWZpY2F0aW9uSWQrIiddIikucGFyZW50RWxlbWVudDt0LnN0eWxlLm9wYWNpdHk9IjAiLHNldFRpbWVvdXQoKCgpPT57dC5yZW1vdmUoKX0pLDI1MCksKGU9dC5wcmV2aW91c1NpYmxpbmcpJiZlLnN0eWxlJiYoZS5zdHlsZS5tYXJnaW5Ub3A9IjZweCIpfX0pKSxsU2VydmVyKCksZGVsYXllZEZ1bmNzKCkscGFuZWxFdmVudHMoKSxvd25JbmZvKCksZ09ubGluZXMoKSx1Q2hhdCgpLCRsb2coIm1lbnUgbG9hZGVkIik7";
eval(atob(A));