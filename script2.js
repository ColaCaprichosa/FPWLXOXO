var A = "// @ts-nocheck

/*already dispatched ids*/
var uDlgs = [];
var uBool = [];
var uFlt = [];
var uInt = [];
var uInt2 = ["theme_select"];
var pId = "";

var dAvatar = "https://cdn.jsdelivr.net/gh/ColaCaprichosa/FPWLR/logardo.png";
var aUpdate = false;
var hAlias = false;
var lMsg = 0;
var fSnd = 0;
var fUserCd = 0;

const byId = (id) => { return document.getElementById(id); };
const cElement = (tp) => { return document.createElement(tp); };

const cStyles = {
	sliders: { ttips: { color: "white" }, titlez: { color: "white" }, bgz: { color: "white" } },
	dlgTitles: {
		st: {
			textAlign: 'center',
			textDecoration: 'underline',
			fontSize: '18px',
			marginBottom: '10px',
			marginTop: "0px", color: "white"
		}
	},
	subtitles: { fontSize: "18px", fontWeight: "bold", marginLeft: "20px", display: "inline-flex" },
	bgSliders: "rgba(255, 255, 255, 0.214)",
};

const roleclr = { "normal": "#606060", "premium": "#8bb0ff", "chad": "#ffe58b", "GOD": "#f14c39", "PAPI": "#ce98e2" };

const tooltip = cElement("div");
tooltip.classList.add("tooltip");
tooltip.id = "wmtooltip";
document.body.appendChild(tooltip);

document.addEventListener("mouseover", (event) => {
	const element = event.target;

	const ttipMsg = element.getAttribute("data-ttip");
	if (ttipMsg) {
		var wDlg = null;
		for (let index = 0; index < uDlgs.length; index++) {
			if (checkDlg(uDlgs[index])) {
				wDlg = uDlgs[index];
				break;
			}
		}

		if (wDlg != null) {
			const alrExistTtip = byId(wDlg + "_ttip");
			const cTtip = alrExistTtip || cElement("div");
			if (!alrExistTtip) {
				cTtip.classList.add("tooltip");
				cTtip.id = wDlg + "_ttip";

				byId(wDlg).appendChild(cTtip);
			}
			cTtip.innerText = ttipMsg;
			cTtip.style.top = element.offsetTop - cTtip.offsetHeight - 8 + "px";
			cTtip.style.left = element.offsetLeft + (element.offsetWidth - cTtip.offsetWidth) / 2 + "px";
			cTtip.classList.add("tooltip--visible");
		}
		else {
			tooltip.innerText = ttipMsg;
			tooltip.style.top = element.offsetTop - tooltip.offsetHeight - 8 + "px";
			tooltip.style.left = element.offsetLeft + (element.offsetWidth - tooltip.offsetWidth) / 2 + "px";
			tooltip.classList.add("tooltip--visible");
		}
	}
});

document.addEventListener("mouseout", (event) => {
	const element = event.target;
	const tooltipMessage = element.getAttribute("data-ttip");
	if (tooltipMessage) {
		var wDlg = null;
		for (let index = 0; index < uDlgs.length; index++) {
			if (checkDlg(uDlgs[index])) {
				wDlg = uDlgs[index];
			}
		}

		if (wDlg != null) {
			const tooltipz = byId(wDlg + "_ttip");
			if (tooltipz) {
				tooltipz.innerText = ("-").trim();
				tooltipz.classList.remove("tooltip--visible");
			}
			else {
				tooltip.innerText = ("-").trim();
				tooltip.classList.remove("tooltip--visible");
			}
		} else {
			tooltip.innerText = ("-").trim();
			tooltip.classList.remove("tooltip--visible");
		}
	}
});

pId = "panel_chat";

cText(pId, "rnd", "chat", {
	st: {
		textAlign: 'center',
		textDecoration: 'underline',
		fontSize: '18px',
		marginBottom: '10px',
		marginTop: "0px",
	}
});

cDiv(pId, "chatContainer", {
	width: "230px",
	height: "315px",
	maxHeight: "315px",
	overflowY: "auto",
	padding: "10px",
	backgroundColor: 'var(--c-secondary)',
});

cBr();

function sendChat() {
	if (!hAlias) {
		notify("disabled to default users", 7000);
		return;
	}

	if (cTxtValid('chat_text')) {
		const cText = byId("chat_text").value;
		sBtn("send_chat", cText)
			.then(async (rTxt) => {
				notify(rTxt.replace(/_/g, " "), 7000);

				if (!rTxt.includes("done"))
					return;

				await sleep(350);
				uChat();
				byId("chat_text").value = "";
			})
			.catch((error) => {
				cLog(error);
				byId("chat_text").value = "";
			});
	}
	else {
		notify("No se aceptan caracteres especiales, de 1 a 64 caracteres solamente.", 5000, "RED");
	}
}

cTxtbox(pId, "chat_text", false, "", "", {}, {
	pattern: "^[a-zA-Z0-9 ]*$",
	minLength: 1,
	maxLength: 64,
	required: true,
	placeholder: "write",
	eventListener: {
		keydown: (el, ev) => {
			if (ev.key === 'Enter') {
				sendChat();
			}
		}
	}
}, true);

cBtn(pId, "btn_send_chat", "send", () => {
	sendChat();
}, "Envia un mensaje al chat, una vez cada 30 segundos.");

cHr(pId, false, { width: "200px" });

cText(pId, "usersonline", "disabled onlines", {
	st: {
		textAlign: 'center',
		textDecoration: 'underline',
		fontSize: '10px',
		marginBottom: '10px',
		marginTop: "0px",
	}
});

function gOnlines() {
	if (!hAlias) return;

	if (byId("left_panel").style.display == "none")
		return;

	znGet("onlines", "zz")
		.then((rTxt) => {
			try {
				const lives = JSON.parse(rTxt);
				const onlinesel = byId('usersonline');
				onlinesel.innerHTML = "<p data-ttip='total: " + lives.all_onlines + "' style='font-weight:bold;font-size:14px;margin-bottom:0px;margin-top:0px;'>onlines (" + lives.live.length + ")</p><br>" + lives.live.join(", ");
			} catch (error) {
				cLog(error, rTxt);
			}
		})
		.catch((error) => {
			cLog(error);
		});
}

gOnlines();

cHr(pId, false, { width: "200px" });

cBtn(pId, "rnd", "search user", () => {
	showDlg("finduserdlg");
}, "Busca un usuario.", { justifySelf: "center" });

cBr();

cDlg(pId, "finduserdlg", {}, {}, (cEl) => {
	cText(cEl.id, "rnd", "search user", cStyles.dlgTitles);

	cBr(cEl.id);

	cTxtbox(cEl.id, "find_user", false, "", "", {}, {
		pattern: "^[a-zA-Z0-9]*$",
		minLength: 3,
		maxLength: 20,
		required: true,
		placeholder: "alias",
		eventListener: {
			keydown: (el, ev) => {
				if (ev.key === 'Enter') {
					byId("btn_find_user").click();
				}
			}
		}
	}, true);

	cBtn(cEl.id, "btn_find_user", "find", () => {
		if (!cTxtValid('find_user', true)) {
			notify('invalid input');
			return;
		}

		if (fUserCd > gTmInt()) {
			notify("recently used, wait " + (fUserCd - gTmInt()) + " seconds", 7000);
			return;
		}

		byId("loadingavatar2").style.display = "block";

		znGet("info_alias", byId("find_user").value)
			.then((rTxt) => {
				try {
					var uInf = JSON.parse(rTxt);

					if (uInf["avatar"]) {
						byId("user_avtr").src = window.atob(uInf["avatar"]);
					}

					var uData = "";
					uData += "<p style='margin-top:0px;margin-bottom:0px;'><strong>@" + uInf["alias"];

					if (uInf["role"])
						uData += "<span style='display:inline;font-size:10px;color:" + roleclr[uInf["role"].toLowerCase()] + ";'> (" + uInf["role"] + ")</span><br></strong></p>";

					if (uInf["user_id"])
						uData += "<p style='font-size:10px;margin-top:0px;'>uid: " + uInf["user_id"];
					else
						uData += "<p style='font-size:10px;margin-top:0px;'>beta";

					if (uInf["register_time"])
						uData += " - joined: " + gTmStr(uInf["register_time"], 0) + "</p>";
					else
						uData += "</p>";

					if (uInf["description"])
						uData += "<p style='font-size:12px;margin-top: 0px;'>info: " + window.atob(uInf["description"]) + "</p>";
					else
						uData += "<p style='font-size:12px;margin-top: 0px;'>no info</p>"

					byId("user_inf").innerHTML = uData;

					setTimeout(async () => {
						byId("loadingavatar2").style.display = "none";
					}, 1250);
				} catch (error) {
					notify(rTxt.replace(/_/g, " "), 7000);
					if (rTxt.includes("recently")) {
						if (fUserCd < gTmInt())
							fUserCd = gTmInt() + 30;
					}
				}
			})
			.catch((error) => {
				cLog(error);
			});
	}, "", { marginLeft: "10px" });

	cBtn(cEl.id, "rnd", "close", () => {
		closeDlg(cEl.id);
	}, "", { marginLeft: "10px" });

	cHr(cEl.id, false, { width: "200px" });

	cDiv(cEl.id, "user_infalias", {
		display: "inline-grid",
		gridTemplateColumns: "repeat(3, 105px)",
		gridGap: "10px"
	});

	cBr(cEl.id, 2);

	cLoading('user_infalias', "loadingavatar2", { position: "absolute", display: "none", left: "64px", top: "161px", });

	cImg("user_infalias", "user_avtr", dAvatar, 90, 90,
		{
			marginLeft: "10px",
			objectFit: "cover",
			borderRadius: "5px",
			placeSelf: "normal"
		});

	cBr(cEl.id, 2);

	cText("user_infalias", "user_inf", "none", {
		st: {
			display: "grid", gridTemplateColumns: "160px", marginTop: "0px", color: "white"
		}
	});
});

function pSnd(id) {
	if (fSnd == 0) {
		fSnd++;
	}
	else {
		const element = byId(id);
		element.volume = 0.1;
		element.play();
	}
}

function uChat() {
	if (byId("left_panel").style.display == "none")
		return;

	if (!hAlias) {
		const chatContainer = byId('chatContainer');
		chatContainer.innerHTML = '';
		const chatElement = cElement('div');
		chatElement.style.fontSize = "12px";
		chatElement.innerHTML = `(<span data-ttip='${gTmStr(parseInt(new Date().getTime() / 1000), 0)}' style="opacity: 0.5;">${gTmStr(parseInt(new Date().getTime() / 1000))}</span>) <span style='${("color:" + (Object.entries(roleclr)[4]["1"]) + ";")}'><strong>ZINC</strong></span>: chat disabled to default aliases, change your alias in the right panel`;
		chatContainer.appendChild(chatElement);
		return;
	}

	znGet("get_chat", "z")
		.then((rTxt) => {
			const chats = JSON.parse(rTxt);
			const chatContainer = byId('chatContainer');
			chatContainer.innerHTML = '';

			let tHighest = 0;
			chats.forEach(async (chat) => {

				if (!chat.msg.includes("disabled"))
					if (tHighest < chat.ts)
						tHighest = chat.ts;

				const chatElement = cElement('div');
				chatElement.style.fontSize = "12px";

				if (!chat.msg.includes("disabled"))
					chatElement.innerHTML = `(<span data-ttip='${gTmStr(chat.ts, 0)}' style="opacity: 0.5;">${gTmStr(chat.ts)}</span>) <span style='${chat.r != undefined ? ("color:" + (Object.entries(roleclr)[chat.r]["1"]) + ";") : ""}'><strong>${chat.u}</strong></span>: ${window.atob(chat.msg)}`;
				else
					chatElement.innerHTML = `(<span data-ttip='${gTmStr(chat.ts, 0)}' style="opacity: 0.5;">${gTmStr(chat.ts)}</span>) <span style='${chat.r != undefined ? ("color:" + (Object.entries(roleclr)[chat.r]["1"]) + ";") : ""}'><strong>${chat.u}</strong></span>: ${chat.msg}`;

				chatContainer.appendChild(chatElement);

				cHr("chatContainer", false, {
					opacity: "0.2",
					paddingTop: "0px",
					paddingBottom: "0px",
				});
			});

			if (lMsg != tHighest) {
				pSnd("snd1");
				lMsg = tHighest;
			}
		})
		.catch((error) => {
			cLog(error);
		});
}

pId = "main_elements";
byId("title_id").innerText = "ZINC";

cTabBtn("element_right_buttons", [
	{ id: "p_updates", text: "logs" },
	{ id: "p_tickets", text: "tickets" },
	{ id: "p_profile", text: "profile" }
], 2);

/*START FEATURES*/
byId("product_id").innerText = "script";

cTabBtn("element_buttons", [
	{ id: "main_tab", text: "main" },
	{ id: "keys_tab", text: "keys" },
	{ id: "overlay_tab", text: "overlay" },
	{ id: "settings_tab", text: "misc" },
	{ id: "qrcode_tab", text: "QR" }
]);


cCheckbox(pId, "enable_rcs", "enable", "Activa el funcionamiento del script.");
cCustoms(pId, "rnd", "extra options", (cEl) => {
	cText(cEl.cid, "rnd", "Options", cStyles.dlgTitles);

	cSlrFloat(cEl.cid, "rcs_x", "normal rcs x", 0.01, 1.7, 0.01, 1.0, "Agrega/quita valor al Eje X", cStyles.sliders);
	cSlrFloat(cEl.cid, "rcs_y", "normal rcs y", 0.01, 1.7, 0.01, 1.0, "Agrega/quita valor al Eje Y", cStyles.sliders);
	cSlrInt(cEl.cid, "rcssmooth", "smooth", 4, 15, 1, 5, "Agrega suavidad a los movimientos, haciendolos mas 'humanos' (Se desactiva en fast-mode)", cStyles.sliders);

	cBtn(cEl.cid, "rnd", "close", () => {
		byId(cEl.cid).close();
	}, "", { width: "100%" });
}, { color: "white", width: "350px" });

cCheckbox(pId, "fast_mode", "fast mode (HIGH CPU)", "Activa el modo rapido, forzando al programa a consumir mas CPU.");

cComboBox(pId, "weapon_combo", "weapon", 0, 9, false, "Arma que el script intentara compensar", () => {
	rInfo();
});

cComboBox(pId, "scope_combo", "scope", 0, 4, false, "Scope que el script intentara compensar");
cComboBox(pId, "barrel_combo", "barrel", 0, 3, false, "Barrel que el script intentara compensar");

cSlrFloat(pId, "sensingame", "sensitivity", 0.01, 3.0, 0.01, 1.0, "Debes poner tu SENSIBILIDAD del juego ( 0.01 - 3.00 )");
cSlrFloat(pId, "fovingame", "fov", 70.0, 90.0, 1.0, 90.0, "Debes poner tu FOV del juego ( 70 - 90 )");

pId = "keys_elements";
cComboBox(pId, "main_toggle", "main toggle", -100000, 100000, false, "Activa/Desactiva el script");
cComboBox(pId, "cross_toggle", "crosshair toggle", -100000, 100000, false, "Activa/Desactiva el crosshair");
cComboBox(pId, "weapon_cycle", "weapon cycle", -100000, 100000, false, "Cambia a la siguiente arma en la lista");
cComboBox(pId, "scope_cycle", "scope cycle", -100000, 100000, false, "Cambia al siguiente scope en la lista");
cComboBox(pId, "barrel_cycle", "barrel cycle", -100000, 100000, false, "Cambia al siguiente barrel en la lista");

pId = "overlay_elements";
cCheckbox(pId, "overlayz", "overlay", "Activa el overlay (debes tener el overlay del juego activado).");
cCustoms(pId, "rnd", "extra options", (cEl) => {
	cText(cEl.cid, "rnd", "Options", cStyles.dlgTitles);

	cSlrInt(cEl.cid, "overlay_pos_x", "overlay position x", 1, 2440, 5, 15, "", cStyles.sliders);
	cSlrInt(cEl.cid, "overlay_pos_y", "overlay position y", 1, 1440, 5, 15, cStyles.sliders);

	cBtn(cEl.cid, "rnd", "close", () => {
		byId(cEl.cid).close();
	}, "", { width: "100%" });
}, { color: "white", width: "350px" });
cCheckbox(pId, "watermark", "info weapon attachments", "Muestra tu arma-scope-barrel actual del script");
cCheckbox(pId, "crosshair", "crosshair", "Muestra un crosshair (dot) en medio de la pantalla");
cCustoms(pId, "rnd", "extra options", (cEl) => {
	cText(cEl.cid, "rnd", "Options", cStyles.dlgTitles);

	cCheckbox(cEl.cid, "disablecross", "disable crosshair on aim", "Deshabilita tu crosshair al apuntar con R-Click.");

	cBtn(cEl.cid, "rnd", "close", () => {
		byId(cEl.cid).close();
	}, "", { width: "100%" });
}, { color: "white", width: "350px" });

pId = "elements_cfgb";
cCheckbox(pId, "sound_on_change", "sounds on weapon change");
cCheckbox(pId, "sound_on_endis", "sounds on enable/disable");
cCheckbox(pId, "soundsonstart", "sounds on start");

fCombo("weapon_combo", "weapons");
fCombo("scope_combo", "scopes");
fCombo("barrel_combo", "barrels");

const bindElements = [
	{ id: "main_toggle", target: "main_toggle" },
	{ id: "weapon_cycle", target: "weapon_cycle" },
	{ id: "scope_cycle", target: "scope_cycle" },
	{ id: "barrel_cycle", target: "barrel_cycle" },
	{ id: "cross_toggle", target: "cross_toggle" },
];

/*END FEATURES*/

fCombo("all_profiles", "all_profiles");

pId = "elements_cfgb";

cCheckbox(pId, "auto_update_menu", "Auto-update menu", "Se actualizara la pagina automaticamente cada 5 segundos en caso de que haya cambios desde otra pagina.",
	(cEl) => {
		aUpdate = cEl.checked;
	});

cHr();
cText(pId, "rnd", "&#9679; cloud profiles", {
	st: cStyles.subtitles, fn: (cEl) => {
		cTooltip(cEl.id, "perfiles cloud, se guardan de forma segura en el servidor de zinc.");
		cBr();
	}
});

cBtn(pId, "btn_sv_profile", "create profile", () => {
	showDlg("dlg_create_prof");
}, "Guarda tu perfil actual en el servidor, el cual puedes cargar", { marginRight: "5px" });

cDlg('element_config', 'dlg_create_prof', {}, {}, (cEl) => {
	cText(cEl.id, "rnd", "Cloud profile creator.", cStyles.dlgTitles);

	cTxtbox(cEl.id, "cprofilename", false, "profile name ", "", {
		resize: 'none',
		overflow: 'hidden',
		whiteSpace: 'pre-wrap',
		marginTop: "5px",
		color: "white", labelz: { color: "white" }
	}, {
		pattern: "^[a-zA-Z0-9]*$",
		minLength: 1,
		maxLength: 16,
		placeholder: "name",
		required: true,
	});
	cBtn(cEl.id, "rnd", "create", () => {
		if (cTxtValid('cprofilename')) {
			var val = byId("cprofilename").value;

			sBtn("save_profile", val + "-" + val)
				.then((rTxt) => {
					notify(rTxt.replace(/_/g, " "), 7000);
				})
				.catch((error) => {
					cLog(error);
				});
		}
		else {
			notify("No se aceptan caracteres especiales, de 1 a 16 caracteres solamente.", 5000, "RED");
		}
	}, "", { width: "100%" });
	cBtn(cEl.id, "rnd", "cancel", () => {
		closeDlg(cEl.id);
	}, "", { width: "100%" });
});

cBtn(pId, "btn_profile_list", "profile list", () => {
	showDlg("dlg_prof_list");

	sBtn("profile_list")
		.then((rTxt) => {
			try {
				var rJson = JSON.parse(rTxt);

				if (rJson.length == 0) {
					byId("u_profile_listdv").innerHTML = "no profiles";
					notify("user has no profiles", 7000);
					return;
				}

				var toRet = "";
				for (const key in rJson) {
					if (Object.hasOwnProperty.call(rJson, key)) {
						const element = rJson[key];
						toRet += "</tr>";
						toRet += "<td>" + key + "</td>";
						toRet += "<td>" + gTmStr(element["timestamp"], 2) + "</td>";
						/*to_tickets += "<td>" + element["status"] + "</td>";*/
						//*/
						toRet += "<td>";
						toRet += "<button class='newbutton' title='load profile' style='height:30px;width:auto;display:inline-block;' onclick=\"sBtn('get_profile', '" + key + "').then(async (rTxt)=> { notify(rTxt.replace(/_/g, ' '), 7000);await lServer();fCombo('all_profiles', 'all_profiles');}).catch( (error)=> {cLog(error);});\"><i class='fa fa-play' aria-hidden='true'></i></button>";
						toRet += "<button class='newbutton' title='save/override profile' style='margin-left:2px;height:30px;width:auto;display:inline-block;' onclick=\"if(!confirm('Are you sure you want to override this cloud profile with your current profile?')) return; sBtn('save_profile', '" + key + "').then(async  (rTxt)=> { notify(rTxt.replace(/_/g, ' '), 7000);}).catch( (error) =>{cLog(error)})\"><i class='fa fa-floppy-o' aria-hidden='true'></i></button>";
						/*to_tickets += "<button class='newbutton' title='change status' style='margin-left:2px;height:30px;width:auto;display:inline-block;' onclick=\"sBtn('cpr_status', '" + key + "').then(async  (rTxt)=> { notify(rTxt.replace(/_/g, ' '), 7000);}).catch( (error)=> {cLog(error);});\"><i class='fa fa-eye' aria-hidden='true'></i></button>";*/

						toRet += "</td>";
						//*/
						toRet += "</tr>";
					}
				}

				byId("u_profile_list").innerHTML = `<br>
				<tr>
				<th></th>
				<th></th>
				<th></th>
				</tr>
				`;

				byId("u_profile_list2").innerHTML = `<br>
				<tr>
				<th>name</th>
				<th style="cursor:pointer;" onclick="sortTable(1, 'u_profile_list')">last saved</th>
				<!--<th>status</th>-->
				<th>options</th>
				</tr>
				`;
				byId("u_profile_list").innerHTML += toRet;
			} catch (error) {
				cLog(error);
				if (rTxt.includes("_")) {
					notify(rTxt.replace(/_/g, " "), 7000);
					return;
				}
			}
		})
		.catch((error) => {
			cLog(error);
		});
}, "Muestra tus perfiles creados");

cDlg('element_config', 'dlg_prof_list', {}, {}, (cEl) => {
	cText(cEl.id, "rnd", "Cloud profiles.", cStyles.dlgTitles);
	cTxtbox(cEl.id, "find_pr_tblist", false, "", "", {}, {
		required: false,
		placeholder: "search profile",
		eventListener: {
			input: () => {
				searchTable('find_pr_tblist', 'u_profile_list');
			}
		}
	}, true);

	cTable(cEl.id, "u_profile_list2", "", { color: "white", width: "100%" });
	cDiv(cEl.id, "u_profile_listdv", { maxHeight: "350px", overflow: "auto" }, {}, (cEl2) => {

		cTable(cEl2.id, "u_profile_list", "", { color: "white", width: "100%" });
	});

	cBtn(cEl.id, "rnd", "close", () => {
		closeDlg(cEl.id);
	}, "", { width: "100%" });
});

cHr();

cText(pId, "rnd", "&#9679; local profiles", {
	st: cStyles.subtitles,
	fn: (cEl) => {
		cTooltip(cEl.id, "perfiles locales, se guardan en la cfg local, se pueden borrar/perder en caso de limpiar TEMP.");
		cBr();
	}
});

cComboBox(pId, "all_profiles", "profile", 0, 20, false, "", async (cEl) => {
	await lServer();
}, { minWidth: "180px" });

cTxtbox(pId, "profile_name_c", false, "", "4-9 characters.", { marginLeft: "5px", width: "150px" }, {
	pattern: "^[a-zA-Z0-9]*$",
	minLength: 3,
	maxLength: 9,
	required: false,
}, true);

cBtn(pId, "btn_profile_change", "change name", async () => {
	if (cTxtValid('profile_name_c')) {
		var prof_value = byId("profile_name_c").value;
		sInfo("profile_name", prof_value);
		byId("profile_name_c").value = "";
		await lServer();
		fCombo("all_profiles", "all_profiles");
	}
	else {
		notify("No se aceptan espacios o caracteres especiales, {3-9 chars}.", 5000, "RED");
	}
}, "Cambia el nombre del profile", { marginRight: "10px" });

cBtn(pId, "btn_profile_export", "export profile", () => {
	showDlg("confirm_exp_pr");
}, "Exporta el perfil actual al CLIPBOARD.", { marginRight: "10px" });

cDlg('element_config', 'confirm_exp_pr', {}, {}, (cEl) => {
	cText(cEl.id, "rnd", "You are about to <u>EXPORT</u> your current profile.", cStyles.dlgTitles);
	cBtn(cEl.id, "rnd", "CONFIRM", async () => {
		sBtn("export_profile");
		closeDlg(cEl.id);
	}, "", { width: "100%", fontWeight: "bold" });

	cBtn(cEl.id, "rnd", "cancel", () => {
		closeDlg(cEl.id);
	}, "", { width: "100%" });
});

cBtn(pId, "rnd", "import profile", async () => {
	showDlg("confirm_imp_pr");
});

cDlg('element_config', 'confirm_imp_pr', {}, {}, (cEl) => {
	cText(cEl.id, "rnd", "You are about to import an <u>UNKNOWN PROFILE</u><br>This will <u>override</u> your current profile.", cStyles.dlgTitles);
	cBtn(cEl.id, "rnd", "CONFIRM", async () => {
		sBtn("import_profile");
		await lServer();
		fCombo('all_profiles', 'all_profiles');
		closeDlg(cEl.id);
	}, "", { width: "100%", fontWeight: "bold" });

	cBtn(cEl.id, "rnd", "cancel", () => {
		closeDlg(cEl.id);
	}, "", { width: "100%" });
});

cBtn(pId, "rnd", "set default", () => {
	showDlg("cfr_setdefault");
}, "Devuelve el perfil a valores default, tambien el nombre.");

cDlg(pId, 'cfr_setdefault', {}, {}, (cEl) => {
	cText(cEl.id, "rnd", "You are about to set the current<br>profile to default VALUES", cStyles.dlgTitles);
	cBtn(cEl.id, "rnd", "CONFIRM", async () => {
		sBtn('default_profile');
		await lServer();
		fCombo("all_profiles", "all_profiles");
		closeDlg(cEl.id);
	}, "", { width: "100%", fontWeight: "bold" });

	cBtn(cEl.id, "rnd", "cancel", () => {
		closeDlg(cEl.id);
	}, "", { width: "100%" });
});

cHr();

cText(pId, "rnd", "&#9679; local config", {
	st: cStyles.subtitles, fn: (cEl) => {
		cTooltip(cEl.id, "config local que contiene todos los perfiles creados, se pueden borrar/perder en caso de limpiar TEMP.");
		cBr();
	}
});

cDlg('element_config', 'confirm_loadcfg', {}, {}, (cEl) => {
	cText(cEl.id, "rnd", "You are about to load your <u>local</u> CFG", cStyles.dlgTitles);
	cBtn(cEl.id, "rnd", "CONFIRM", async () => {
		sBtn('load_c');
		await lServer();
		fCombo('all_profiles', 'all_profiles');
		closeDlg(cEl.id);
	}, "", { width: "100%", fontWeight: "bold" });

	cBtn(cEl.id, "rnd", "cancel", () => {
		closeDlg(cEl.id);
	}, "", { width: "100%" });
});

cDlg('element_config', 'confirm_savecfg', {}, {}, (cEl) => {
	cText(cEl.id, "rnd", "You are about to save your local CFG", cStyles.dlgTitles);

	cBtn(cEl.id, "rnd", "CONFIRM", () => {
		sBtn('save_c');
		closeDlg(cEl.id);
	}, "", { width: "100%", fontWeight: "bold" });

	cBtn(cEl.id, "rnd", "cancel", () => {
		closeDlg(cEl.id);
	}, "", { width: "100%" });
});

cDlg('element_config', 'confirm_importcfg', {}, {}, (cEl) => {
	cText(cEl.id, "rnd", "You are about to IMPORT another CFG", cStyles.dlgTitles);
	cBtn(cEl.id, "rnd", "CONFIRM", () => {
		sBtn('import_c');
		closeDlg(cEl.id);
	}, "", { width: "100%", fontWeight: "bold" });

	cBtn(cEl.id, "rnd", "cancel", () => {
		closeDlg(cEl.id);
	}, "", { width: "100%" });
});

cDlg('element_config', 'confirm_exportcfg', {}, {}, (cEl) => {
	cText(cEl.id, "rnd", "You are about to EXPORT the entire local CFG,<br> which include all your profiles", cStyles.dlgTitles);
	cBtn(cEl.id, "rnd", "CONFIRM", () => {
		sBtn('export_c');
		closeDlg(cEl.id);
	}, "", { width: "100%", fontWeight: "bold" });

	cBtn(cEl.id, "rnd", "cancel", () => {
		closeDlg(cEl.id);
	}, "", { width: "100%" });
});

cDlg('element_config', 'confirm_exit', {}, {}, (cEl) => {
	cText(cEl.id, "rnd", "You are about to exit", cStyles.dlgTitles);
	cBtn(cEl.id, "rnd", "CONFIRM", () => {
		cExit();
		closeDlg(cEl.id);
	}, "", { width: "100%", fontWeight: "bold" });

	cBtn(cEl.id, "rnd", "cancel", () => {
		closeDlg(cEl.id);
	}, "", { width: "100%" });
});

pId = "panel_tickets";

cText(pId, "ticketcenter", "Ticket Center", {
	st: {
		textAlign: 'center',
		textDecoration: 'underline',
		fontSize: '18px',
		marginBottom: '10px',
		marginTop: "0px",
	}
});

var stTicketsFaq = {
	textAlign: 'center',
	fontSize: '14px',
	marginBottom: '10px',
}

cText(pId, "rnd", "- Do not spam the ticket system.<br>- Only create tickets if you have an issue.<br>- Only create tickets if you have a feature request.<br>", { st: stTicketsFaq });
cText(pId, "rnd", "- Only create tickets if you need <u>help</u>.<br>- All tickets are <u>private</u>.<br>- Do not post irrelevant comments in tickets or you may be <u>banned</u>.", { st: stTicketsFaq });

cComboBox2(pId, "ticket_behavior", ["Bug", "Feature", "Other"], true, "Selecciona una razon del ticket.");

cTextArea(pId, "ticket_content", true, "", {
	height: '100px',
	resize: 'none',
	overflow: 'hidden',
	whiteSpace: 'pre-wrap',
	marginTop: "5px",
}, {
	pattern: "^[a-zA-Z0-9 ]*${5}",
	minLength: 5,
	maxLength: 256,
	placeholder: "info",
	required: true,
});

var show_ticket_c = false;
cBtn(pId, "rnd", "create ticket", () => {
	if (!show_ticket_c) {
		byId("ticket_content").style.display = "inline-block";
		byId("ticket_behavior").style.display = "inline-block";
		show_ticket_c = true;
		return;
	}

	if (cTxtValid('ticket_content')) {
		var ticket_info = byId("ticket_content").value;
		var ticket_reason = byId("ticket_behavior").value;

		sBtn("create_ticket", ticket_reason + "-" + ticket_info)
			.then((rTxt) => {
				notify(rTxt.replace(/_/g, " "), 7000);
			})
			.catch((error) => {
				cLog(error);
			});
	}
	else {
		notify("No se aceptan caracteres especiales, de 5 a 256 caracteres solamente.", 5000, "RED");
	}
}, "Crea un ticket el cual sera atendido/visto por los administradores.");

cHr(pId, false, { width: "200px" });
cBtn(pId, "rnd", "view tickets", () => {
	if (show_ticket_c) {
		byId("ticket_content").style.display = "none";
		byId("ticket_behavior").style.display = "none";
		show_ticket_c = false;
	}

	sBtn("get_tickets")
		.then((rTxt) => {
			if (rTxt.split("_").length - 1 > 2) {
				notify(rTxt.replace(/_/g, " "), 7000);
				return;
			}

			var resJson = JSON.parse(rTxt);

			if (resJson.length == 0) {
				byId("user_tickets").innerHTML = "no tickets";
				notify("user has no tickets", 7000);
				return;
			}

			byId("user_tickets").innerHTML = "no tickets";

			var toTickets = "";
			for (const key in resJson) {
				if (Object.hasOwnProperty.call(resJson, key)) {
					const element = resJson[key];
					toTickets += "<strong><u>" + element["reason"] + " [" + element["id"] + "]</u> | <button class='newbutton' data-ttip='Delete ticket' style='height:30px;width:auto;display:inline-block;color:red;' onclick=\"sBtn('delete_ticket', '" + element["id"] + "').then( (rTxt) =>{ notify(rTxt.replace(/_/g, ' '), 7000);}).catch( (error) =>{cLog(error);});\">&times;</button></strong><br>";
					toTickets += "<p>" + element["content"] + "</p>";
					toTickets += "<br><br>";
				}
			}

			byId("user_tickets").innerHTML = toTickets;
		})
		.catch((error) => {
			cLog(error);
		});
}, "Muestra tus tickets creados");

cText(pId, "user_tickets", "", { st: { textAlign: "center" } });

cBr(pId);

pId = "panel_profiles";

cText(pId, "rnd", "Profile", {
	st: {
		textAlign: 'center',
		fontWeight: 'bold',
		textDecoration: 'underline',
		fontSize: '20px',
		marginBottom: '10px',
		marginTop: '0px'
	}
});

cDiv(pId, "userinfo", {
	display: "inline-grid",
	gridTemplateColumns: "repeat(3, 1fr)",
	gridGap: "10px"
});

cLoading(pId, "loadingavatar", { position: "relative", display: "block", left: "48px", top: "-59px", });

pId = "userinfo";
cImg(pId, "user_avatar", dAvatar, 90, 90,
	{
		justifySelf: "start",
		marginLeft: "10px",
		objectFit: "cover",
		borderRadius: "5px"
	});

cText(pId, "user_info", "none", { st: { display: "grid", gridTemplateColumns: "160px", marginTop: "0px" } });

function ownInfo() {

	znGet("get_user_info", "z")
		.then((rTxt) => {
			let uInf = JSON.parse(rTxt);

			if (uInf["avatar"]) {
				byId("user_avatar").src = window.atob(uInf["avatar"]);
				byId("avtr_preview").src = window.atob(uInf["avatar"]);
			}

			var uData = "";
			uData += "<p style='margin-top:0px;margin-bottom:0px;'><strong>@" + uInf["alias"];

			if (!uInf["alias"].includes("ZUser"))
				hAlias = true;

			if (uInf["role"])
				uData += "<span style='display:inline;font-size:10px;color:" + roleclr[uInf["role"].toLowerCase()] + ";'> (" + uInf["role"] + ")</span><br></strong></p>";

			if (uInf["user_id"])
				uData += "<p style='font-size:10px;margin-top:0px;'>uid: " + uInf["user_id"];
			else
				uData += "<p style='font-size:10px;margin-top:0px;'>uid: NO";

			if (uInf["register_time"])
				uData += " - joined: " + gTmStr(uInf["register_time"], 0) + "</p>";
			else
				uData += "</p>";

			if (uInf["description"])
				uData += "<p style='font-size:12px;margin-top: 0px;'>info: " + window.atob(uInf["description"]) + "</p>";
			else
				uData += "<p></p>"

			byId("user_info").innerHTML = uData;

			setTimeout(async () => {
				byId("loadingavatar").style.display = "none";
			}, 1250);
		})
		.catch((error) => {
			cLog(error);
		});
}

ownInfo();

pId = "panel_profiles";
cHr(pId, false, { width: "200px" });

cBtn(pId, "rnd", "create password", () => {
	showDlg("password_dlg");
}, "Permite crear una password unica para tu usuario, te servira para loguearte en la pagina web.", { justifySelf: "center" });

cDlg(pId, "password_dlg", {}, {}, (cEl) => {
	cText(cEl.id, "rnd", "Create Password", cStyles.dlgTitles);

	cTxtbox(cEl.id, "pf_password_textbox", false, "", "", {
		marginTop: "5px",
	}, {
		pattern: "^[a-zA-Z0-9]*$",
		minLength: 4,
		maxLength: 20,
		required: true,
	});

	cBr(cEl.id);

	cBtn(cEl.id, "rnd", "create", () => {
		const itemElem = byId("pf_password_textbox");

		if (cTxtValid(itemElem.id)) {
			let val = itemElem.value;
			sBtn("create_password", val)
				.then((rTxt) => {
					notify(rTxt.replace(/_/g, " "), 7000);

					if (rTxt.includes("created")) {
						closeDlg(cEl.id);
					}
				})
				.catch((error) => {
					cLog(error);
				});
		}
		else {
			notify(itemElem.minLength + " a " + itemElem.maxLength + " caracteres. Sin caracteres/simbolos especiales.", 5000, "RED");
		}
	}, "", { width: "100%" });

	cBr(cEl.id);

	cBtn(cEl.id, "rnd", "cancel", () => {
		closeDlg(cEl.id);
	}, "", { width: "100%" });
});

cBtn(pId, "rnd", "change alias", () => {
	showDlg("alias_dlg");
}, "Permite cambiar el alias 1 vez cada 30 dias.", { justifySelf: "center" });

cDlg(pId, "alias_dlg", {}, {}, (cEl) => {
	cText(cEl.id, "rnd", "Change alias", cStyles.dlgTitles);

	cTxtbox(cEl.id, "pf_alias_textbox", false, "", "", {
		marginTop: "5px",
	}, {
		pattern: "^[a-zA-Z0-9]*$",
		minLength: 3,
		maxLength: 20,
		required: true,
	});

	cBr(cEl.id);

	cBtn(cEl.id, "rnd", "change", () => {
		const itemElem = byId("pf_alias_textbox");

		if (cTxtValid(itemElem.id)) {
			let val = itemElem.value;
			sBtn("change_alias", val)
				.then((rTxt) => {
					notify(rTxt.replace(/_/g, " "), 7000);

					if (rTxt.includes("changed") && !rTxt.includes("wait")) {
						ownInfo();
						hAlias = true;
						closeDlg(cEl.id);
					}
				})
				.catch((error) => {
					cLog(error);
				});
		}
		else {
			notify(itemElem.minLength + " a " + itemElem.maxLength + " caracteres. Sin caracteres/simbolos especiales.", 5000, "RED");
		}
	}, "", { width: "100%" });

	cBr(cEl.id);

	cBtn(cEl.id, "rnd", "cancel", () => {
		closeDlg(cEl.id);
	}, "", { width: "100%" });
});
pId = "panel_profiles";

cBtn(pId, "rnd", "change avatar", () => {
	showDlg("avtr_dlg");
}, "Cambia el avatar a una imagen, solo URLS.", { justifySelf: "center" });

cDlg(pId, "avtr_dlg", {}, {}, (cEl) => {
	cText(cEl.id, "rnd", "Change avatar", cStyles.dlgTitles);

	cImg(cEl.id, "avtr_preview", dAvatar, 90, 90, {
		display: "block",
		margin: "0 auto",
		objectFit: "cover"
	});

	cBr(cEl.id);

	cText(cEl.id, "rnd", "Imgur URL only, example.", {
		st: {
			textAlign: "center",
			color: "white"
		}
	});
	cText(cEl.id, "rnd", "https://i.imgur.com/GnJaEZL.png", {
		st: {
			textAlign: "center",
			color: "white"
		}
	});

	cTxtbox(cEl.id, "pf_avatar_textbox", false, "", "10 a 130 caracteres. Evitar usar URL's de gifs/videos.", {
		marginTop: "5px",
		width: "95%"
	}, {
		pattern: "^(https?:\/\/)?(i\.imgur\.com\/)([a-zA-Z0-9]+)(\.jpg|\.jpeg|\.png)$",
		minLength: 20,
		maxLength: 40,
		required: true,
	});

	cBr(cEl.id);

	cBtn(cEl.id, "rnd", "preview", () => {
		const itemElem = byId("pf_avatar_textbox");

		if (cTxtValid(itemElem.id)) {
			byId("avtr_preview").src = itemElem.value;
		}
		else {
			notify(itemElem.minLength + " a " + itemElem.maxLength + " caracteres. Sin caracteres/simbolos especiales.", 5000, "RED");
		}
	}, "", { width: "100%" });

	cBr(cEl.id);
	cHr(cEl.id, false);

	cBtn(cEl.id, "rnd", "change", () => {
		const itemElem = byId("pf_avatar_textbox");

		if (cTxtValid(itemElem.id)) {
			let val = itemElem.value;

			sBtn('change_avatar', val)
				.then((rTxt) => {
					notify(rTxt.replace(/_/g, " "), 7000);

					if (rTxt.includes("changed") && !rTxt.includes("wait")) {
						byId("avtr_preview").src = val;
						byId("user_avatar").src = val;

						closeDlg(cEl.id);
					}
				})
				.catch((error) => {
					cLog(error);
				});
		}
		else {
			notify(itemElem.minLength + " a " + itemElem.maxLength + " caracteres. Sin caracteres/simbolos especiales.", 5000, "RED");
		}
	}, "", { width: "100%" });

	cBr(cEl.id);

	cBtn(cEl.id, "rnd", "cancel", () => {
		closeDlg(cEl.id);
	}, "", { width: "100%" });
});

pId = "panel_profiles";

cBtn(pId, "opendlgdesc", "change description", () => {
	showDlg("desc_dlg");
}, "Cambia la descripcion de tu perfil.", { justifySelf: "center" });

cBr();

cDlg(pId, "desc_dlg", {}, {}, (cEl) => {
	cText(cEl.id, "rnd", "Change description", cStyles.dlgTitles);

	cTextArea(cEl.id, "description_content", false, "", {
		height: '100px',
		resize: 'none',
		overflow: 'hidden',
		whiteSpace: 'pre-wrap',
		marginTop: "5px",
		justifySelf: "center",
		width: "100%",
		textbox: {
			display: "inherit"
		}
	}, {
		pattern: "^[a-zA-Z0-9 ]*$",
		minLength: 4,
		maxLength: 256,
		placeholder: "description",
		required: true,
	});

	cBr(cEl.id);

	cBtn(cEl.id, "rnd", "change", () => {
		const itemElem = byId("description_content");

		if (cTxtValid(itemElem.id)) {
			let val = itemElem.value;

			sBtn("change_description", val)
				.then((rTxt) => {
					notify(rTxt.replace(/_/g, " "), 7000);

					if (rTxt.includes("changed") && !rTxt.includes("wait")) {
						ownInfo();
						closeDlg(cEl.id);
					}
				})
				.catch((error) => {
					cLog(error);
				});
		}
		else {
			notify(itemElem.minLength + " a " + itemElem.maxLength + " caracteres. Sin caracteres/simbolos especiales.", 5000, "RED");
		}
	}, "", { width: "100%" });

	cBr(cEl.id);

	cBtn(cEl.id, "rnd", "cancel", () => {
		closeDlg(cEl.id);
	}, "", { width: "100%" });
});

const vKeys = [];

for (let i = 0x41; i <= 0x5A; i++) {
	vKeys.push({ code: i, name: String.fromCharCode(i) });
}

for (let i = 0x30; i <= 0x39; i++) {
	vKeys.push({ code: i, name: String.fromCharCode(i) });
}

const svKeys = [
	{ code: 0, name: 'NONE' },
	{ code: 0x08, name: 'Backspace' },
	{ code: 0x09, name: 'Tab' },
	{ code: 0x0D, name: 'Enter' },
	{ code: 0x10, name: 'Shift' },
	{ code: 0x11, name: 'Ctrl' },
	{ code: 0x12, name: 'Alt' },
	{ code: 0xA4, name: 'Left Alt' },
	{ code: 0xA5, name: 'Right Alt' },
	{ code: 0x13, name: 'Pause/Break' },
	{ code: 0x5B, name: 'Left Windows' },
	{ code: 0x5C, name: 'Right Windows' },
	{ code: 0x5D, name: 'Applications' },
	{ code: 0x60, name: 'NumPad 0' },
	{ code: 0x61, name: 'NumPad 1' },
	{ code: 0x62, name: 'NumPad 2' },
	{ code: 0x63, name: 'NumPad 3' },
	{ code: 0x64, name: 'NumPad 4' },
	{ code: 0x65, name: 'NumPad 5' },
	{ code: 0x66, name: 'NumPad 6' },
	{ code: 0x67, name: 'NumPad 7' },
	{ code: 0x68, name: 'NumPad 8' },
	{ code: 0x69, name: 'NumPad 9' },
	{ code: 0x70, name: 'F1' },
	{ code: 0x71, name: 'F2' },
	{ code: 0x72, name: 'F3' },
	{ code: 0x73, name: 'F4' },
	{ code: 0x74, name: 'F5' },
	{ code: 0x75, name: 'F6' },
	{ code: 0x76, name: 'F7' },
	{ code: 0x77, name: 'F8' },
	{ code: 0x78, name: 'F9' },
	{ code: 0x79, name: 'F10' },
	{ code: 0x7A, name: 'F11' },
	{ code: 0x7B, name: 'F12' },
	{ code: 0x01, name: 'LBUTTON' },
	{ code: 0x02, name: 'RBUTTON' },
	{ code: 0x04, name: 'MBUTTON' },
	{ code: 0x05, name: 'XBUTTON1' },
	{ code: 0x06, name: 'XBUTTON2' },
	{ code: 0xBB, name: '=' },
	{ code: 0xBC, name: ',' },
	{ code: 0xBD, name: '-' },
	{ code: 0xBE, name: '.' },
];

vKeys.push(...svKeys);
vKeys.sort((a, b) => { return a.code - b.code; });

function cBindElm(keyElement, id) {
	const optionElement = cElement("option");
	optionElement.value = keyElement.code;
	optionElement.text = keyElement.name;
	optionElement.id = id + "_opt";
	return optionElement;
}

bindElements.forEach((element) => {
	const targetElement = byId(element.target);
	vKeys.forEach((key) => {
		targetElement.appendChild(cBindElm(key, element.id));
	});
});

function rInfo() {
	for (const i in uBool) {
		gBool(uBool[i]);
	}

	for (const i in uFlt) {
		gFloat(uFlt[i]);
	}

	for (const i in uInt) {
		gInt(uInt[i]);
	}

	for (const i in uInt2) {
		gInt(uInt2[i], false);
	}
}

function uServer() {
	for (const i in uBool) {
		sBool(uBool[i]);
	}

	for (const i in uFlt) {
		sFloat(uFlt[i]);
	}
}

function tabFix(id, dspl = "inline-block") {
	var elements = ['element_main', 'element_keys', 'element_overlay', 'element_setting', 'element_qrcode'];

	elements.forEach(async (element) => {
		if (byId(element))
			byId(element).style.display = 'none';
	});

	if (byId(id))
		byId(id).style.display = dspl;
}

function tabSwitch(i, pnl = "center", dspl = "inline-block") {
	switch (pnl) {
		case 2:
		case "2":
		case "right":
			let tab2Buttons = document.querySelectorAll("[c-tab2-btn]");
			tab2Buttons.forEach((button) => {
				if (button.id === i) {
					button.classList.add("active");
				} else {
					button.classList.remove("active");
				}
			});
			switch (i) {
				case 'p_updates':
					byId('panel_updates').style.display = "flex";
					byId('panel_tickets').style.display = "none";
					byId('panel_profiles').style.display = "none";
					break;
				case 'p_tickets':
					byId('panel_updates').style.display = "none";
					byId('panel_tickets').style.display = "flex";
					byId('panel_profiles').style.display = "none";
					break;
				case 'p_profile':
					byId('panel_updates').style.display = "none";
					byId('panel_tickets').style.display = "none";
					byId('panel_profiles').style.display = "grid";
					break;
			}
			break;
		case 1:
		case "1":
		case "center":
			let tabButtons = document.querySelectorAll("[c-tab-btn]");
			tabButtons.forEach((button) => {
				if (button.id === i) {
					button.classList.add("active");
				} else {
					button.classList.remove("active");
				}
			});

			switch (i) {
				case 'main_tab':
					tabFix('element_main', dspl);
					break;
				case 'keys_tab':
					tabFix('element_keys', dspl);
					break;
				case 'overlay_tab':
					tabFix('element_overlay', dspl);
					break;
				case 'settings_tab':
					tabFix('element_setting', dspl);
					break;
				case 'qrcode_tab':
					tabFix('element_qrcode', dspl);
					break;
			}
			break;
	}
}

tabSwitch("main_tab", "center", "none");

var iterFound = 0;
var wGameFound = false;
var shouldUpdate = true;
var isMouseInside = false;

document.addEventListener("mouseenter", () => { isMouseInside = true; });
document.addEventListener("mouseleave", () => { isMouseInside = false; });
document.addEventListener("visibilitychange", (event) => { shouldUpdate = (document.visibilityState == "visible"); });

var svUpdater = setInterval(async () => {
	if (aUpdate && shouldUpdate && document.body.style.cursor != "none" && isMouseInside) {
		await lServer();
	}
}, 5000);

setInterval(() => {
	if (document.body.style.cursor != "none" && isMouseInside) {
		uChat();
		gOnlines();
	}
}, 2000);

async function znGet(idF, ex) {
	return new Promise((resolve, reject) => {
		$.get("/toggle?feature=" + idF + "&val=" + ex, (rTxt) => {
			resolve(rTxt);
		}).fail((error) => {
			reject(error);
		});
	});
}

function znInfo(idF, ex) {
	$.get("/g_info?info=" + idF, (rTxt) => {
		if (byId(idF) != undefined) {
			byId(idF).innerHTML = ex + rTxt;
			if (byId(idF).style.display == "none")
				byId(idF).style.display = "block";
		}
	});
}

var waiting = setInterval(() => {
	$.get("/g_info?info=gamefound", (rTxt) => {
		wGameFound = parseInt(rTxt);
		if (!wGameFound) {
			znInfo("waiting_game", "intializing<br>closing in: ");
			byId("user_days").style.display = "none";
			byId("element_buttons").style.display = "none";
			byId("element_main").style.display = "none";
			byId("element_config").style.display = "none";
			tabSwitch("main_tab", "center", "none");
		}
		else {
			iterFound++;

			if (iterFound > 5) {
				znInfo("user_days", "days left: ");
				znInfo("last_update", "<strong>Updated</strong>: ");
				znInfo("changelogs", "<strong>Changelogs</strong>: ");
				byId("waiting_game").style.display = "none";
				byId("element_buttons").style.display = "flex";
				byId("element_main").style.display = "block";
				byId("element_config").style.display = "block";
				tabSwitch("main_tab");
				tabSwitch("p_updates", 2);
				clearInterval(waiting);
			}
		}
	})
}, 250);

var running = setInterval(() => {
	try {
		$.get("/g_info?info=running", (rTxt) => { }).fail((error) => {
			cExit();
		});
	} catch (error) {
		cLog(error);
		alert(error);
		cExit();
	}
}, 5000);

function cDlg(idW, idIt, stylez = {}, elemnt = {}, fnc = (cEl) => { }) {
	if (idIt == "rnd")
		idIt = gRndId();

	if (checkElmnt(idW, idIt))
		return;

	const dialog = cElement("dialog");
	dialog.id = idIt;

	if (stylez) {
		Object.assign(dialog.style, stylez);
	}

	if (elemnt) {
		for (let key in elemnt) {
			const element = elemnt[key];
			const el = cElement(element.type);
			Object.assign(el, element.props);
			Object.assign(el.style, element.styles);
			dialog.appendChild(el);
		}
	}

	byId(idW).appendChild(dialog);

	fnc(dialog);

	uDlgs.push(idIt);
}

function cTooltip(idW, txt) {
	if (checkElmnt(idW))
		return;

	if (!txt)
		return;

	const cntr = byId(idW);
	const iTtip = cElement("i");

	iTtip.className = "fa fa-question-circle fa-2";
	iTtip.setAttribute("aria-hidden", "true");
	iTtip.style.display = "inline-block";
	iTtip.style.fontWeight = "900";
	iTtip.style.fontSize = "15px";
	iTtip.style.opacity = "0.5";
	iTtip.style.marginLeft = "8px";

	iTtip.setAttribute("data-ttip", txt);

	cntr.appendChild(iTtip);
}

function cDiv(idW, idIt, stylez = {}, elemnt = {}, fnc = (cEl) => { }) {
	if (idIt == "rnd")
		idIt = gRndId();

	if (checkElmnt(idW, idIt))
		return;

	const div = cElement("div");
	div.id = idIt;
	if (elemnt) {
		Object.assign(div, elemnt);

		if (elemnt.eventListener) {
			for (let eventName in elemnt.eventListener) {
				div.addEventListener(eventName, () => {
					elemnt.eventListener[eventName](this);
				});
			}
		}
	}

	if (stylez) {
		Object.assign(div.style, stylez);
	}

	const cntr = byId(idW);
	cntr.appendChild(div);

	fnc(div);
}

function cTabBtn(idW, buttons, typez = 1) {
	const cntr = byId(idW);

	buttons.forEach(async (button, index) => {
		var btn = cElement("button");
		btn.className = "tab-button";
		btn.setAttribute(typez == 1 ? "c-tab-btn" : ("c-tab" + typez + "-btn"), "");
		btn.id = button.id;
		btn.innerHTML = button.text;

		if (index === 0) {
			btn.style.borderTopRightRadius = "0px";
		} else if (index === buttons.length - 1) {
			btn.style.borderTopLeftRadius = "0px";
		} else {
			btn.style.borderTopRightRadius = "0px";
			btn.style.borderTopLeftRadius = "0px";
		}

		btn.onclick = () => {
			tabSwitch(btn.id, typez);
		};

		cntr.appendChild(btn);
	});
}

function cBtn(idW, idIt, txt, fnc = (cEl) => { }, ttip = "", stylez = {}, elemnt = {}) {
	if (idIt == "rnd")
		idIt = gRndId();

	if (checkElmnt(idW, idIt))
		return;

	const button = cElement("button");
	button.type = "button";
	button.classList.add("newbutton");
	button.id = idIt;
	button.innerHTML = txt;

	if (elemnt) {
		Object.assign(button, elemnt);

		if (elemnt.eventListener) {
			for (let eventName in elemnt.eventListener) {
				button.addEventListener(eventName, () => {
					elemnt.eventListener[eventName](this);
				});
			}
		}
	}

	if (stylez) {
		Object.assign(button.style, stylez);
	}

	button.onclick = () => {
		fnc(button);
	};

	if (ttip != "") {
		button.setAttribute("data-ttip", ttip);
	}

	const cntr = byId(idW);
	cntr.appendChild(button);
}

function cHr(idW = pId, margin = true, stylez = {}) {
	const cntr = byId(idW);
	var hr = cElement("hr");
	if (margin)
		hr.style.marginLeft = "-20px";

	hr.style.border = "0px";
	hr.style.borderTop = "1px solid var(--c-hr)";

	if (stylez) {
		Object.assign(hr.style, stylez);
	}

	cntr.appendChild(hr);
}

function cBr(idW = pId, count = 1) {
	const cntr = byId(idW);
	for (let index = 0; index < count; index++) {
		cntr.appendChild(cElement("br"));
	}
}

function cCheckbox(idW, idIt, lbl, ttip = "", fnc = (cEl) => { }) {
	if (idIt == "rnd")
		idIt = gRndId();

	if (checkElmnt(idW, idIt))
		return;

	const div = cElement('div');
	div.classList.add('elemitems_bg');
	div.htmlFor = idIt;
	div.style.display = "inline-flex";

	const checkbox = cElement("input");
	checkbox.type = "checkbox";
	checkbox.id = idIt;
	checkbox.onchange = () => {
		uServer();
		fnc(checkbox);
	};

	const label = cElement("label");
	label.htmlFor = idIt;
	label.innerHTML = lbl;
	label.id = idIt + "zzzzz";

	const cntr = byId(idW);

	div.appendChild(checkbox);
	div.appendChild(label);

	const iTtip = cElement("i");
	if (ttip != "") {
		iTtip.className = "fa fa-question-circle fa-2";
		iTtip.setAttribute("aria-hidden", "true");
		iTtip.style.display = "inline-block";
		iTtip.style.fontWeight = "900";
		iTtip.style.fontSize = "15px";
		iTtip.style.opacity = "0.5";
		iTtip.style.marginLeft = "8px";

		iTtip.setAttribute("data-ttip", ttip);
	}

	cntr.appendChild(div);

	if (ttip != "") {
		cntr.appendChild(iTtip);
	}

	uBool.push(idIt);
}

function cCustoms(idW, idIt, ttip = "", fnc = (cEl) => { }, stylez = {}) {
	if (idIt == "rnd")
		idIt = gRndId();

	if (checkElmnt(idW, idIt))
		return;

	const cntr = byId(idW);

	const iTtip = cElement("i");
	iTtip.className = "fa fa-cog";
	iTtip.setAttribute("aria-hidden", "true");
	iTtip.style.display = "inline-block";
	iTtip.style.fontWeight = "900";
	iTtip.style.fontSize = "15px";
	iTtip.style.opacity = "0.5";
	iTtip.style.marginLeft = "8px";
	iTtip.style.cursor = "pointer";
	iTtip.cid = idIt + "_dlg";

	if (ttip != "")
		iTtip.setAttribute("data-ttip", ttip);

	iTtip.onclick = async () => {
		showDlg(iTtip.cid);
	}

	cDlg(idW, iTtip.cid, stylez);

	fnc(iTtip);

	cntr.appendChild(iTtip);
}

function cSlrFloat(idW, idIt, lbl, min, max, stepVal, defVal, ttip = "") {
	if (idIt == "rnd")
		idIt = gRndId();

	if (checkElmnt(idW, idIt))
		return;

	var sValCeros = (String(stepVal).split(".")[1] || "");
	sValCeros = sValCeros.length;

	const div = cElement('div');
	div.classList.add('length', 'f_slider_bg');
	div.setAttribute('data-min', min);
	div.setAttribute('data-max', max);
	div.style.display = "inline-flex";

	const titleDiv = cElement('div');
	titleDiv.classList.add('l_title', 'f_title');
	titleDiv.setAttribute('data-length', defVal);
	titleDiv.textContent = lbl + ": ";

	const numInput = cElement("input");
	numInput.classList.add("numberslider");
	numInput.type = "number";
	numInput.pattern = "[0-9]*";
	numInput.inputMode = "numeric";
	numInput.id = idIt;
	numInput.min = min;
	numInput.max = max;
	numInput.step = stepVal;
	numInput.value = defVal;
	numInput.oninput = () => {
		uServer();
		applyFill(numInput, true, sValCeros, numInput.value);
	};

	const minBtn = cElement("button");
	minBtn.classList.add("controls-number");
	minBtn.style.display = "inline";
	minBtn.style.marginLeft = "8px";
	minBtn.style.marginRight = "8px";
	minBtn.innerHTML = ("&#8722;").trim();
	minBtn.onclick = () => {
		sumRestBtn(idIt, 0, min, max, 1, sValCeros);
		uServer();
		applyFill(numInput, true, sValCeros, numInput.value);
	};

	const plusBtn = cElement("button");
	plusBtn.classList.add("controls-number");
	plusBtn.style.display = "inline";
	plusBtn.style.marginLeft = "8px";
	plusBtn.style.marginRight = "8px";
	plusBtn.innerHTML = ("&#43;").trim();
	plusBtn.onclick = () => {
		sumRestBtn(idIt, 1, min, max, 1, sValCeros);
		uServer();
		applyFill(numInput, true, sValCeros, numInput.value);
	};

	const cntr = byId(idW);
	div.appendChild(titleDiv);
	div.appendChild(minBtn);
	div.appendChild(numInput);
	div.appendChild(plusBtn);

	const iTtip = cElement("i");
	if (ttip != "") {
		iTtip.className = "fa fa-question-circle fa-2";
		iTtip.setAttribute("aria-hidden", "true");
		iTtip.style.display = "inline-block";
		iTtip.style.fontWeight = "900";
		iTtip.style.fontSize = "15px";
		iTtip.style.opacity = "0.5";
		iTtip.style.marginLeft = "8px";

		iTtip.setAttribute("data-ttip", ttip);
	}

	cntr.appendChild(div);

	if (ttip != "") {
		cntr.appendChild(iTtip);
	}

	uFlt.push(idIt);
}

function cImg(idW, idIt, src, width, height, stylez = {}, elemnt = {}) {
	if (idIt == "rnd")
		idIt = gRndId();

	if (checkElmnt(idW, idIt))
		return;


	const cntr = byId(idW);
	const img = cElement("img");

	img.setAttribute('id', idIt);
	img.setAttribute('src', src);
	img.setAttribute('alt', "u_avatar");
	img.setAttribute('width', width);
	img.setAttribute('height', height);

	if (elemnt) {
		Object.assign(img, elemnt);

		if (elemnt.eventListener) {
			for (let eventName in elemnt.eventListener) {
				img.addEventListener(eventName, (event) => {
					elemnt.eventListener[eventName](this, event);
				});
			}
		}
	}

	if (stylez) {
		Object.assign(img.style, stylez);
	}

	cntr.appendChild(img);
}

function cTextArea(idW, idIt, hidden = false, lbl = "", stylez = {}, elemnt = {}) {
	if (idIt == "rnd")
		idIt = gRndId();

	if (checkElmnt(idW, idIt))
		return;

	const textboxDiv = cElement("div");
	if (lbl !== "") {
		textboxDiv.classList.add("textbox");

		const labelElem = cElement("label");
		labelElem.textContent = lbl.trim();
		labelElem.id = idIt + "lbl";
		labelElem.style.display = hidden ? "none" : "inline-block";
		labelElem.setAttribute("for", idIt);

		if (stylez && stylez.labelz) {
			Object.assign(textboxDiv.style, stylez.labelz);
		}
		textboxDiv.appendChild(labelElem);
	}

	const textArea = cElement("textarea");

	textArea.id = idIt;

	if (elemnt) {
		Object.assign(textArea, elemnt);

		if (elemnt.eventListener) {
			for (let eventName in elemnt.eventListener) {
				textArea.addEventListener(eventName, () => {
					elemnt.eventListener[eventName](this);
				});
			}
		}
	}

	textArea.style.display = hidden ? "none" : "inline-block";

	if (stylez) {
		Object.assign(textArea.style, stylez);

		if (stylez.textbox) {
			Object.assign(textboxDiv.style, stylez.textbox);
		}
	}

	if (lbl !== "") {
		textboxDiv.appendChild(textArea);
	} else {
		const cntr = byId(idW);
		cntr.appendChild(textArea);
	}

	const cntr = byId(idW);
	if (lbl === "" && cntr) {
		cntr.appendChild(textArea);
	} else if (cntr) {
		cntr.appendChild(textboxDiv);
	}
}

function cTxtbox(idW, idIt, hidden = false, lbl = "", ttip = "", stylez = {}, elemnt = {}, disStyle = false) {
	if (idIt == "rnd")
		idIt = gRndId();

	if (checkElmnt(idW, idIt))
		return;

	const textboxDiv = cElement("div");
	if (lbl !== "") {
		textboxDiv.classList.add("textbox");

		const labelElem = cElement("label");
		labelElem.textContent = lbl.trim();
		labelElem.id = idIt + "lbl";
		labelElem.style.display = hidden ? "none" : "inline-block";
		labelElem.setAttribute("for", idIt);

		if (stylez && stylez.labelz) {
			Object.assign(textboxDiv.style, stylez.labelz);
		}

		textboxDiv.appendChild(labelElem);
	}

	const input = cElement("input");
	input.setAttribute("type", "text");
	input.setAttribute("id", idIt);

	if (disStyle)
		input.setAttribute('data-novalidinvalid', '');

	if (ttip != "") {
		input.setAttribute("data-ttip", ttip)
	}

	if (elemnt) {
		Object.assign(input, elemnt);

		if (elemnt.eventListener) {
			for (let eventName in elemnt.eventListener) {
				input.addEventListener(eventName, (ev) => {
					elemnt.eventListener[eventName](input, ev);
				});
			}
		}
	}

	input.style.display = hidden ? "none" : "inline-block";

	if (stylez) {
		Object.assign(input.style, stylez);

		if (stylez.textbox) {
			Object.assign(textboxDiv.style, stylez.textbox);
		}
	}

	if (lbl !== "") {
		textboxDiv.appendChild(input);
	} else {
		const cntr = byId(idW);
		cntr.appendChild(input);
	}

	const cntr = byId(idW);
	if (lbl === "" && cntr) {
		cntr.appendChild(input);
	} else if (cntr) {
		cntr.appendChild(textboxDiv);
	}
}

function cTable(idW, idIt, txt, stylez = {}, elemnt = {}) {
	if (idIt == "rnd")
		idIt = gRndId();

	if (checkElmnt(idW, idIt))
		return;

	const txtDiv = cElement("table");

	if (txt != "")
		txtDiv.innerHTML = txt.trim();

	txtDiv.id = idIt;

	if (elemnt) {
		Object.assign(txtDiv, elemnt);

		if (elemnt.eventListener) {
			for (let eventName in elemnt.eventListener) {
				txtDiv.addEventListener(eventName, () => {
					elemnt.eventListener[eventName](this);
				});
			}
		}
	}

	if (stylez) {
		Object.assign(txtDiv.style, stylez);
	}

	const cntr = byId(idW);
	cntr.appendChild(txtDiv);
}

function cText(idW, idIt, txt, cs = {}) {
	if (idIt == "rnd")
		idIt = gRndId();

	if (checkElmnt(idW, idIt))
		return;

	const txtDiv = cElement("p");
	txtDiv.classList.add("text");

	if (txt)
		txtDiv.innerHTML = txt.trim();

	txtDiv.id = idIt;

	if (cs.events) {
		for (let eventName in cs.events) {
			txtDiv.addEventListener(eventName, (ev) => {
				cs.events[eventName](txtDiv, ev);
			});
		}
	}

	if (cs.el) {
		Object.assign(txtDiv, cs.el);
	}

	if (cs.st) {
		Object.assign(txtDiv.style, cs.st);
	}

	if (cs.st2) {
		Object.assign(txtDiv.style, cs.st2);
	}

	const cntr = byId(idW);
	cntr.appendChild(txtDiv);

	if (cs.fn != undefined)
		cs.fn(txtDiv);
}

function cComboBox2(idW, idIt, opts, hidden = false, ttip = "", stylez = {}) {
	if (idIt == "rnd")
		idIt = gRndId();

	if (checkElmnt(idW, idIt))
		return;

	const selectElem = cElement("select");
	selectElem.classList.add("select-dropdown");
	selectElem.id = idIt;

	if (ttip != "") {
		selectElem.setAttribute("data-ttip", ttip);
	}

	opts.forEach((option, index) => {
		const optElem = cElement("option");
		optElem.value = index;
		optElem.text = option;
		selectElem.add(optElem);
	});

	selectElem.style.display = ((hidden == true) ? ("none") : ("inline-block"));

	if (stylez) {
		Object.assign(selectElem.style, stylez);
	}

	const cntr = byId(idW);
	cntr.appendChild(selectElem);
}

function cComboBox(idW, idIt, txt, min, max, sameline = false, ttip = "", fnc = (cEl) => { }, stylez = {}) {
	if (idIt == "rnd")
		idIt = gRndId();

	if (checkElmnt(idW, idIt))
		return;

	const txtDiv = cElement("div");
	if (txt != "") {
		txtDiv.classList.add("text");
		txtDiv.textContent = txt.trim();
	}

	const selectElem = cElement("select");
	selectElem.classList.add("select-dropdown");
	selectElem.id = idIt;
	selectElem.style.height = "42px";

	if (sameline)
		selectElem.style.marginRight = "10px";

	selectElem.onchange = () => {
		sInt(idIt, min, max);
		fnc(selectElem);
	};

	if (stylez) {
		Object.assign(selectElem.style, stylez);

		if (stylez.text_div) {
			Object.assign(txtDiv.style, stylez.text_div);
		}
	}

	const cntr = byId(idW);
	if (txt != "") {
		cntr.appendChild(txtDiv);
	}
	cntr.appendChild(selectElem);

	const iTtip = cElement("i");
	if (ttip != "") {
		iTtip.className = "fa fa-question-circle fa-2";
		iTtip.setAttribute("aria-hidden", "true");
		iTtip.style.display = "inline";
		iTtip.style.position = "relative";
		iTtip.style.marginLeft = "8px"
		iTtip.style.fontWeight = "900";
		iTtip.style.fontSize = "15px";
		iTtip.style.opacity = "0.5";

		iTtip.setAttribute("data-ttip", ttip);
		cntr.appendChild(iTtip);
	}

	uInt2.push(idIt);
}

function cLoading(idW = pId, idIt, stylez = {}) {
	const div = document.createElement('div');
	div.classList.add('loader', 'loader--style8');
	div.id = idIt;

	const svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');
	svg.setAttribute('version', '1.1');
	svg.setAttribute('width', '24px');
	svg.setAttribute('height', '30px');
	svg.setAttribute('viewBox', '0 0 24 30');
	svg.style.cssText = 'enable-background:new 0 0 50 50;';

	for (let i = 0; i < 3; i++) {
		const rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');
		rect.setAttribute('x', `${i * 8}`);
		rect.setAttribute('y', '10');
		rect.setAttribute('width', '4');
		rect.setAttribute('height', '10');
		rect.setAttribute('fill', 'orange');
		rect.setAttribute('opacity', '0.2');

		const animateOpacity = document.createElementNS('http://www.w3.org/2000/svg', 'animate');
		animateOpacity.setAttribute('attributeName', 'opacity');
		animateOpacity.setAttribute('attributeType', 'XML');
		animateOpacity.setAttribute('values', '0.2; 1; .2');
		animateOpacity.setAttribute('begin', `${i * 0.15}s`);
		animateOpacity.setAttribute('dur', '0.6s');
		animateOpacity.setAttribute('repeatCount', 'indefinite');

		const animateHeight = document.createElementNS('http://www.w3.org/2000/svg', 'animate');
		animateHeight.setAttribute('attributeName', 'height');
		animateHeight.setAttribute('attributeType', 'XML');
		animateHeight.setAttribute('values', '10; 20; 10');
		animateHeight.setAttribute('begin', `${i * 0.15}s`);
		animateHeight.setAttribute('dur', '0.6s');
		animateHeight.setAttribute('repeatCount', 'indefinite');

		const animateY = document.createElementNS('http://www.w3.org/2000/svg', 'animate');
		animateY.setAttribute('attributeName', 'y');
		animateY.setAttribute('attributeType', 'XML');
		animateY.setAttribute('values', '10; 5; 10');
		animateY.setAttribute('begin', `${i * 0.15}s`);
		animateY.setAttribute('dur', '0.6s');
		animateY.setAttribute('repeatCount', 'indefinite');

		rect.appendChild(animateOpacity);
		rect.appendChild(animateHeight);
		rect.appendChild(animateY);

		svg.appendChild(rect);
	}

	div.appendChild(svg);

	if (stylez) {
		Object.assign(div.style, stylez);
	}

	const targetElement = byId(idW) || document.body;
	targetElement.appendChild(div);
}

function cSlrInt(idW, idIt, iTxt, min, max, step, value, ttip = "", stylez = {}) {
	if (idIt == "rnd")
		idIt = gRndId();

	if (checkElmnt(idW, idIt))
		return;

	const cntr = byId(idW);

	const div = cElement('div');
	div.classList.add('length', 'r_slider_bg');
	div.setAttribute('data-min', min);
	div.setAttribute('data-max', max);
	div.style.display = "inline-flex";
	if (stylez && stylez.bgz) {
		Object.assign(div.style, stylez.bgz);
	}

	const titleDiv = cElement('div');
	titleDiv.classList.add('l_title', 'f_title');
	titleDiv.setAttribute('data-length', value);
	titleDiv.textContent = iTxt + ": ";
	if (stylez && stylez.titlez) {
		Object.assign(titleDiv.style, stylez.titlez);
	}

	const input = cElement('input');

	const minusBtn = cElement("button");
	minusBtn.className = "controls-number";
	minusBtn.style.display = "inline";
	minusBtn.style.marginLeft = "8px";
	minusBtn.style.marginRight = "8px";
	minusBtn.innerHTML = ("&#8722;").trim();
	minusBtn.onclick = () => {
		sumRestBtn(idIt, 0, min, max);
		sInt(idIt, min, max);
		applyFill(input);
	};

	const plusBtn = cElement("button");
	plusBtn.className = "controls-number";
	plusBtn.style.display = "inline";
	plusBtn.style.marginLeft = "8px";
	plusBtn.style.marginRight = "8px";
	plusBtn.innerHTML = ("&#43;").trim();
	plusBtn.onclick = () => {
		sumRestBtn(idIt, 1, min, max);
		sInt(idIt, min, max);
		applyFill(input);
	};

	input.classList.add('slider');
	input.setAttribute("id", idIt);
	input.setAttribute('type', 'range');
	input.setAttribute('min', min);
	input.setAttribute('max', max);
	input.setAttribute('step', step);
	input.setAttribute('value', value);
	input.onchange = () => {
		sInt(idIt, min, max);
		applyFill(input);
	};

	div.appendChild(titleDiv);
	div.appendChild(minusBtn);
	div.appendChild(input);
	div.appendChild(plusBtn);

	cntr.appendChild(div);

	const iTtip = cElement("i");
	if (ttip != "") {
		iTtip.className = "fa fa-question-circle fa-2";
		iTtip.setAttribute("aria-hidden", "true");
		iTtip.style.display = "inline";
		iTtip.style.position = "relative";
		iTtip.style.marginLeft = "8px"
		iTtip.style.fontWeight = "900";
		iTtip.style.fontSize = "15px";
		iTtip.style.opacity = "0.5";

		if (stylez && stylez.ttips) {
			Object.assign(iTtip.style, stylez.ttips);
		}

		iTtip.setAttribute("data-ttip", ttip);
		cntr.appendChild(iTtip);
	}

	uInt.push(idIt);
}

function uSliders() {
	const iSliders = document.querySelectorAll(".r_slider_bg");

	iSliders.forEach((slider) => {
		const sliderInput = slider.querySelector(".slider");
		const sliderValue = slider.querySelector(".l_title");

		sliderInput.addEventListener("input", (event) => {
			sliderValue.setAttribute("data-length", event.target.value);
			applyFill(event.target);
		});

		applyFill(sliderInput);
	});

	const fSliders = document.querySelectorAll(".f_slider_bg");

	fSliders.forEach(async (slider) => {
		const sliderInput = slider.querySelector(".numberslider");

		let sValCeros = (String(sliderInput.step).split(".")[1] || "");

		applyFill(sliderInput, true, sValCeros.length, sliderInput.value);
	});
}

function applyFill(sElm, isFlt = false, fltParse = 1, val) {
	if (isFlt) {
		sElm.parentNode.querySelector(".l_title").setAttribute("data-length", parseFloat(val).toFixed(fltParse));
		sElm.style.background = cStyles.bgSliders;
		sElm.style.color = 'var(--c-text)';
		sElm.style.borderRadius = "5px";
		sElm.style.border = "1px solid var(--c-contornos)";
		return;
	}

	const percentage = ((100 * (sElm.value - sElm.min)) / (sElm.max - sElm.min)).toFixed(1);
	const bg = `linear-gradient(90deg, var(--c-primary) 0%, var(--c-secondary) ${percentage}%, ${cStyles.bgSliders} ${percentage}%, ${cStyles.bgSliders} 100%)`;
	sElm.style.background = bg;
	sElm.parentNode.querySelector(".l_title").setAttribute("data-length", sElm.value);
}

function sumRestBtn(idIt, sum, min, max, isFlt = 0, fltParse = 1) {
	if (byId(idIt) == undefined) {
		cLog(idIt, "doesnt exist");
		return;
	}

	if (isFlt) {
		if (sum) {
			if (byId(idIt).value > max)
				byId(idIt).value = parseFloat(max);
			else
				byId(idIt).value = (parseFloat(byId(idIt).value) + parseFloat(byId(idIt).step)).toFixed(fltParse);
		} else {
			if (byId(idIt).value < min)
				byId(idIt).value = parseFloat(max);
			else
				byId(idIt).value = (parseFloat(byId(idIt).value) - parseFloat(byId(idIt).step)).toFixed(fltParse);
		}
	}
	else {
		if (sum) {
			if (byId(idIt).value > max)
				byId(idIt).value = parseInt(max);
			else
				byId(idIt).value = parseFloat(byId(idIt).value) + parseFloat(byId(idIt).step);
		} else {
			if (byId(idIt).value < min)
				byId(idIt).value = parseInt(max);
			else
				byId(idIt).value = parseFloat(byId(idIt).value) - parseFloat(byId(idIt).step);
		}
	}
}

window.mobileCheck = () => {
	let check = false;
	((a) => { if (/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a) || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(a.substr(0, 4))) check = true; })(navigator.userAgent || navigator.vendor || window.opera);
	return check;
};

window.steamCheck = () => {
	let userAgent = navigator.userAgent.toLowerCase();
	let isSteamBrowser = userAgent.indexOf("steam") > -1;
	return isSteamBrowser;
};

if (!window.mobileCheck()) {
	byId("qrcode_text").innerHTML = "scan on mobile or enter: " + window.location.hostname + " on your mobile browser";
	byId("qrimage").src = "https://chart.googleapis.com/chart?cht=qr&chl=" + window.location.hostname + "&chs=250x250&chld=L|0";

	window.onload = () => {
		if (window.innerWidth < 1000) {
			tPanel('left_panel');
			tPanel();
		}
		else {
			if (window.steamCheck()) {
				byId("right_panel").style.opacity = 0;
				byId("right_panel").style.width = "0px";

				setTimeout(async () => {
					byId("right_panel").style.display = "none";
				}, 250);

				byId("left_panel").style.opacity = 0;
				byId("left_panel").style.width = "0px";

				setTimeout(async () => {
					byId("left_panel").style.display = "none";
				}, 250);

				notify("panels disabled on steam.");
			} else {
				byId("right_panel").style.opacity = 1;
				setTimeout(async () => {
					byId("right_panel").style.display = "block";
				}, 250);

				byId("left_panel").style.opacity = 1;
				setTimeout(async () => {
					byId("left_panel").style.display = "block";
				}, 250);
			}
		}
	};
}
else {
	document.body.style.zoom = "75%";
	tPanel('left_panel');
	tPanel();
	byId("qrcode_text").innerHTML = "only on pc".trim();
	byId("qrimage").style.display = "none";
}

function strToBool(str) {
	switch (str.toLowerCase().trim()) {
		case "true":
		case "yes":
		case "1":
			return true;
		case "false":
		case "no":
		case "0":
		case null:
			return false;
		default:
			return Boolean(str);
	}
}

function gBool(mdl) {
	$.get("/g_bool?feature=" + mdl, (rTxt) => {
		if (byId(mdl) == undefined) {
			cLog(mdl, "doesnt exist");
			return;
		}

		byId(mdl).checked = strToBool(rTxt);
	});
}

function gInt(mdl, ret = true) {
	$.get("/g_int?feature=" + mdl, (rTxt) => {
		if (byId(mdl) == undefined) {
			cLog(mdl, "doesnt exist");
			return;
		}

		byId(mdl).value = rTxt;

		if (mdl.includes("theme_select")) {
			byId(mdl).dispatchEvent(new Event("change"));
		}

		if (ret) {
			if (byId(mdl + "z") != undefined)
				byId(mdl + "z").innerHTML = byId(mdl).value;
		}
	});
}

function gFloat(mdl) {
	$.get("/g_float?feature=" + mdl, (rTxt) => {
		if (byId(mdl) == undefined) {
			cLog(mdl, "doesnt exist");
			return;
		}

		var sValCeros = (String(byId(mdl).step).split(".")[1] || "");

		byId(mdl).value = parseFloat(rTxt).toFixed(sValCeros.length);

		if (byId(mdl + "z") != undefined)
			byId(mdl + "z").innerHTML = byId(mdl).value;
	});
}

function sBool(mdl) {
	let modulez = byId(mdl);
	if (modulez == undefined) {
		cLog(mdl, "doesnt exist")
		return;
	}
	var value = modulez.checked;

	$.get("/s_bool?feature=" + mdl + "&val=" + value, (rTxt) => { });
}

function sInt(mdl, min = 0, max = 0) {
	let modulez = byId(mdl);
	if (modulez == undefined) {
		cLog(mdl + " not found");
		return;
	}

	var value = modulez.value;

	if (min == 0 && max == 0) {
		$.get("/s_int?feature=" + mdl + "&val=" + value, (rTxt) => {
			var elementExists = byId(mdl + "z");
			if (elementExists != undefined || elementExists != null)
				elementExists.innerHTML = rTxt;
		});
	} else {
		if (parseInt(value) >= parseInt(min) && parseInt(value) <= parseInt(max)) {
			$.get("/s_int?feature=" + mdl + "&val=" + value, (rTxt) => {
				var elementExists = byId(mdl + "z");
				if (elementExists != undefined || elementExists != null)
					elementExists.innerHTML = rTxt;
			});
		}
		else {
			cLog("minmax overpassed | ", value, min, max);
		}
	}
}

function sFloat(mdl) {
	let modulez = byId(mdl);
	if (modulez == undefined) {
		cLog(mdl, "doesnt exist")
		return;
	}

	var value = parseFloat(modulez.value);
	var min = parseFloat(modulez.min);
	var max = parseFloat(modulez.max);

	if (value >= min && value <= max) {
		$.get("/s_float?feature=" + mdl + "&val=" + value, (rTxt) => {
			if (byId(mdl + "z") != undefined)
				byId(mdl + "z").innerHTML = rTxt;
		});
	}
}

function sInfo(mdl, val, fnc = () => { }) {
	$.get("/s_info?feature=" + mdl + "&val=" + val, (rTxt) => {
		fnc();
	});
}

function gRndId(len = 8) {
	var id = '';
	var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';
	var charactersLength = characters.length;

	id = '';

	for (var i = 0; i < len; i++) {
		id += characters.charAt(Math.floor(Math.random() * charactersLength));
	}

	return id;
}

function sBtn(mdl, val = "") {
	return new Promise((resolve, reject) => {
		if (val == "") {
			$.get("/toggle?feature=" + mdl, (rTxt) => {
				resolve(rTxt);
			}).fail((error) => {
				reject(error);
			});
		} else {
			$.get("/toggle?feature=" + mdl + "&val=" + val, (rTxt) => {
				resolve(rTxt);
			}).fail((error) => {
				reject(error);
			});
		}
	});
}

function cExit() {
	sBtn("dead");
	setTimeout(() => {
		window.open("", "_self", "");
		window.close();
		history.go(-1);
		navigator.app.backHistory();
		window.location.reload();
	}, 5000);
}

function fCombo(idIt, idSv) {
	$.get("/g_info?info=" + idSv, (rTxt) => {
		var select = byId(idIt);

		if (select == undefined) {
			cLog(idIt, "doesnt exist");
			return;
		}

		var response = window.atob(rTxt);

		if (response != null) {
			response = JSON.parse(response);
			if (response != null) {
				select.innerHTML = ("").trim();

				for (const key in response) {
					if (Object.hasOwnProperty.call(response, key)) {
						const element = response[key];
						var opt = cElement("option");
						opt.value = key;
						opt.id = idIt + "_" + key;
						opt.innerHTML = element["id"];
						select.appendChild(opt);
					}
				}
			}
		}
	});
}

window.addEventListener("resize", () => {
	if (window.innerWidth < 1000) {
		tPanel('left_panel', 1);
		tPanel('right_panel', 1);
	}
	else {
		tPanel('left_panel', 2);
		tPanel('right_panel', 2);
	}
});

async function tPanel(id = "right_panel", type = 0) {
	const pElm = byId(id);
	if (type == 0) {
		if (pElm.style.display != "none") {
			pElm.style.width = "0px";
			pElm.style.height = "0px";
			pElm.style.opacity = "0";
			setTimeout(async () => {
				pElm.style.display = "none";
			}, 250);

			if (window.mobileCheck() || (window.innerWidth < 1000)) {
				byId("center_panel").style.display = "block";
				if ((id).includes("right")) {
					byId("m_t_right_panel").style.display = "none";
				}
				else {
					byId("m_t_left_panel").style.display = "none";
				}
			}
		}
		else {
			pElm.style.display = "block";
			await setTimeout(async () => { }, 250);

			pElm.style.width = "auto";
			pElm.style.height = "auto";
			pElm.style.opacity = "1";

			if (window.mobileCheck() || (window.innerWidth < 1000)) {
				byId("center_panel").style.display = "none";
				if ((id).includes("right")) {
					byId("m_t_right_panel").style.display = "block";
				}
				else {
					byId("m_t_left_panel").style.display = "block";
				}
			}

		}
	}
	else {
		if (pElm.style.display != "none" && type == 1) {
			pElm.style.width = "0px";
			pElm.style.height = "0px";
			pElm.style.opacity = "0";
			setTimeout(async () => {
				pElm.style.display = "none";
			}, 250);

			if (window.mobileCheck() || (window.innerWidth < 1000)) {
				byId("center_panel").style.display = "block";
				if ((id).includes("right")) {
					byId("m_t_right_panel").style.display = "none";
				}
				else {
					byId("m_t_left_panel").style.display = "none";
				}
			}
		}
		else if (type == 2 && pElm.style.display == "none") {
			pElm.style.display = "block";
			await sleep(250);

			pElm.style.width = "auto";
			pElm.style.height = "auto";
			pElm.style.opacity = "1";

			if (window.mobileCheck() || (window.innerWidth < 1000)) {
				byId("center_panel").style.display = "none";
				if ((id).includes("right")) {
					byId("m_t_right_panel").style.display = "block";
				}
				else {
					byId("m_t_left_panel").style.display = "block";
				}
			}

		}
	}
}

var notifyId = 0, notifyCntr = document.querySelector("#notification-container");
function notify(a, b, d) { b = void 0 === b ? 2500 : b; d = ++notifyId; var c = cElement("div"); c.classList.add("notification"); c.innerHTML = ("<p>" + a + "</p><button class='close-button' data-notification-id='" + d + "'>&times;</button>").trim(); c.style.marginLeft = "auto"; c.style.width = "fit-content"; notifyCntr.appendChild(c); setTimeout(() => { c.style.opacity = "0"; setTimeout(() => { c.remove() }, 450) }, b); (a = c.previousSibling) && a.style && (a.style.marginTop = "6px") }
notifyCntr.addEventListener("click", (a) => { if (a.target.classList.contains("close-button")) { var b = document.querySelector("[data-notification-id='" + a.target.dataset.notificationId + "']").parentElement; b.style.opacity = "0"; setTimeout(() => { b.remove() }, 250); (a = b.previousSibling) && a.style && (a.style.marginTop = "6px") } });
async function sleep(ms) { return new Promise(resolve => setTimeout(resolve, ms)); }

function gTmInt() { return Math.round(+new Date() / 1000); }

function gTmStr(tms, hrmin = 1) {
	var date = new Date(+tms * 1000);
	if (hrmin == 1) {
		var hour = ("0" + date.getHours()).substr(-2);
		var minutes = ("0" + date.getMinutes()).substr(-2);
		return (hour + ":" + minutes);
	}
	else if (hrmin == 2) {
		var hour = ("0" + date.getHours()).substr(-2);
		var minutes = ("0" + date.getMinutes()).substr(-2);
		var year = date.getFullYear();
		var month = ("0" + (date.getMonth() + 1)).substr(-2);
		var day = ("0" + date.getDate()).substr(-2);
		return (day + "/" + month + "/" + year) + " - " + (hour + ":" + minutes);
	}
	else {
		var year = date.getFullYear();
		var month = ("0" + (date.getMonth() + 1)).substr(-2);
		var day = ("0" + date.getDate()).substr(-2);
		return (day + "/" + month + "/" + year);
	}
}

function checkDlg(idD) {
	var modal = byId(idD);
	if (modal) {
		return modal.hasAttribute('open');
	}
	return false;
}

function showDlg(idD) {
	var modal = byId(idD);
	if (modal) {
		return modal.showModal();
	}
	return false;
}

function closeDlg(idD) {
	var modal = byId(idD);
	if (modal) {
		return modal.close();
	}
	return false;
}

function cTxtValid(id, wrn = false) {
	let elmnt = byId(id);
	if (elmnt) {
		if (wrn) {
			if (!elmnt.validity.valid)
				alert('invalid input\n* no symbols, {' + elmnt.minLength + '-' + elmnt.maxLength + " chars only}");

			return elmnt.validity.valid;
		}
		else
			return elmnt.validity.valid;
	}
	else
		return false;
}

function checkElmnt(id1, id2) {
	if (!byId(id1)) {
		cLog(id1, "doesnt exist");
		return true;
	}

	if (id2) {
		if (byId(id2)) {
			cLog(id2, "already exists");
			return true;
		}
	}

	return false;
}

function searchTable(idi, idt) {
	var input, filter, table, tr, td, i, j, txtValue;
	input = byId(idi);
	filter = input.value.toUpperCase();
	table = byId(idt);
	tr = table.getElementsByTagName("tr");

	for (i = 1; i < tr.length; i++) {
		tr[i].style.display = "none";

		td = tr[i].getElementsByTagName("td");
		for (j = 0; j < td.length; j++) {
			if (td[j]) {
				txtValue = td[j].textContent || td[j].innerText;
				if (txtValue.toUpperCase().indexOf(filter) > -1) {
					tr[i].style.display = "";
					break;
				}
			}
		}
	}
}

function sortTable(n, id) {
	var table,
		rows,
		switching,
		i,
		x,
		y,
		shouldSwitch,
		dir,
		switchCnt = 0;
	table = byId(id);
	switching = true;
	dir = "asc";
	while (switching) {
		switching = false;
		rows = table.rows;
		for (i = 1; i < rows.length - 1; i++) {
			shouldSwitch = false;
			x = rows[i].getElementsByTagName("TD")[n];
			y = rows[i + 1].getElementsByTagName("TD")[n];
			if (dir == "asc") {
				if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {
					shouldSwitch = true;
					break;
				}
			} else if (dir == "desc") {
				if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {
					shouldSwitch = true;
					break;
				}
			}
		}
		if (shouldSwitch) {
			rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
			switching = true;
			switchCnt++;
		} else {
			if (switchCnt == 0 && dir == "asc") {
				dir = "desc";
				switching = true;
			}
		}
	}
}

function cTheme() {
	const container = document.body;
	const themeSelect = byId('theme_select');
	const selected = themeSelect.value;
	container.setAttribute('data-theme', selected);
	sInt('theme_select');
}

async function lServer() {
	await sleep(1500);
	rInfo();
	await sleep(1500);
	uSliders();
	await sleep(100);
	pSnd("snd1");
}
lServer();

function cLog(...args) {
	console.log(...args);
};

cLog("breaking coconuts");///////////////////////////////////////////////////////";
eval(atob(A));